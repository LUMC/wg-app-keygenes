{"version":3,"sources":["history.js","components/App.js","config.js","apis/SascWeb.js","constants/errorTypes.js","utils/generalHelpers.js","constants/types.js","constants/formValidationRules.js","components/modules/ButtonModule.js","components/modules/ContentModule.js","components/modules/ToolStepsModule.js","components/modules/ListModule.js","components/modules/FaqModule.js","components/modules/ContactCardsModule.js","components/helpers/redux-form-inputs/textInput.js","components/helpers/redux-form-inputs/fileInput.js","components/helpers/redux-form-inputs/selectInput.js","components/helpers/redux-form-inputs/index.js","components/modules/FormModule.js","components/modules/GeneBrowserModule/GeneFinder.js","components/modules/GeneBrowserModule/TissueFinder.js","components/modules/GeneBrowserModule/index.js","components/modules/moduleLoader.js","components/Page.js","containers/AppContainer.js","actions/configActions.js","actions/collectionActions.js","actions/protocols/directProtocolActions.js","actions/modules/geneFinderActions.js","reducers/modules/genefinder/index.js","reducers/modules/genefinder/suggestionsReducer.js","reducers/modules/genefinder/activeGeneReducer.js","reducers/modules/genefinder/transcriptsReducer.js","reducers/modules/genefinder/activeTissueReducer.js","reducers/modules/genefinder/tissueCountsReducer.js","reducers/modules/genefinder/tissueGenesReducer.js","reducers/modules/index.js","reducers/index.js","reducers/protocols/protocolStatusReducer.js","reducers/applicationReducer.js","reducers/configReducer.js","reducers/collectionsReducer.js","index.js"],"names":["createBrowserHistory","charPoses","exit","opacity","y","enter","delay","_ref","charIndex","App","items","length","react_default","a","createElement","Dropdown","text","pointing","className","Menu","map","item","key","Item","name","reference","concat","as","Link","to","this","props","menu","subitems","inverted","widths","secondary","react_router","history","subitem","push","renderSubMenu","Fragment","Transition","visible","sloganText","animation","duration","show","particles_default","params","particles","number","value","size","Container","Grid","columns","Row","verticalAlign","Column","textAlign","react_pose_text_es","initialPose","pose","applicationDetails","title","unmountOnHide","sub_title","renderMenu","activePageContent","Component","baseUrl","axios","create","baseURL","configError","moduleError","getOnlyPublished","data","_","values","filter","status","published","validateAttributes","obj","required_attributes","every","Object","keys","includes","validateReferenceAlias","hasOwnProperty","throwError","classCallCheck","config","message","console","error","module","moduleAttr","attrs","min","collections","protocol","application","modules","GET_SUGGESTIONS","SET_ACTIVE_GENE","GET_GENE_COUNTS","SET_ACTIVE_TISSUE","SET_ACTIVE_STAGE","ButtonModule","setting","type","href","link","target","rel","Button","labelPosition","color","Icon","Label","basic","label","download","icon","moduleName","ContentModule","collection","pointer_set","keyBy","alias_ref","arguments","undefined","Header","getTitle","Parser","content","ToolStepModule","dir","dist_default","direction","time","step_name","description","tags","lineHeight","renderIconList","List","divided","relaxed","Content","Description","renderDownloadList","Image","avatar","circular","ListModule","FaqModule","question","answer","checkImage","cardData","image","full_url","e","ContactCardsModule","Card","Group","itemsPerRow","src","wrapped","ui","Meta","year_joined","year_left","job_description","extra","email","renderCard","required","redux_form_inputs_textInput","input","meta","inputAttr","Form","Field","Input","assign","autoComplete","touched","renderError","redux_form_inputs_fileInput","_ref2","_ref2$input","inputProps","objectWithoutProperties","omitMeta","redux_form_inputs_selectInput","selection","onChange","param","placeholder","textInput","fileInput","file","selectInput","select","FormModule","state","fileInputCode","onSubmit","formValues","dispatch","_this","reset","setState","Math","random","toString","substring","renderInputType","input_type","api_reference_parameter","component","validate","toLowerCase","options","createOptions","option_titles","option_values","index","titles","forEach","renderInputs","floated","_this2","protocolStatus","transitionOnMount","Segment","handleSubmit","renderForm","reduxForm","form","initialState","isLoading","selected","tissues","stages","graphSetting","GeneFinder","possibleConstructorReturn","getPrototypeOf","call","mapTissues","generatePlotTraces","plotTraces","stage_groups","groupBy","remove","currentObject","count","trace","x","mode","marker","generateSexPlotTraces","sex_groups","F","M","symbol","setGraph","handleResultSelect","result","setGene","ensg","getGeneCounts","id","handleSearchChange","event","getGeneSuggestions","chain","tissue","mapValues","stage","moduleData","geneCounts","plotTracesSex","active","onClick","react_plotly_default","toConsumableArray","layout","showlegend","height","hovermode","activeGene","yaxis","xaxis","categoryarray","Dimmer","Loader","_this$state","centered","width","Search","loading","onResultSelect","onSearchChange","debounce","leading","results","suggestions","renderGraph","searchTerm","downloadData","stageOptions","stageActive","stageName","TissueFinder","setActiveTissue","setTissue","innerText","genes","compact","renderTableContent","tissueGenes","gene","Table","Cell","CPM_avg","setActiveStage","activeTissue","filterGeneResults","renderDownloadData","ENSG","Symbol","AVG_count","count_avg","tissueCounts","log","dividing","action","react_json_to_csv_dist_default","filename","HeaderCell","Body","search","renderTable","GeneBrowser","panes","menuItem","render","Tab","Pane","attached","GeneBrowserModule_GeneFinder","GeneBrowserModule_TissueFinder","ModuleLoader","modules_ContentModule","modules_ButtonModule","ToolStepsModule","modules_ListModule","modules_FaqModule","modules_ContactCardsModule","modules_FormModule","GeneBrowserModule","modulesData","geneFinder","Page","settings","moduleLoader","page","getCollection","inputs","path","renderModules","AppContainer","pageView","api","directProtocol","getCollections","settingItem","uniq","loadConfig","_callee","regenerator_default","wrap","_context","prev","next","getApplication","getConfig","stop","wrapTransition","object","setTimeout","bind","_this3","exact","components_Page","_this4","renderRoutes","isEmpty","document","documentElement","style","setProperty","primary_color","components_App","renderContent","indeterminate","inline","connect","asyncToGenerator","mark","publishedConfig","SascWebApi","get","sent","payload","_x","apply","_callee2","_context2","_x2","rawCollections","collectionData","bodyFormData","FormData","set","training","append","method","url","tool_reference","headers","Content-Type","Accept","_ref3","_callee3","_context3","post","tissueId","amount","adult","_x3","geneFinderReducers","combineReducers","counts","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","es","containers_AppContainer","getElementById"],"mappings":"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","file":"static/js/main.36c5d21a.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory();","import React, {Component} from 'react'\n\nimport {\n    Container, Dropdown,\n    Grid,\n    Menu,\n    Transition\n} from \"semantic-ui-react\";\nimport SplitText from 'react-pose-text';\nimport {Link, Router} from \"react-router-dom\";\nimport history from \"../history\";\nimport Particles from \"react-particles-js\";\n\nconst charPoses = {\n    exit: {opacity: 0, y: 20},\n    enter: {\n        opacity: 1,\n        y: 0,\n        delay: ({charIndex}) => charIndex * 60\n    }\n};\n\nclass App extends Component {\n    renderSubMenu(items){\n        if(items.length < 1){\n            return null\n        }\n        return (\n            <Dropdown text='More' pointing className='link item'>\n                <Dropdown.Menu>\n                    {\n                        items.map(\n                            (item, key) => (\n                                <Dropdown.Item\n                                        name={item.reference}\n                                        key={`menuItem-${key}`}\n                                        as={Link}\n                                        to={'/' + item.reference}>\n                                        {item.name}\n                                </Dropdown.Item>\n                            )\n                        )\n                    }\n                </Dropdown.Menu>\n            </Dropdown>\n        )\n    }\n    renderMenu() {\n        if (this.props.menu.length < 1) {\n            return null\n        }\n        const subitems = []\n        return (\n            <Menu inverted widths={6} className={'mainMenu'} pointing secondary>\n                <Router history={history}>\n                    {\n                        this.props.menu.map(\n                            (item, key) => {\n                                if(item.subitem){\n                                    subitems.push(item);\n                                    return null\n                                }\n                                return (\n                                    <Menu.Item\n                                        name={item.reference}\n                                        key={`menuItem-${key}`}\n                                        as={Link}\n                                        to={'/' + item.reference}>\n                                        {item.name}\n                                    </Menu.Item>)\n                            })\n                    }\n                    {\n                        this.renderSubMenu(subitems)\n                    }\n                </Router>\n            </Menu>\n        )\n    }\n\n    render() {\n        return (\n            <>\n                <div className='appContent'>\n                    <div className={'welcome'}>\n                        <Transition\n                            visible={this.props.sloganText}\n                            animation={\"fade up\"}\n                            duration={{show: 2000}}\n                        >\n                            <div>\n                                <Particles\n                                    className={'particles'}\n                                    params={{\n                                        \"particles\": {\n                                            \"number\": {\n                                                \"value\": 40\n                                            },\n                                            \"size\": {\n                                                \"value\": 3\n                                            }\n                                        }\n                                    }}/>\n                            </div>\n                        </Transition>\n                        <Container>\n                            <Grid columns={1}>\n                                <Grid.Row verticalAlign='middle' className={'welcome-box'}>\n                                    <Grid.Column textAlign={'center'}>\n                                        <div className=\"introName\">\n                                            <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n                                                {this.props.applicationDetails.title}\n                                            </SplitText>\n                                        </div>\n                                        <div className=\"sloganText\">\n                                            <Transition\n                                                unmountOnHide={false}\n                                                visible={this.props.sloganText}\n                                                animation={\"fade up\"}\n                                                duration={{show: 1000}}\n                                            >\n                                                <div>\n                                                    {this.props.applicationDetails.sub_title}\n                                                </div>\n                                            </Transition>\n                                        </div>\n                                    </Grid.Column>\n                                </Grid.Row>\n                                <Transition\n                                    unmountOnHide={false}\n                                    visible={this.props.sloganText}\n                                    animation={\"fade down\"}\n                                    duration={{show: 800}}\n                                >\n                                    <Grid.Row>\n                                        <Grid.Column>\n                                            {this.renderMenu()}\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                </Transition>\n                            </Grid>\n                        </Container>\n                    </div>\n                    <Transition\n                        unmountOnHide={false}\n                        visible={this.props.sloganText}\n                        animation={\"fade up\"}\n                        duration={{show: 1000}}\n                    >\n                        <div className={'page-section'}>\n                            <Container>\n                                {this.props.activePageContent}\n                            </Container>\n                        </div>\n                    </Transition>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default App","export const baseUrl='http://165.22.196.58:8080/keygenes/';\nexport const projectName='KeyGenes';\n","import axios from 'axios'\nimport {baseUrl} from \"../config\";\n\nexport default axios.create({\n   'baseURL': baseUrl\n});\n\n","export const configError = {\n    FAILED_CONFIG: \"application configuration could not be received from API\"\n};\n\nexport const moduleError = {\n    INVALID_MODULE: \"config item is assigned to an unknown module\",\n    INVALID_MODULE_ATTRS: `module config does not contain the required attrs`,\n    INVALID_MODULE_REF: \"reference alias doesn't refer to an item\",\n};\n","import _ from \"lodash\";\nimport {moduleError} from '../constants/errorTypes'\n\nexport const getOnlyPublished = (data) =>{\n\n    return _.values(_.filter(\n        data, function(item){ return item.status === 'published' || item.published === 'published' })\n    );\n};\n\nexport const validateAttributes = (obj, required_attributes) =>{\n    return (required_attributes.every(key => Object.keys(obj).includes(key)))\n};\n\nexport const validateReferenceAlias = (key, obj)=>{\n    return obj.hasOwnProperty(key)\n};\n\nexport class throwError{\n    static config = (message) =>{\n        console.error( `Configuration error -  ${message}`);\n    };\n    static module = (message) =>{\n        console.error( `Module error -  ${message}`);\n    };\n    static moduleAttr = (module, attrs) =>{\n        console.error( `Module error -  ${module} ${moduleError.INVALID_MODULE_ATTRS}: ${attrs}`);\n    };\n}","export const config = {\n    GET_CONFIG: \"GET_CONFIG\",\n    SET_CONFIG: \"SET_CONFIG\"\n};\n\nexport const collections = {\n    ADD_COLLECTION: \"ADD_COLLECTION\"\n};\n\nexport const protocol ={\n    PROTOCOL_COMPLETED:'PROTOCOL_COMPLETED',\n    PROTOCOL_FAILED :'PROTOCOL_FAILED',\n};\n\nexport const application ={\n    GET_APPLICATION_DONE: \"GET_APPLICATION_DONE\",\n    GET_APPLICATION_FAILED: \"GET_APPLICATION_FAILED\"\n};\n\nexport const modules ={\n    geneFinder: {\n        GET_SUGGESTIONS: \"GET_SUGGESTIONS\",\n        SET_ACTIVE_GENE: \"SET_ACTIVE_GENE\",\n        GET_GENE_COUNTS: \"GET_GENE_COUNTS\",\n        SET_ACTIVE_TISSUE: \"SET_ACTIVE_TISSUE\",\n        SET_ACTIVE_STAGE: \"SET_ACTIVE_STAGE\"\n    }\n\n};","export const required = value => value ? undefined : 'Required';\nexport const minValueChar = min => value => value.length && value.length < min ? `Must be at least ${min} characters` : undefined;\nexport const minValue5 = minValueChar(5);\nexport const email = value =>value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;","import React from 'react'\nimport {Button, Grid, Icon, Label} from \"semantic-ui-react\";\nimport {throwError} from \"../../utils/generalHelpers\";\n\n\nconst ButtonModule = (props) =>{\n    switch(props.setting.config.type) {\n        case 'github':\n            return(\n                <Grid.Row>\n                    <Grid.Column textAlign={'center'}>\n                        <a href={props.setting.config.config.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Button as='div' labelPosition='right'>\n                            <Button color='blue'>\n                                <Icon name='github' />\n                                GitHub\n                            </Button>\n                            <Label basic  pointing='left'>\n                                {props.setting.config.config.label}\n                            </Label>\n                        </Button>\n                        </a>\n                    </Grid.Column>\n                </Grid.Row>\n            );\n        case 'download':\n            return(\n                <Grid.Row>\n                    <Grid.Column textAlign={'center'}>\n                        <a href={props.setting.config.config.link} download target={'_blank'}>\n                        <Button icon labelPosition='left'>\n                            <Icon name='cloud' />\n                            {props.setting.config.config.label}\n                        </Button>\n                        </a>\n                    </Grid.Column>\n                </Grid.Row>\n            );\n        default:\n            throwError.module(`Button not rendered, type: ${props.moduleName} not found`);\n            return null;\n    }\n};\n\nexport default ButtonModule","import React from 'react'\nimport Parser from \"html-react-parser\";\nimport _ from 'lodash'\nimport {Grid, Header} from \"semantic-ui-react\";\nimport {throwError} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\nimport {validateAttributes, validateReferenceAlias} from \"../../utils/generalHelpers\"\n\nconst module = 'content';\nconst required_attributes = ['reference_alias', 'content'];\n\nconst getTitle = (title, size='h2') =>{\n    if(!title){\n        return null\n    }\n    return(\n        <Grid.Row>\n            <Grid.Column >\n                <Header as={size}>\n                    {title}\n                </Header>\n            </Grid.Column>\n        </Grid.Row>\n    )\n};\n\nconst ContentModule = (props) =>{\n    if (props.collection){\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        const pointer_set = _.keyBy(props.collection, 'reference_alias');\n        if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n            throwError.module(moduleError.INVALID_MODULE_REF);return null}\n        return (\n            <>\n            {getTitle(pointer_set[props.setting.alias_ref].title)}\n            <Grid.Row>\n                <Grid.Column>\n                {Parser(pointer_set[props.setting.alias_ref].content)}\n                </Grid.Column>\n            </Grid.Row>\n            </>\n        )\n    }\n    return null\n\n};\n\nexport default ContentModule","import React from 'react'\nimport {Grid} from \"semantic-ui-react\";\nimport Timeline from \"react-timeline-semantic-ui\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst module = 'tool_steps';\nconst required_attributes = ['icon', 'title', 'step_name', 'description', 'tags'];\n\n\nconst ToolStepModule = (props) =>{\n    if (props.collection){\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column className={'timeLine'}>\n                    {props.collection.map(\n                        (item, key) =>{\n                            let dir = ((key + 1)%2 === 1)?'left': 'right';\n                            return(\n                                <Timeline\n                                    key={`timelineItem-${key}`}\n                                    className={'time-item'}\n                                    direction={dir}\n                                    icon={item.icon}\n                                    title={item.title}\n                                    time={`${key+1} ${item.step_name}`}\n                                    description={item.description}\n                                    color=\"blue\"\n                                    tags={item.tags}\n                                    lineHeight={key}\n                                />\n                            )\n                        }\n                    )}\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default ToolStepModule","import React from 'react'\nimport _ from 'lodash'\nimport {Grid, Header, Icon, Image} from \"semantic-ui-react\";\nimport {List} from \"semantic-ui-react\";\nimport {throwError, validateAttributes, validateReferenceAlias} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\n\nconst getTitle = (title, size='h2') =>{\n    if(!title){\n        return null\n    }\n    return(\n        <Grid.Row>\n            <Grid.Column >\n                <Header as={size}>\n                    {title}\n                </Header>\n            </Grid.Column>\n        </Grid.Row>\n    )\n};\nconst ListModule = (props) =>{\n    if (props.collection){\n        switch (props.setting.config.type) {\n            case 'icon-list':\n                return renderIconList(props);\n            case 'download-list':\n                return renderDownloadList(props);\n            default:\n                return null\n        }\n    }\n    return null\n\n};\nconst renderIconList = (props) => {\n    const module = 'tool_steps';\n    const required_attributes = ['icon', 'title', 'description'];\n    if (!validateAttributes(props.collection[0], required_attributes)){\n        throwError.moduleAttr(module, required_attributes);return null}\n    const pointer_set = _.keyBy(props.collection, 'reference_alias');\n    if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n        throwError.module(moduleError.INVALID_MODULE_REF);return null}\n\n    return (\n        <>\n            {getTitle(props.setting.title)}\n            <Grid.Row>\n                <Grid.Column >\n                    <List divided relaxed>\n                        {props.collection.map(\n                            (item, key) => {\n                                return (\n                                    <List.Item key={`list-icon-${key}-${props.setting.collection}`}>\n                                        <List.Icon name={item.icon} size='large' verticalAlign='top' />\n                                        <List.Content>\n                                            <List.Header as='a'>{item.title}</List.Header>\n                                            <List.Description as='a'>{item.description}</List.Description>\n                                        </List.Content>\n                                    </List.Item>\n                                )\n                            }\n                        )}\n                    </List>\n                </Grid.Column>\n            </Grid.Row>\n        </>\n    );\n};\nconst renderDownloadList = (props) =>{\n    const module = 'tool_steps';\n    const required_attributes = ['link', 'title', 'description'];\n    if (!validateAttributes(props.collection[0].items[0], required_attributes)){\n        throwError.moduleAttr(module, required_attributes);return null}\n    const pointer_set = _.keyBy(props.collection, 'reference_alias');\n    if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n        throwError.module(moduleError.INVALID_MODULE_REF);return null}\n    return (\n        <Grid.Row>\n            <Grid.Column>\n                {getTitle(props.setting.title, 'h3')}\n                <List >\n                    {pointer_set[props.alias_ref].items.map(\n                        (item, key) => {\n                            return (\n                                <List.Item key={`download-list-${key}`}>\n                                    <Image avatar>\n                                        <a href={item.link} download>\n                                            <Icon avatar={'true'} circular inverted name='download' />\n                                        </a>\n                                    </Image>\n                                    <List.Content>\n                                        <List.Header>{item.title}</List.Header>\n                                        {item.description}\n                                    </List.Content>\n                                </List.Item>\n                            )\n                        }\n                    )}\n                </List>\n            </Grid.Column>\n        </Grid.Row>\n    );\n}\n\nexport default ListModule","import React from 'react'\nimport {Grid} from \"semantic-ui-react\";\nimport Parser from \"html-react-parser\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst FaqModule = (props) =>{\n    if (props.collection){\n        let module = 'faqs';\n        let required_attributes = ['question', 'answer'];\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column>\n                    {props.collection.map(\n                        (item, key) =>{\n\n                            return (\n                                <div key={`question-answer-${key}`}>\n                                    <p><b>Q: {item.question}</b></p>\n                                    {Parser(item.answer)}\n                                    <br/>\n                                </div>\n                            )\n                        }\n                    )}\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default FaqModule","import React from 'react'\nimport {Grid, Icon, Image} from \"semantic-ui-react\";\nimport {Card} from \"semantic-ui-react\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst checkImage = (cardData) =>{\n    try{\n        return cardData.image.data.full_url\n    }\n    catch (e) {\n        return 'https://via.placeholder.com/150'\n    }\n};\nconst renderCard =  (cardData ,key) =>{\n    return (\n        <Card key={`contact-card-${key}`}>\n            <Image src={checkImage(cardData)} wrapped ui={false} />\n            <Card.Content>\n                <Card.Header>{cardData.name}</Card.Header>\n                <Card.Meta>\n                    <span className='date'>\n                        Joined in {cardData.year_joined}{cardData.year_left? \", left in \"+cardData.year_left:\"\"}\n                    </span>\n                </Card.Meta>\n                <Card.Description>\n                    {cardData.job_description}\n                </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                    <Icon name='mail' />\n                    {cardData.email}\n            </Card.Content>\n        </Card>\n    )\n};\n\nconst ContactCardsModule = (props) =>{\n    if (props.collection){\n        let module = 'contact-cards';\n        let required_attributes = ['name', 'job_description', 'year_joined'];\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column>\n                    <Card.Group textAlign={'center'} itemsPerRow={3}>\n                        {props.collection.map(\n                            (item, key) =>{\n                                return renderCard(item, key)\n                            }\n                        )}\n                    </Card.Group>\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default ContactCardsModule","import React from 'react'\nimport {Form, Input} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) =>{\n    if(touched && error){\n        return(\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\nexport default (input, label, meta, inputAttr) =>{\n    return(\n        <Form.Field>\n            <label>{label}</label>\n            <Input {...input}  {...inputAttr} autoComplete='off' />\n            {renderError(meta)}\n        </Form.Field>\n    )\n};\n\n","import React from 'react'\nimport {Form, Input} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) =>{\n    if(touched && error){\n        return(\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\n\nexport default  ({ input: {value: omitValue, ...inputProps }, meta: omitMeta, ...props }) =>{\n    return(\n        <Form.Field>\n            <label>{props.label}</label>\n            <Input\n                type={'file'}\n                {...inputProps}\n                {...props.input}\n                autoComplete='off' />\n            {renderError(omitMeta)}\n        </Form.Field>\n    )\n};\n","import React from 'react'\nimport {Dropdown, Form} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) => {\n    if (touched && error) {\n        return (\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\nexport default (input, label, meta, inputAttr) => {\n    return (\n        <Form.Field>\n            <label>{label}</label>\n            <Dropdown selection {...input}\n                      {...inputAttr}\n                      value={input.value}\n                      onChange={(param, data) => input.onChange(data.value)}\n                      placeholder={label}\n            />\n            {renderError(meta)}\n        </Form.Field>\n    )\n};\n\n","import checkBox from './checkBoxInput'\nimport text from './textInput'\nimport file from './fileInput'\nimport slider from \"./sliderInput\";\nimport select from \"./selectInput\";\n\nexport const textInput = ({input,label,meta,inputAttr}) => text(input,label,meta,inputAttr);\nexport const fileInput = (props) => file(props);\nexport const selectInput = ({input,label,meta,inputAttr}) => select(input,label,meta,inputAttr);\nexport const checkBoxInput = ({input,label,meta,inputAttr={}}) => checkBox(input,label,meta,inputAttr);\nexport const sliderInput = ({input,label,meta,inputAttr={}}) => slider(input,label,meta,inputAttr);\n","import React, {Component} from 'react'\nimport {Button, Form, Grid, Icon, Segment, Transition} from \"semantic-ui-react\";\nimport {Field, reduxForm, reset} from \"redux-form\";\nimport {required} from \"../../constants/formValidationRules\";\nimport {fileInput, selectInput, textInput} from \"../helpers/redux-form-inputs\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\nimport {protocol} from \"../../constants/types\";\n\nclass FormModule extends Component{\n\n    state = {fileInputCode: 'fileCode'};\n    onSubmit = (formValues, dispatch) =>{\n        this.props.onSubmit(\n            this.props.collection['form'][0],\n            formValues\n        );\n        dispatch(reset('mainForm'));\n        this.setState({fileInputCode: Math.random().toString(36).substring(7)})\n    };\n    renderForm(){\n        if(this.props.collection['inputs'].length < 1){\n            return <b><i>Form under construction!</i></b>\n        }else{\n            return (\n                <div>\n                    {this.renderInputs()}\n                    <Button type={'submit'} icon labelPosition='left' size='large'  floated='right'>\n                        <Icon name='paper plane' />\n                        Run!\n                    </Button>\n                </div>\n            )\n        }\n    }\n    renderInputType = (input, key) => {\n        switch (input.input_type.type) {\n            case 'text':\n                return (\n                    <Field\n                        key={`field-input-${key}`}\n                        name={input.api_reference_parameter}\n                        component={textInput}\n                        validate={[ required ]}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`,\n                            type:'text',\n                        }}\n                    />\n                );\n            case 'file':\n                return (\n                    <Field\n                        key={`field-input-${key}-${this.state.fileInputCode}`}\n                        name={input.api_reference_parameter}\n                        component={fileInput}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`\n                        }}\n                    />\n                );\n            case 'select':\n                const options = this.createOptions(key, input.option_titles, input.option_values);\n                return (\n                    <Field\n                        key={`field-input-${key}`}\n                        name={input.api_reference_parameter}\n                        component={selectInput}\n                        validate={[ required ]}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`,\n                            options: options}\n\n                        }\n                    />\n                );\n            default:\n                return null\n\n        }\n    };\n    createOptions = (index, titles, values) => {\n        const options = [];\n        titles.forEach(\n            (title, key) =>{\n                options.push({\n                    'key': `optionItem-${index}-${key}`,\n                    'text': titles[key],\n                    'value': values[key]\n                })\n            }\n        );\n        return options\n    };\n    renderInputs(){\n        return this.props.collection['inputs'].map(\n            (input, key) => this.renderInputType(input, key)\n        )\n    }\n\n    render() {\n        if(!this.props.collection['inputs']){\n            return null\n        }\n        let module = 'form:form';\n        let required_attributes = ['title', 'api', 'tool_reference', 'description'];\n        if (!validateAttributes(this.props.collection['form'][0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        module = 'form:inputs';\n        required_attributes = ['api_reference_parameter', 'label', 'input_type'];\n        if (!validateAttributes(this.props.collection['inputs'][0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return(\n                <Grid.Row>\n                    <Grid.Column>\n                        {(this.props.protocolStatus === protocol.PROTOCOL_COMPLETED)?(\n                            <Transition\n                                transitionOnMount={true}\n                                animation={\"slide down\"}\n                                duration={{ show:1000 }}\n                            >\n                                <Segment color={'green'}>\n                                    <b>Algorithm executed!</b> Dataset will be in your mail when ready\n                                </Segment>\n                            </Transition>\n                        ):''\n                        }\n                        {(this.props.protocolStatus === protocol.PROTOCOL_FAILED)?(\n                            <Transition\n                                transitionOnMount={true}\n                                animation={\"slide down\"}\n                                duration={{ show:1000 }}\n                            >\n                                <Segment color={'red'}>\n                                    <b>Algorithm encountered an error!</b> please make sure the configuration is setup correctly\n                                </Segment>\n                            </Transition>\n                        ):''\n                        }\n                        <h3>Configuration</h3>\n                        <Form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                            {this.renderForm()}\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n        )\n    }\n\n}\nexport default reduxForm({\n    form:'mainForm'\n})(FormModule)","import React, {Component} from 'react'\nimport {\n    Button,\n    Card,\n    Container,\n    Dimmer,\n    Form,\n    Grid,\n    Header,\n    Icon,\n    Image,\n    Loader,\n    Search,\n    Segment\n} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport Plot from '../../../../node_modules/react-plotly.js/react-plotly';\n\n\nconst initialState = {isLoading: false, value: '', selected: false, tissues: [], stages: [], graphSetting:'all'}\n\nclass GeneFinder extends Component {\n    state = initialState;\n\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        this.setState({tissues: _.chain(this.props.collection.tissue).keyBy('id').mapValues('name').value()})\n        this.setState({stages: _.chain(this.props.collection.stage).keyBy('id').mapValues('name').value()})\n    }\n\n    mapTissues = (tissues) =>{\n        return tissues.map((item) =>{\n            return this.state.tissues[item]\n        })\n    }\n    generatePlotTraces = (data) => {\n        if(this.state.graphSetting === 'sex')\n            return []\n        const plotTraces = [];\n        const stage_groups = _.groupBy(data, 'stage')\n        const stages = this.state.stages;\n        Object.keys(stage_groups).forEach( (key) => {\n            let items = _.remove(stage_groups[key], function (currentObject) {\n                return currentObject.count !== \"nan\";\n            });\n            const trace = {\n                x: this.mapTissues(_.map(items, 'tissue')),\n                y: _.map(items, 'CPM'),\n                mode: 'markers',\n                type: 'scatter',\n                name: stages[key],\n                opacity: 0.5,\n                marker: {\n                    size: 20\n                }\n            };\n            plotTraces.push(trace)\n        });\n        return plotTraces\n    }\n    generateSexPlotTraces = (data) => {\n        if(this.state.graphSetting === 'stage')\n            return []\n        const plotTraces = [];\n        const sex_groups = _.groupBy(data, 'sex')\n        const stages = {'F': 'Female', 'M': 'Male'};\n        Object.keys(sex_groups).forEach( (key) => {\n            let items = _.remove(sex_groups[key], function (currentObject) {\n                return currentObject.count !== \"nan\";\n            });\n            const trace = {\n                x: this.mapTissues(_.map(items, 'tissue')),\n                y: _.map(items, 'CPM'),\n                mode: 'markers',\n                type: 'scatter',\n                name: stages[key],\n                opacity: (this.state.graphSetting === 'all')?0.1:0.5,\n                marker: {\n                    symbol:1,\n                    size: (this.state.graphSetting === 'all')?40:20\n                }\n            };\n            plotTraces.push(trace)\n        });\n        return plotTraces\n    }\n    setGraph = (name) =>{\n        this.setState({graphSetting: name})\n    }\n    renderGraph() {\n        if (this.props.moduleData.geneCounts.length > 0) {\n            const plotTraces = this.generatePlotTraces(this.props.moduleData.geneCounts)\n            const plotTracesSex = this.generateSexPlotTraces(this.props.moduleData.geneCounts)\n            return (\n                <>\n                    <center>\n                    <Button.Group>\n                        <Button active={(this.state.graphSetting === 'stage')} onClick={() => this.setGraph('stage')}>stages</Button>\n                        <Button active={(this.state.graphSetting === 'sex')} onClick={() => this.setGraph('sex')}>sex</Button>\n                        <Button active={(this.state.graphSetting === 'all')} onClick={() => this.setGraph('all')}>all</Button>\n                    </Button.Group>\n                    </center>\n                <Plot\n                    className={'full-size large'}\n                    data={[...plotTracesSex, ...plotTraces]}\n                    layout={{\n                        showlegend: true,\n                        height: 600, hovermode: 'closest',\n                        title: `Expression in ${this.props.moduleData.activeGene.ensg}\\ \n${this.props.moduleData.activeGene.symbol ? ` (${this.props.moduleData.activeGene.symbol})` : ''}\\\n${this.props.moduleData.activeGene.description ? ` - ${this.props.moduleData.activeGene.description}` : ''}`,\n                        yaxis:{\n                            title: \"Counts per million (CPM)\"\n                        },\n                        xaxis:{\n                            categoryarray: _.map(this.state.tissues, (item) => item)\n                        }\n                    }}\n                />\n                </>\n            )\n        } else if (this.state.selected) {\n            return (\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Preparing expression data...'/>\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png'/>\n                    </Segment>\n                </div>\n            )\n        }\n        return null\n    }\n\n    handleResultSelect = (e, {result}) => {\n        this.props.setGene(result)\n        this.setState({value: result.ensg, selected: true})\n        this.props.getGeneCounts(result.id)\n    }\n    handleSearchChange = (event) => {\n        this.props.getGeneSuggestions(event.target.value);\n        this.setState({value: event.target.value, selected: false})\n    }\n    render() {\n        const {isLoading, value, tissues, stages} = this.state;\n        if (tissues.length < 1 || stages.length < 1) {\n            return (\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Loading'/>\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png'/>\n                    </Segment>\n                </div>\n            )\n        }\n        return (\n            <Grid>\n                <Grid.Row centered>\n                    <Grid.Column width={8}>\n                        <Form>\n                            <Form.Field>\n                                <label>Search using the gene symbol,ensembl id or gene description</label>\n                                <Search\n                                    loading={isLoading}\n                                    onResultSelect={this.handleResultSelect}\n                                    onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                                        leading: true,\n                                    })}\n                                    results={this.props.moduleData.suggestions}\n                                    value={value}\n                                    {...this.props}\n                                />\n                            </Form.Field>\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row centered>\n                    <Grid.Column width={16}>\n                        <center>\n                        {this.renderGraph()}\n                        </center>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        )\n    }\n\n}\n\nexport default GeneFinder;","import React, {Component} from 'react'\nimport {\n    Button,\n    Card,\n    Container,\n    Dimmer, Dropdown,\n    Form,\n    Grid,\n    Header,\n    Icon,\n    Image, Input,\n    Loader,\n    Search,\n    Segment, Table\n} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport Plot from '../../../../node_modules/react-plotly.js/react-plotly';\nimport SmartDataTable from \"react-smart-data-table\";\nimport FileSaver from 'file-saver'\nimport CsvDownload from 'react-json-to-csv'\n\nconst stages = [\n    {\n        key: 1,\n        text: 'all',\n        value: -1\n    },\n    {\n        key: 2,\n        text: 'adult',\n        value: 1\n    },\n    {\n        key: 3,\n        text: 'fetal',\n        value: 0\n    },\n]\n\nconst initialState = {stages: [], options: [], searchTerm: '', downloadData: [], stageOptions: stages, stageActive: -1, stageName: 'all'}\n\nclass TissueFinder extends Component {\n\n    state = initialState;\n\n    componentDidMount() {\n        this.setState({stages: _.chain(this.props.collection.stage).\n            keyBy('id').\n            mapValues('name').value()})\n        this.setState({\n            options: _.map(this.props.collection.tissue, (state) => ({\n                key: state.id,\n                text: state.name,\n                value: state.id,\n            }))\n        })\n    }\n\n    setActiveTissue = (e, data) => {\n        this.props.setTissue({id: data.value, text: e.target.innerText}, this.state.stageActive)\n    }\n    generatePlotTraces = (data, genes) => {\n        data = _.map(data, (item) => {\n            if (genes.includes(item.symbol)) return item\n        })\n        data = _.compact(data)\n        const plotTraces = [];\n        const stage_groups = _.groupBy(data, 'stage')\n        const stages = this.state.stages;\n        Object.keys(stage_groups).forEach(function (key) {\n            let items = _.remove(stage_groups[key], function (currentObject) {\n                return currentObject.count !== \"nan\";\n            });\n            const trace = {\n                x: _.map(items, 'symbol'),\n                y: _.map(items, 'CPM'),\n                mode: 'markers',\n                type: 'scatter',\n                name: stages[key],\n                opacity: 0.5,\n                marker: {\n                    size: 20\n                }\n            };\n            plotTraces.push(trace)\n        });\n        return plotTraces\n    }\n\n    renderGraph() {\n        if (this.props.moduleData.tissueCounts.length > 0) {\n            let genes = _.map(this.props.moduleData.tissueGenes, (gene, index) => {\n                if (index < 20) {\n                    return gene.symbol\n                }\n                return null\n            })\n            genes = _.compact(genes)\n            const plotTraces = this.generatePlotTraces(this.props.moduleData.tissueCounts, genes)\n            console.log(genes)\n            return (\n                <>\n                    <Header as='h3' dividing>\n                        Top 20 expressed genes in {this.state.stageName} {this.props.moduleData.activeTissue.text} tissue\n                    </Header>\n                    <center>\n                        <Plot\n                            className={'full-size large'}\n                            data={plotTraces}\n                            layout={{\n                                showlegend: true,\n                                height: 600, hovermode: 'closest',\n                                xaxis: {\n                                    categoryarray: _.values(genes)\n                                },\n                                yaxis:{\n                                    title: \"Counts per million (CPM)\"\n                                }\n                            }}\n                        />\n                    </center>\n                </>\n            )\n        } else if (this.state.selected) {\n            return (\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Preparing transcription data...'/>\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png'/>\n                    </Segment>\n                </div>\n            )\n        }else if (this.props.moduleData.geneCounts.length === 0 && this.props.moduleData.activeTissue != ''){\n            return <div><center><b>No gene expression found!</b></center></div>\n        }\n        return null\n    }\n\n    renderTableContent = () => {\n        const content = this.props.moduleData.tissueGenes.map(\n            (gene, index) => {\n                if (!(gene.ensg.includes(this.state.searchTerm)\n                    || gene.symbol.includes(this.state.searchTerm)\n                    || gene.description.includes(this.state.searchTerm))) return null\n                return (\n                    <Table.Row key={`tissueItem-${index}`}>\n                        <Table.Cell>{index + 1}</Table.Cell>\n                        <Table.Cell>\n                            <a\n                                className={'tableLink'}\n                                href={`https://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g=${gene.ensg}`}\n                                target={'_blank'}\n                            >\n                                {gene.ensg}\n                            </a>\n                        </Table.Cell>\n                        <Table.Cell>{gene.symbol}</Table.Cell>\n                        <Table.Cell>{gene.description}</Table.Cell>\n                        <Table.Cell>{gene.CPM_avg}</Table.Cell>\n                    </Table.Row>\n                )\n            }\n        )\n        return _.compact(content)\n    }\n    setActiveStage = (e, data) =>{\n        this.setState({stageActive: data.value})\n        this.setState({stageName: e.target.innerText})\n        if(this.props.moduleData.activeTissue.id != ''){\n            this.props.setTissue(this.props.moduleData.activeTissue, data.value)\n        }\n    }\n    filterGeneResults = (e) => {\n        this.setState({searchTerm: e.target.value})\n    }\n\n    renderTable() {\n        if (!this.props.moduleData.tissueGenes.length > 0) {\n            return null\n        }\n        return (\n            <>\n                <Header as='h3' dividing>\n                    Top 100 expressed genes in {this.state.stageName} {this.props.moduleData.activeTissue.text} tissue\n                </Header>\n                <Form>\n                    <Form.Group>\n                        <Form.Field\n                            width={10}\n                        >\n                            <Input onChange={this.filterGeneResults} action={{icon: 'search'}} placeholder='Search...'/>\n                        </Form.Field>\n                        <Form.Field\n                            width={3}\n                        >\n                            <CsvDownload\n                                filename={`KeyGenes-${this.props.moduleData.activeTissue.text}-tissue.csv`}\n                                data={this.renderDownloadData()}\n                                className=\" primary ui labeled icon button\" >\n                                <i className=\"file icon right\"></i>\n                                Save table (.CSV)\n                            </CsvDownload>\n                        </Form.Field>\n                    </Form.Group>\n                </Form>\n                <Table basic>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>#</Table.HeaderCell>\n                            <Table.HeaderCell>ENSG</Table.HeaderCell>\n                            <Table.HeaderCell>Symbol</Table.HeaderCell>\n                            <Table.HeaderCell>Description</Table.HeaderCell>\n                            <Table.HeaderCell>Average CPM</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {this.renderTableContent()}\n                    </Table.Body>\n                </Table>\n            </>\n        )\n    }\n    renderDownloadData = () =>{\n        return _.compact(_.map(this.props.moduleData.tissueGenes, (\n            (gene) => ({\n                ENSG: gene.ensg,\n                Symbol: gene.symbol,\n                AVG_count: gene.count_avg,\n                Description: gene.description\n\n            })\n        )))\n    }\n    render() {\n        const active = this.props.moduleData.activeTissue.id\n        return (\n            <Grid>\n                <Grid.Row centered>\n                    <Grid.Column width={8}>\n                        <Form>\n                            <Form.Field>\n                                <label>Select a development stage</label>\n                                <Dropdown value={this.state.stageActive} placeholder='Stage' search selection\n                                          options={this.state.stageOptions}\n                                          onChange={this.setActiveStage}\n                                          />\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Select a tissue</label>\n                                <Dropdown value={active} placeholder='Tissue' search selection\n                                          options={this.state.options}\n                                          onChange={this.setActiveTissue}/>\n                            </Form.Field>\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row centered>\n                    <Grid.Column width={16}>\n                        {this.renderGraph()}\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={16}>\n                        {this.renderTable()}\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        )\n    }\n}\n\nexport default TissueFinder;","import React, {Component} from 'react'\nimport {Grid, Tab} from 'semantic-ui-react'\nimport GeneFinder from \"./GeneFinder\";\nimport TissueFinder from \"./TissueFinder\";\nimport ModuleLoader from \"../moduleLoader\";\n\nclass GeneBrowser extends Component {\n    panes = [\n        {\n            menuItem: { key: 'genefinder', icon: 'dna', content: 'Search a gene' },\n            render: () => (\n                <Tab.Pane attached={false}>\n                    <GeneFinder\n                        collection={this.props.collection}\n                        moduleData={this.props.moduleData}\n                        getGeneSuggestions={this.props.getGeneSuggestions}\n                        setGene={this.props.setGene}\n                        setting={this.props.setting}\n                        getGeneCounts={this.props.getGeneCounts}\n                    />\n            </Tab.Pane>)\n        },\n        {\n            menuItem: { key: 'tissueFinder', icon: 'heart', content: 'View tissues' },\n            render: () => <Tab.Pane attached={false}>\n                <TissueFinder\n                    collection={this.props.collection}\n                    setTissue={this.props.setTissue}\n                    moduleData={this.props.moduleData}\n                />\n            </Tab.Pane>,\n        },\n    ];\n\n    render() {\n        return (\n            <Grid.Column width={16}>\n                <Tab\n                    menu={{secondary: true, pointing: true}}\n                    panes={this.panes}\n                />\n            </Grid.Column>\n        )\n    }\n}\n\nexport default GeneBrowser\n","import React from 'react'\n\nimport ButtonModule from './ButtonModule'\nimport ContentModule from './ContentModule'\nimport ToolStepModule from './ToolStepsModule'\nimport ListModule from \"./ListModule\";\nimport FaqModule from \"./FaqModule\";\nimport ContactCardsModule from \"./ContactCardsModule\";\nimport FormModule from \"./FormModule\";\nimport {throwError} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\nimport GeneFinder from \"./GeneBrowserModule/GeneFinder\";\nimport GeneBrowserModule from \"./GeneBrowserModule\";\nimport Page from \"../Page\";\n\nconst ModuleLoader = (props) =>  {\n    switch(props.setting.module) {\n        case 'content':\n            return (\n                <ContentModule\n                    setting={props.setting}\n                    collection={props.collection}\n                />\n            );\n        case 'button':\n            return (\n                <ButtonModule\n                    setting={props.setting}\n                />\n            );\n        case 'tool_steps':\n            return (\n                <ToolStepModule\n                    collection={props.collection}\n                />\n            );\n        case 'list':\n            return(\n                <ListModule\n                    alias_ref={props.setting.alias_ref}\n                    setting={props.setting}\n                    collection={props.collection}\n                />\n            );\n        case 'faqs':\n            return (\n                <FaqModule\n                    collection={props.collection}\n                />\n            );\n        case 'contact-cards':\n            return(\n                <ContactCardsModule\n                    collection={props.collection}\n                />\n            );\n        case 'form':\n            return(\n                <FormModule\n                    onSubmit={props.onSubmit}\n                    collection={props.collection}\n                    protocolStatus={props.protocolStatus}\n                />\n            );\n        case 'transcript-finder':\n            return (\n                <GeneBrowserModule\n                    collection={props.collection}\n                    moduleData={props.modulesData.geneFinder}\n                    getGeneSuggestions={props.getGeneSuggestions}\n                    setTissue={props.setTissue}\n                    setGene={props.setGene}\n                    setting={props.setting}\n                    getGeneCounts={props.getGeneCounts}\n                />\n            )\n        default:\n            throwError.module(moduleError.INVALID_MODULE);\n            return null\n    }\n};\n\nexport default ModuleLoader","\nimport React, {Component} from 'react'\nimport ModuleLoader from './modules/moduleLoader'\nimport {Grid, Header} from \"semantic-ui-react\";\nimport {setTissue} from \"../actions/modules/geneFinderActions\";\n\nclass Page extends Component{\n\n    getCollection (collection){\n        if (!collection){\n            return null\n        }\n        if (collection in this.props.collections){\n            return this.props.collections[collection]\n        }\n        else{\n            return null\n        }\n    }\n    renderModules(){\n        return this.props.config.settings.map(\n            (setting, key) =>{\n                if (setting.module === 'form'){\n                    return(\n                        <ModuleLoader\n                            getGeneSuggestions={this.props.getGeneSuggestions}\n                            getGeneCounts={this.props.getGeneCounts}\n                            onSubmit={this.props.onSubmit}\n                            page={this.props.config.name}\n                            key={`module-${this.props.config.reference}-${key}`}\n                            collection={{\n                                'form': this.getCollection(setting.collection),\n                                'inputs': this.getCollection('inputs')\n                            }}\n                            setting={setting}\n                            protocolStatus={this.props.protocolStatus}\n                        />\n                    )\n                }\n                if(setting.module === 'transcript-finder'){\n                    return (\n                        <ModuleLoader\n                            setTissue={this.props.setTissue}\n                            modulesData={this.props.modulesData}\n                            setGene={this.props.setGene}\n                            getGeneSuggestions={this.props.getGeneSuggestions}\n                            getGeneCounts={this.props.getGeneCounts}\n                            page={this.props.config.name}\n                            key={`module-${this.props.config.reference}-${key}`}\n                            collection={{\n                                'tissue': this.getCollection('tissue'),\n                                'stage': this.getCollection('stage')\n                            }}\n                            setting={setting}\n                        />\n                    )\n                }\n                return (\n                    <ModuleLoader\n                        modulesData={this.props.modulesData}\n                        setGene={this.props.setGene}\n                        getGeneSuggestions={this.props.getGeneSuggestions}\n                        getGeneCounts={this.props.getGeneCounts}\n                        page={this.props.config.name}\n                        key={`module-${this.props.config.reference}-${key}`}\n                        collection={this.getCollection(setting.collection)}\n                        setting={setting}\n                    />\n                )\n            }\n        )\n    }\n    render() {\n        if (!this.props.path){\n            return null\n        }\n        return (\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Header as='h1' dividing>\n                            {this.props.config.name}\n                        </Header>\n                    </Grid.Column>\n                </Grid.Row>\n                {this.renderModules()}\n            </Grid>\n        )\n    }\n\n}\nexport  default  Page;","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\n\nimport App from \"../components/App\";\nimport {Dimmer, Icon, Loader, Segment} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport 'fs'\nimport history from '../history'\n\nimport {getConfig, getApplication} from '../actions/configActions'\nimport {getCollections} from '../actions/collectionActions'\nimport {Route, Router, Switch} from \"react-router-dom\";\nimport Page from \"../components/Page\";\nimport {directProtocol} from '../actions/protocols/directProtocolActions'\n\n\n\nimport {projectName, baseUrl} from \"../config.js\";\nimport {throwError} from \"../utils/generalHelpers\";\nimport {configError} from '../constants/errorTypes'\nimport GeneFinder from \"../components/modules/GeneBrowserModule/GeneFinder\";\nimport {getGeneSuggestions, setGene, getGeneCounts, setTissue} from \"../actions/modules/geneFinderActions\";\n\n\nclass AppContainer extends Component {\n\n    state = {\n        menu: [],\n        sloganText: false,\n        pageView: false,\n        render: false,\n        config: false\n    };\n    onSubmit = (config, values) => {\n        switch (config.api.protocol) {\n            case 'direct':\n                this.props.directProtocol(config, values);\n            break;\n            default:\n                console.log('No valid protocol connected to form')\n        }\n    };\n    getCollections = () =>{\n        const collections = [];\n        this.props.config.forEach(\n            (settingItem) => {\n                settingItem.settings.forEach(\n                    (item) =>{\n                        if(item.collection){\n                            if(item.collection === 'form'){\n                                collections.push(item.collection);\n                                collections.push('inputs');\n                            }\n                            collections.push(item.collection)\n                        }\n                        else{\n                            if(item.module === \"transcript-finder\"){\n                                collections.push(\"tissue\")\n                                collections.push(\"stage\")\n                            }\n                        }\n                    }\n                )\n            }\n        );\n        return _.uniq(collections)\n    };\n\n    loadConfig = async () =>{\n        await this.props.getApplication();\n        await this.props.getConfig();\n        const collections = this.getCollections();\n        await this.props.getCollections(collections);\n        this.setState({menu:this.props.config});\n    };\n\n    UNSAFE_componentWillMount(){\n        if(baseUrl !== null){\n            this.setState({config: true});\n        }\n    }\n    componentDidMount() {\n        this.loadConfig();\n        setTimeout(function() {\n            this.setState({render: true})\n        }.bind(this), 2000);\n        setTimeout(\n            () => {\n                this.setState({sloganText: true})\n            }, 1200);\n    }\n    renderRoutes() {\n        return this.props.config.map(\n            (item) =>{\n                return (\n                    <Route\n                        key={`route-${item.reference}`}\n                        path={'/'+item.reference}\n                        exact\n                        render={(props) => this.wrapTransition(\n                            <Page\n                                {...props}\n                                setTissue={this.props.setTissue}\n                                modulesData={this.props.modules}\n                                getGeneSuggestions={this.props.getGeneSuggestions}\n                                setGene={this.props.setGene}\n                                getGeneCounts={this.props.getGeneCounts}\n                                path={'/'+item.reference}\n                                config={item}\n                                collections={this.props.collections}\n                                onSubmit={this.onSubmit}\n                                protocolStatus={this.props.protocolStatus}\n                            />)\n                        }\n                    />\n                )\n            }\n        )\n    }\n    wrapTransition =  (object) => {\n        return object\n    };\n    renderContent() {\n        if(this.props.config.length === 0){\n            return null\n        }\n        return (\n            <Router history={history}>\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        exact\n                        render={(props) => this.wrapTransition(\n                            <Page {...props}\n                                  modulesData={this.props.modules}\n                                  getGeneSuggestions={this.props.getGeneSuggestions}\n                                  setGene={this.props.setGene}\n                                  setTissue={this.props.setTissue}\n                                  getGeneCounts={this.props.getGeneCounts}\n                                  path={'/'+this.props.config[0].reference}\n                                  config={this.props.config[0]}\n                                  collections={this.props.collections}\n                                  protocolStatus={this.props.protocolStatus}\n                                  onSubmit={this.onSubmit}\n                            />)\n                        }\n                    />\n                    {this.renderRoutes()}\n                </Switch>\n            </Router>\n        );\n    }\n    render() {\n        if(this.state.render && !_.isEmpty(this.props.config)) {\n            document\n                .documentElement.style.setProperty(\"--color-primary\", this.props.application.primary_color);\n            return (<App\n                    applicationDetails={this.props.application}\n                    activePageContent={this.renderContent()}\n                    collections={this.props.collections}\n                    config={this.props.config}\n                    menu={this.props.config}\n                    />\n            )\n        }\n        else if(!this.state.render){\n            return (\n                <Segment className={'loading-segment'}>\n                    <Dimmer active>\n                        <Loader indeterminate inline='centered'>Preparing the {projectName} website</Loader>\n                    </Dimmer>\n                </Segment>\n            )\n        }\n        else{\n            throwError.config(configError.FAILED_CONFIG);\n            return (\n                <Segment className={'loading-segment'}>\n                    <Dimmer active>\n                        <Icon name='close' size='huge' inverted color='grey' />\n                        <br/>\n                        <p>Failed to load website</p>\n                    </Dimmer>\n                </Segment>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        config: _.values(state.config),\n        collections: state.collections,\n        protocolStatus:state.protocolStatus,\n        application: state.application[0],\n        modules: state.modules\n    }\n};\nexport default connect(mapStateToProps,{\n        getConfig,\n        getApplication,\n        getCollections,\n        directProtocol,\n        getGeneSuggestions,\n        setGene,\n        getGeneCounts,\n        setTissue\n}\n    )(AppContainer)","import SascWebApi from \"../apis/SascWeb\";\nimport {getOnlyPublished} from '../utils/generalHelpers'\nimport {application, config} from '../constants/types'\n\n\nexport const getConfig = () => async (dispatch) =>{\n    const result = await SascWebApi.get('items/config');\n    const publishedConfig = getOnlyPublished(result.data.data);\n    dispatch({type: config.SET_CONFIG, payload: publishedConfig})\n};\n\nexport const getApplication = () => async (dispatch) =>{\n    const result = await SascWebApi.get('items/application');\n    const publishedConfig = getOnlyPublished(result.data.data);\n    dispatch({type: application.GET_APPLICATION_DONE, payload: publishedConfig})\n};","import SascWebApi from \"../apis/SascWeb\";\nimport {getOnlyPublished} from '../utils/generalHelpers'\nimport {collections} from '../constants/types'\n\n\nexport const getCollections = (rawCollections) => (dispatch) =>{\n    let count = 0;\n    let collectionData = {};\n    rawCollections.forEach( async (item) => {\n        const result = await SascWebApi.get('items/'+item+'?fields=*.*.*');\n        collectionData[item] = getOnlyPublished(result.data.data);\n        count++;\n        if(count === rawCollections.length){\n            dispatch({type: collections.ADD_COLLECTION, payload:collectionData})\n        }\n    });\n\n};\n\n\n\n","import axios from \"axios\";\n\nimport {protocol} from '../../constants/types'\n\nexport const directProtocol = (config, data) => async (dispatch) => {\n    let bodyFormData = new FormData();\n    bodyFormData.set('email', data.email);\n    bodyFormData.set('training', data.training);\n    bodyFormData.append('file', data.file[0]);\n    const result = await axios({\n        method: 'post',\n        url: config.tool_reference,\n        data: bodyFormData,\n        config: { headers: {'Content-Type': 'multipart/form-data',  'Accept': 'text/html' }}\n    });\n    if(result.data.includes(\"Succesfully submitted. Please check your email in a few minutes\")){\n        dispatch({\n            type:protocol.PROTOCOL_COMPLETED\n        });\n    }else{\n        dispatch({\n            type:protocol.PROTOCOL_FAILED\n        });\n    }\n};","import SascWebApi from \"../../apis/SascWeb\";\nimport {modules} from \"../../constants/types\";\n\n\nexport const getGeneSuggestions = (searchTerm) => async (dispatch) =>{\n    const result = await SascWebApi.get(`/items/gene?limit=5&filter[symbol][logical]=or&\n    filter[symbol][rlike]=${searchTerm}%&filter[description][logical]=or&\n    filter[description][rlike]=${searchTerm}%&filter[ensg][logical]=or&filter[ensg][rlike]=${searchTerm}%\n    &filter[symbol][nnull]`);\n    dispatch({type: modules.geneFinder.GET_SUGGESTIONS, payload: result.data.data})\n};\n\nexport const getGeneCounts = (id) => async (dispatch) =>{\n    const result = await SascWebApi.get(`/items/transcript?filter[gene][eq]=${id}`);\n    dispatch({type: modules.geneFinder.GET_GENE_COUNTS, payload: result.data.data})\n};\nexport const setGene = (item) =>{\n    return {type:modules.geneFinder.SET_ACTIVE_GENE, payload:item}\n}\nexport const setTissue = (activeTissue, stage) =>  async (dispatch) =>{\n    stage = (stage >= 0 )?stage:null;\n    const result = await SascWebApi.post(`/custom/data/tissue-data`,\n        {tissueId: activeTissue.id, amount: 100, adult: stage})\n    dispatch({type: modules.geneFinder.SET_ACTIVE_TISSUE, payload: {activeTissue:activeTissue, data:result.data}})\n}\n","import {combineReducers} from \"redux\";\nimport suggestionsReducer from \"./suggestionsReducer\";\nimport activeGeneReducer from \"./activeGeneReducer\";\nimport transcriptsReducer from \"./transcriptsReducer\";\nimport activeTissueReducer from \"./activeTissueReducer\";\nimport tissueCountsReducer from \"./tissueCountsReducer\";\nimport tissueGenesReducer from \"./tissueGenesReducer\";\n\nexport const geneFinderReducers = combineReducers({\n    suggestions: suggestionsReducer,\n    activeGene: activeGeneReducer,\n    geneCounts: transcriptsReducer,\n    activeTissue: activeTissueReducer,\n    tissueCounts: tissueCountsReducer,\n    tissueGenes: tissueGenesReducer\n});","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state=[], action) => {\n    switch (action.type) {\n        case modules.geneFinder.GET_SUGGESTIONS:\n            const items= [];\n            _.values(action.payload).forEach(\n                (item, value) => {\n                    if(!item.symbol){\n                        items.push({\n                            title: `${item.ensg}`,\n                            description: item.description,\n                            id:item.id,\n                            ensg: item.ensg\n                        })\n                    }else{\n                        items.push({\n                            title: `${item.symbol} | ${item.ensg}`,\n                            description: item.description,\n                            id:item.id,\n                            ensg: item.ensg,\n                            symbol: item.symbol\n                        })\n                    }\n\n                }\n            );\n            return items;\n        default:\n            return state;\n    }\n}","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_GENE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state=[], action) => {\n    switch (action.type) {\n        case modules.geneFinder.GET_GENE_COUNTS:\n            return _.values(action.payload)\n        case modules.geneFinder.SET_ACTIVE_GENE:\n            return []\n        default:\n            return state;\n    }\n}","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state='', action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_TISSUE:\n            return action.payload.activeTissue;\n        default:\n            return state;\n    }\n}","import {modules} from \"../../../constants/types\";\n\nexport default (state= {}, action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_TISSUE:\n            return action.payload.data.counts;\n        default:\n            return state;\n    }\n}","import {modules} from \"../../../constants/types\";\n\nexport default (state= {}, action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_TISSUE:\n            return action.payload.data.genes;\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\nimport {geneFinderReducers} from \"./genefinder\";\n\nexport const modules = combineReducers({\n    geneFinder: geneFinderReducers\n});","import {combineReducers} from \"redux\";\nimport {reducer as formReducer} from 'redux-form'\nimport configReducer from './configReducer'\nimport collectionsReducer from \"./collectionsReducer\";\nimport protocolStatusReducer from './protocols/protocolStatusReducer'\nimport applicationReducer from \"./applicationReducer\";\nimport {modules} from \"./modules\";\n\nexport default combineReducers({\n    form: formReducer,\n    protocolStatus: protocolStatusReducer,\n    application: applicationReducer,\n    config: configReducer,\n    collections: collectionsReducer,\n    modules: modules\n});","import {protocol} from \"../../constants/types\";\n\nexport default (state='', action) => {\n    switch (action.type) {\n        case protocol.PROTOCOL_COMPLETED:\n            return protocol.PROTOCOL_COMPLETED;\n\n        case protocol.PROTOCOL_FAILED:\n            return protocol.PROTOCOL_FAILED;\n        default:\n            return ''\n    }\n}","import {application} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case application.GET_APPLICATION_DONE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {config} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case config.SET_CONFIG:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {collections} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case collections.ADD_COLLECTION:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport App from \"./containers/AppContainer\";\nimport 'semantic-ui-css/semantic.min.css'\nimport './assets/main.css'\nimport reducers from './reducers'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}