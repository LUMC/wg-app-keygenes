{"version":3,"sources":["history.js","components/App.js","config.js","apis/SascWeb.js","constants/errorTypes.js","utils/generalHelpers.js","constants/types.js","constants/formValidationRules.js","components/modules/ButtonModule.js","components/modules/ContentModule.js","components/modules/ToolStepsModule.js","components/modules/ListModule.js","components/modules/FaqModule.js","components/modules/ContactCardsModule.js","components/helpers/redux-form-inputs/textInput.js","components/helpers/redux-form-inputs/fileInput.js","components/helpers/redux-form-inputs/selectInput.js","components/helpers/redux-form-inputs/index.js","components/modules/FormModule.js","components/modules/GeneBrowserModule/GeneFinder.js","components/modules/GeneBrowserModule/TissueFinder.js","components/modules/GeneBrowserModule/index.js","components/modules/moduleLoader.js","components/Page.js","containers/AppContainer.js","actions/configActions.js","actions/collectionActions.js","actions/protocols/directProtocolActions.js","actions/modules/geneFinderActions.js","reducers/modules/genefinder/index.js","reducers/modules/genefinder/suggestionsReducer.js","reducers/modules/genefinder/activeGeneReducer.js","reducers/modules/genefinder/transcriptsReducer.js","reducers/modules/genefinder/activeTissueReducer.js","reducers/modules/genefinder/tissueCountsReducer.js","reducers/modules/genefinder/tissueGenesReducer.js","reducers/modules/index.js","reducers/index.js","reducers/protocols/protocolStatusReducer.js","reducers/applicationReducer.js","reducers/configReducer.js","reducers/collectionsReducer.js","index.js"],"names":["createBrowserHistory","charPoses","exit","opacity","y","enter","delay","_ref","charIndex","App","this","props","menu","length","react_default","a","createElement","Menu","inverted","widths","className","pointing","secondary","react_router","history","map","item","key","Item","name","reference","concat","as","Link","to","Fragment","Transition","visible","sloganText","animation","duration","show","particles_default","params","particles","number","value","size","interactivity","events","onhover","enable","mode","Container","Grid","columns","Row","verticalAlign","Column","textAlign","react_pose_text_es","initialPose","pose","applicationDetails","title","unmountOnHide","sub_title","renderMenu","activePageContent","Component","baseUrl","axios","create","baseURL","configError","moduleError","getOnlyPublished","data","_","values","filter","status","published","validateAttributes","obj","required_attributes","every","Object","keys","includes","validateReferenceAlias","hasOwnProperty","throwError","classCallCheck","config","message","console","error","module","moduleAttr","attrs","min","collections","protocol","application","modules","GET_SUGGESTIONS","SET_ACTIVE_GENE","GET_GENE_COUNTS","SET_ACTIVE_TISSUE","ButtonModule","setting","type","href","link","target","rel","Button","labelPosition","color","Icon","Label","basic","label","download","icon","moduleName","ContentModule","collection","pointer_set","keyBy","alias_ref","arguments","undefined","Header","getTitle","Parser","content","ToolStepModule","dir","dist_default","direction","time","step_name","description","tags","lineHeight","renderIconList","List","divided","relaxed","Content","Description","renderDownloadList","items","Image","avatar","circular","ListModule","FaqModule","question","answer","checkImage","cardData","image","full_url","e","ContactCardsModule","Card","Group","itemsPerRow","src","wrapped","ui","Meta","year_joined","year_left","job_description","extra","email","renderCard","required","redux_form_inputs_textInput","input","meta","inputAttr","Form","Field","Input","assign","autoComplete","touched","renderError","redux_form_inputs_fileInput","_ref2","_ref2$input","inputProps","objectWithoutProperties","omitMeta","redux_form_inputs_selectInput","Dropdown","selection","onChange","param","placeholder","textInput","text","fileInput","file","selectInput","select","FormModule","state","fileInputCode","onSubmit","formValues","dispatch","_this","reset","setState","Math","random","toString","substring","renderInputType","input_type","api_reference_parameter","component","validate","toLowerCase","options","createOptions","option_titles","option_values","index","titles","forEach","push","renderInputs","floated","_this2","protocolStatus","transitionOnMount","Segment","handleSubmit","renderForm","reduxForm","form","initialState","isLoading","selected","tissues","stages","GeneFinder","possibleConstructorReturn","getPrototypeOf","call","mapTissues","generatePlotTraces","plotTraces","stage_groups","groupBy","remove","currentObject","count","trace","x","marker","generateSexPlotTraces","sex_groups","F","M","handleResultSelect","result","setGene","ensg","getGeneCounts","id","handleSearchChange","event","getGeneSuggestions","chain","tissue","mapValues","stage","moduleData","geneCounts","react_plotly_default","layout","showlegend","height","hovermode","activeGene","symbol","yaxis","Dimmer","active","Loader","_this$state","centered","width","Search","loading","onResultSelect","onSearchChange","debounce","leading","results","suggestions","renderGraph","renderSexGraph","searchTerm","downloadData","TissueFinder","header","columnKey","invisible","sortable","filterable","tableActions","setActiveTissue","setTissue","innerText","genes","compact","renderTableContent","tissueGenes","gene","Table","Cell","CPM_avg","filterGeneResults","renderDownloadData","ENSG","Symbol","AVG_count","count_avg","tissueCounts","dividing","activeTissue","xaxis","categoryorder","categoryarray","action","react_json_to_csv_dist_default","filename","HeaderCell","Body","search","renderTable","GeneBrowser","panes","menuItem","render","Tab","Pane","attached","GeneBrowserModule_GeneFinder","GeneBrowserModule_TissueFinder","ModuleLoader","modules_ContentModule","modules_ButtonModule","ToolStepsModule","modules_ListModule","modules_FaqModule","modules_ContactCardsModule","modules_FormModule","GeneBrowserModule","modulesData","geneFinder","Page","settings","moduleLoader","page","getCollection","inputs","path","renderModules","AppContainer","pageView","api","directProtocol","log","getCollections","settingItem","uniq","loadConfig","_callee","regenerator_default","wrap","_context","prev","next","getApplication","getConfig","stop","wrapTransition","object","setTimeout","bind","_this3","exact","components_Page","_this4","renderRoutes","isEmpty","document","documentElement","style","setProperty","primary_color","components_App","renderContent","indeterminate","inline","connect","asyncToGenerator","mark","publishedConfig","SascWebApi","get","sent","payload","_x","apply","_callee2","_context2","_x2","rawCollections","collectionData","bodyFormData","FormData","set","training","append","method","url","tool_reference","headers","Content-Type","Accept","_ref3","_callee3","_context3","post","tissueId","amount","_x3","geneFinderReducers","combineReducers","counts","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","es","containers_AppContainer","getElementById"],"mappings":"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","file":"static/js/main.8e28c513.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory();","import React, {Component} from 'react'\n\nimport {\n    Container,\n    Grid,\n    Menu,\n    Transition\n} from \"semantic-ui-react\";\nimport SplitText from 'react-pose-text';\nimport {Link, Router} from \"react-router-dom\";\nimport history from \"../history\";\nimport Particles from \"react-particles-js\";\n\nconst charPoses = {\n    exit: { opacity: 0, y: 20 },\n    enter: {\n        opacity: 1,\n        y: 0,\n        delay: ({ charIndex }) => charIndex * 60\n    }\n};\nclass App extends Component{\n    renderMenu(){\n        if (this.props.menu.length < 1){\n            return null\n        }\n        return (\n            <Menu inverted  widths={6} className={'mainMenu'}  pointing secondary  >\n                <Router history={history}>\n                    {\n                        this.props.menu.map(\n                            (item, key) => (\n                                <Menu.Item\n                                    name={item.reference}\n                                    key={`menuItem-${key}`}\n                                    as={Link}\n                                    to={'/'+item.reference}>\n                                    {item.name}\n                                </Menu.Item>\n                            ))\n                    }\n                </Router>\n            </Menu>\n        )\n    }\n    render() {\n        return(\n            <>\n            <div className='appContent' >\n                <div className={'welcome'}>\n                    <Transition\n                        visible={this.props.sloganText}\n                        animation={\"fade up\"}\n                        duration={{ show:2000 }}\n                    >\n                        <div>\n                            <Particles\n                                className={'particles'}\n                                params={{\n                                    \"particles\": {\n                                        \"number\": {\n                                            \"value\": 40\n                                        },\n                                        \"size\": {\n                                            \"value\": 3\n                                        }\n                                    },\n                                    \"interactivity\": {\n                                        \"events\": {\n                                            \"onhover\": {\n                                                \"enable\": true,\n                                                \"mode\": \"repulse\"\n                                            }\n                                        }\n                                    }\n                                }} />\n                        </div>\n                    </Transition>\n                <Container>\n                    <Grid columns={1} >\n                        <Grid.Row verticalAlign='middle' className={'welcome-box'} >\n                            <Grid.Column textAlign={'center'} >\n                                <div className=\"introName\">\n                                <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n                                    {this.props.applicationDetails.title}\n                                </SplitText>\n                                </div>\n                                <div className=\"sloganText\">\n                                    <Transition\n                                        unmountOnHide={false}\n                                        visible={this.props.sloganText}\n                                        animation={\"fade up\"}\n                                        duration={{ show:1000 }}\n                                    >\n                                        <div>\n                                            {this.props.applicationDetails.sub_title}\n                                        </div>\n                                    </Transition>\n                                </div>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Transition\n                            unmountOnHide={false}\n                            visible={this.props.sloganText}\n                            animation={\"fade down\"}\n                            duration={{ show:800 }}\n                        >\n                        <Grid.Row>\n                            <Grid.Column>\n                                {this.renderMenu()}\n                            </Grid.Column>\n                        </Grid.Row>\n                        </Transition>\n                    </Grid>\n                </Container>\n                </div>\n                <Transition\n                    unmountOnHide={false}\n                    visible={this.props.sloganText}\n                    animation={\"fade up\"}\n                    duration={{ show:1000 }}\n                >\n                <div className={'page-section'}>\n                    <Container>\n                        {this.props.activePageContent}\n                    </Container>\n                </div>\n                </Transition>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default App","export const baseUrl='http://165.22.196.58:8080/keygenes/';\nexport const projectName='KeyGenes';\n","import axios from 'axios'\nimport {baseUrl} from \"../config\";\n\nexport default axios.create({\n   'baseURL': baseUrl\n});\n\n","export const configError = {\n    FAILED_CONFIG: \"application configuration could not be received from API\"\n};\n\nexport const moduleError = {\n    INVALID_MODULE: \"config item is assigned to an unknown module\",\n    INVALID_MODULE_ATTRS: `module config does not contain the required attrs`,\n    INVALID_MODULE_REF: \"reference alias doesn't refer to an item\",\n};\n","import _ from \"lodash\";\nimport {moduleError} from '../constants/errorTypes'\n\nexport const getOnlyPublished = (data) =>{\n\n    return _.values(_.filter(\n        data, function(item){ return item.status === 'published' || item.published === 'published' })\n    );\n};\n\nexport const validateAttributes = (obj, required_attributes) =>{\n    return (required_attributes.every(key => Object.keys(obj).includes(key)))\n};\n\nexport const validateReferenceAlias = (key, obj)=>{\n    return obj.hasOwnProperty(key)\n};\n\nexport class throwError{\n    static config = (message) =>{\n        console.error( `Configuration error -  ${message}`);\n    };\n    static module = (message) =>{\n        console.error( `Module error -  ${message}`);\n    };\n    static moduleAttr = (module, attrs) =>{\n        console.error( `Module error -  ${module} ${moduleError.INVALID_MODULE_ATTRS}: ${attrs}`);\n    };\n}","export const config = {\n    GET_CONFIG: \"GET_CONFIG\",\n    SET_CONFIG: \"SET_CONFIG\"\n};\n\nexport const collections = {\n    ADD_COLLECTION: \"ADD_COLLECTION\"\n};\n\nexport const protocol ={\n    PROTOCOL_COMPLETED:'PROTOCOL_COMPLETED',\n    PROTOCOL_FAILED :'PROTOCOL_FAILED',\n};\n\nexport const application ={\n    GET_APPLICATION_DONE: \"GET_APPLICATION_DONE\",\n    GET_APPLICATION_FAILED: \"GET_APPLICATION_FAILED\"\n};\n\nexport const modules ={\n    geneFinder: {\n        GET_SUGGESTIONS: \"GET_SUGGESTIONS\",\n        SET_ACTIVE_GENE: \"SET_ACTIVE_GENE\",\n        GET_GENE_COUNTS: \"GET_GENE_COUNTS\",\n        SET_ACTIVE_TISSUE: \"SET_ACTIVE_TISSUE\"\n    }\n\n};","export const required = value => value ? undefined : 'Required';\nexport const minValueChar = min => value => value.length && value.length < min ? `Must be at least ${min} characters` : undefined;\nexport const minValue5 = minValueChar(5);\nexport const email = value =>value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;","import React from 'react'\nimport {Button, Grid, Icon, Label} from \"semantic-ui-react\";\nimport {throwError} from \"../../utils/generalHelpers\";\n\n\nconst ButtonModule = (props) =>{\n    switch(props.setting.config.type) {\n        case 'github':\n            return(\n                <Grid.Row>\n                    <Grid.Column textAlign={'center'}>\n                        <a href={props.setting.config.config.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Button as='div' labelPosition='right'>\n                            <Button color='blue'>\n                                <Icon name='github' />\n                                GitHub\n                            </Button>\n                            <Label basic  pointing='left'>\n                                {props.setting.config.config.label}\n                            </Label>\n                        </Button>\n                        </a>\n                    </Grid.Column>\n                </Grid.Row>\n            );\n        case 'download':\n            return(\n                <Grid.Row>\n                    <Grid.Column textAlign={'center'}>\n                        <a href={props.setting.config.config.link} download target={'_blank'}>\n                        <Button icon labelPosition='left'>\n                            <Icon name='cloud' />\n                            {props.setting.config.config.label}\n                        </Button>\n                        </a>\n                    </Grid.Column>\n                </Grid.Row>\n            );\n        default:\n            throwError.module(`Button not rendered, type: ${props.moduleName} not found`);\n            return null;\n    }\n};\n\nexport default ButtonModule","import React from 'react'\nimport Parser from \"html-react-parser\";\nimport _ from 'lodash'\nimport {Grid, Header} from \"semantic-ui-react\";\nimport {throwError} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\nimport {validateAttributes, validateReferenceAlias} from \"../../utils/generalHelpers\"\n\nconst module = 'content';\nconst required_attributes = ['reference_alias', 'content'];\n\nconst getTitle = (title, size='h2') =>{\n    if(!title){\n        return null\n    }\n    return(\n        <Grid.Row>\n            <Grid.Column >\n                <Header as={size}>\n                    {title}\n                </Header>\n            </Grid.Column>\n        </Grid.Row>\n    )\n};\n\nconst ContentModule = (props) =>{\n    if (props.collection){\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        const pointer_set = _.keyBy(props.collection, 'reference_alias');\n        if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n            throwError.module(moduleError.INVALID_MODULE_REF);return null}\n        return (\n            <>\n            {getTitle(pointer_set[props.setting.alias_ref].title)}\n            <Grid.Row>\n                <Grid.Column>\n                {Parser(pointer_set[props.setting.alias_ref].content)}\n                </Grid.Column>\n            </Grid.Row>\n            </>\n        )\n    }\n    return null\n\n};\n\nexport default ContentModule","import React from 'react'\nimport {Grid} from \"semantic-ui-react\";\nimport Timeline from \"react-timeline-semantic-ui\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst module = 'tool_steps';\nconst required_attributes = ['icon', 'title', 'step_name', 'description', 'tags'];\n\n\nconst ToolStepModule = (props) =>{\n    if (props.collection){\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column className={'timeLine'}>\n                    {props.collection.map(\n                        (item, key) =>{\n                            let dir = ((key + 1)%2 === 1)?'left': 'right';\n                            return(\n                                <Timeline\n                                    key={`timelineItem-${key}`}\n                                    className={'time-item'}\n                                    direction={dir}\n                                    icon={item.icon}\n                                    title={item.title}\n                                    time={`${key+1} ${item.step_name}`}\n                                    description={item.description}\n                                    color=\"blue\"\n                                    tags={item.tags}\n                                    lineHeight={key}\n                                />\n                            )\n                        }\n                    )}\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default ToolStepModule","import React from 'react'\nimport _ from 'lodash'\nimport {Grid, Header, Icon, Image} from \"semantic-ui-react\";\nimport {List} from \"semantic-ui-react\";\nimport {throwError, validateAttributes, validateReferenceAlias} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\n\nconst getTitle = (title, size='h2') =>{\n    if(!title){\n        return null\n    }\n    return(\n        <Grid.Row>\n            <Grid.Column >\n                <Header as={size}>\n                    {title}\n                </Header>\n            </Grid.Column>\n        </Grid.Row>\n    )\n};\nconst ListModule = (props) =>{\n    if (props.collection){\n        switch (props.setting.config.type) {\n            case 'icon-list':\n                return renderIconList(props);\n            case 'download-list':\n                return renderDownloadList(props);\n            default:\n                return null\n        }\n    }\n    return null\n\n};\nconst renderIconList = (props) => {\n    const module = 'tool_steps';\n    const required_attributes = ['icon', 'title', 'description'];\n    if (!validateAttributes(props.collection[0], required_attributes)){\n        throwError.moduleAttr(module, required_attributes);return null}\n    const pointer_set = _.keyBy(props.collection, 'reference_alias');\n    if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n        throwError.module(moduleError.INVALID_MODULE_REF);return null}\n\n    return (\n        <>\n            {getTitle(props.setting.title)}\n            <Grid.Row>\n                <Grid.Column >\n                    <List divided relaxed>\n                        {props.collection.map(\n                            (item, key) => {\n                                return (\n                                    <List.Item key={`list-icon-${key}-${props.setting.collection}`}>\n                                        <List.Icon name={item.icon} size='large' verticalAlign='top' />\n                                        <List.Content>\n                                            <List.Header as='a'>{item.title}</List.Header>\n                                            <List.Description as='a'>{item.description}</List.Description>\n                                        </List.Content>\n                                    </List.Item>\n                                )\n                            }\n                        )}\n                    </List>\n                </Grid.Column>\n            </Grid.Row>\n        </>\n    );\n};\nconst renderDownloadList = (props) =>{\n    const module = 'tool_steps';\n    const required_attributes = ['link', 'title', 'description'];\n    if (!validateAttributes(props.collection[0].items[0], required_attributes)){\n        throwError.moduleAttr(module, required_attributes);return null}\n    const pointer_set = _.keyBy(props.collection, 'reference_alias');\n    if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n        throwError.module(moduleError.INVALID_MODULE_REF);return null}\n    return (\n        <Grid.Row>\n            <Grid.Column>\n                {getTitle(props.setting.title, 'h3')}\n                <List >\n                    {pointer_set[props.alias_ref].items.map(\n                        (item, key) => {\n                            return (\n                                <List.Item key={`download-list-${key}`}>\n                                    <Image avatar>\n                                        <a href={item.link} download>\n                                            <Icon avatar={'true'} circular inverted name='download' />\n                                        </a>\n                                    </Image>\n                                    <List.Content>\n                                        <List.Header>{item.title}</List.Header>\n                                        {item.description}\n                                    </List.Content>\n                                </List.Item>\n                            )\n                        }\n                    )}\n                </List>\n            </Grid.Column>\n        </Grid.Row>\n    );\n}\n\nexport default ListModule","import React from 'react'\nimport {Grid} from \"semantic-ui-react\";\nimport Parser from \"html-react-parser\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst FaqModule = (props) =>{\n    if (props.collection){\n        let module = 'faqs';\n        let required_attributes = ['question', 'answer'];\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column>\n                    {props.collection.map(\n                        (item, key) =>{\n\n                            return (\n                                <div key={`question-answer-${key}`}>\n                                    <p><b>Q: {item.question}</b></p>\n                                    {Parser(item.answer)}\n                                    <br/>\n                                </div>\n                            )\n                        }\n                    )}\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default FaqModule","import React from 'react'\nimport {Grid, Icon, Image} from \"semantic-ui-react\";\nimport {Card} from \"semantic-ui-react\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst checkImage = (cardData) =>{\n    try{\n        return cardData.image.data.full_url\n    }\n    catch (e) {\n        return 'https://via.placeholder.com/150'\n    }\n};\nconst renderCard =  (cardData ,key) =>{\n    return (\n        <Card key={`contact-card-${key}`}>\n            <Image src={checkImage(cardData)} wrapped ui={false} />\n            <Card.Content>\n                <Card.Header>{cardData.name}</Card.Header>\n                <Card.Meta>\n                    <span className='date'>\n                        Joined in {cardData.year_joined}{cardData.year_left? \", left in \"+cardData.year_left:\"\"}\n                    </span>\n                </Card.Meta>\n                <Card.Description>\n                    {cardData.job_description}\n                </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                    <Icon name='mail' />\n                    {cardData.email}\n            </Card.Content>\n        </Card>\n    )\n};\n\nconst ContactCardsModule = (props) =>{\n    if (props.collection){\n        let module = 'contact-cards';\n        let required_attributes = ['name', 'job_description', 'year_joined'];\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column>\n                    <Card.Group textAlign={'center'} itemsPerRow={3}>\n                        {props.collection.map(\n                            (item, key) =>{\n                                return renderCard(item, key)\n                            }\n                        )}\n                    </Card.Group>\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default ContactCardsModule","import React from 'react'\nimport {Form, Input} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) =>{\n    if(touched && error){\n        return(\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\nexport default (input, label, meta, inputAttr) =>{\n    return(\n        <Form.Field>\n            <label>{label}</label>\n            <Input {...input}  {...inputAttr} autoComplete='off' />\n            {renderError(meta)}\n        </Form.Field>\n    )\n};\n\n","import React from 'react'\nimport {Form, Input} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) =>{\n    if(touched && error){\n        return(\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\n\nexport default  ({ input: {value: omitValue, ...inputProps }, meta: omitMeta, ...props }) =>{\n    return(\n        <Form.Field>\n            <label>{props.label}</label>\n            <Input\n                type={'file'}\n                {...inputProps}\n                {...props.input}\n                autoComplete='off' />\n            {renderError(omitMeta)}\n        </Form.Field>\n    )\n};\n","import React from 'react'\nimport {Dropdown, Form} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) => {\n    if (touched && error) {\n        return (\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\nexport default (input, label, meta, inputAttr) => {\n    return (\n        <Form.Field>\n            <label>{label}</label>\n            <Dropdown selection {...input}\n                      {...inputAttr}\n                      value={input.value}\n                      onChange={(param, data) => input.onChange(data.value)}\n                      placeholder={label}\n            />\n            {renderError(meta)}\n        </Form.Field>\n    )\n};\n\n","import checkBox from './checkBoxInput'\nimport text from './textInput'\nimport file from './fileInput'\nimport slider from \"./sliderInput\";\nimport select from \"./selectInput\";\n\nexport const textInput = ({input,label,meta,inputAttr}) => text(input,label,meta,inputAttr);\nexport const fileInput = (props) => file(props);\nexport const selectInput = ({input,label,meta,inputAttr}) => select(input,label,meta,inputAttr);\nexport const checkBoxInput = ({input,label,meta,inputAttr={}}) => checkBox(input,label,meta,inputAttr);\nexport const sliderInput = ({input,label,meta,inputAttr={}}) => slider(input,label,meta,inputAttr);\n","import React, {Component} from 'react'\nimport {Button, Form, Grid, Icon, Segment, Transition} from \"semantic-ui-react\";\nimport {Field, reduxForm, reset} from \"redux-form\";\nimport {required} from \"../../constants/formValidationRules\";\nimport {fileInput, selectInput, textInput} from \"../helpers/redux-form-inputs\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\nimport {protocol} from \"../../constants/types\";\n\nclass FormModule extends Component{\n\n    state = {fileInputCode: 'fileCode'};\n    onSubmit = (formValues, dispatch) =>{\n        this.props.onSubmit(\n            this.props.collection['form'][0],\n            formValues\n        );\n        dispatch(reset('mainForm'));\n        this.setState({fileInputCode: Math.random().toString(36).substring(7)})\n    };\n    renderForm(){\n        if(this.props.collection['inputs'].length < 1){\n            return <b><i>Form under construction!</i></b>\n        }else{\n            return (\n                <div>\n                    {this.renderInputs()}\n                    <Button type={'submit'} icon labelPosition='left' size='large'  floated='right'>\n                        <Icon name='paper plane' />\n                        Run!\n                    </Button>\n                </div>\n            )\n        }\n    }\n    renderInputType = (input, key) => {\n        switch (input.input_type.type) {\n            case 'text':\n                return (\n                    <Field\n                        key={`field-input-${key}`}\n                        name={input.api_reference_parameter}\n                        component={textInput}\n                        validate={[ required ]}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`,\n                            type:'text',\n                        }}\n                    />\n                );\n            case 'file':\n                return (\n                    <Field\n                        key={`field-input-${key}-${this.state.fileInputCode}`}\n                        name={input.api_reference_parameter}\n                        component={fileInput}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`\n                        }}\n                    />\n                );\n            case 'select':\n                const options = this.createOptions(key, input.option_titles, input.option_values);\n                return (\n                    <Field\n                        key={`field-input-${key}`}\n                        name={input.api_reference_parameter}\n                        component={selectInput}\n                        validate={[ required ]}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`,\n                            options: options}\n\n                        }\n                    />\n                );\n            default:\n                return null\n\n        }\n    };\n    createOptions = (index, titles, values) => {\n        const options = [];\n        titles.forEach(\n            (title, key) =>{\n                options.push({\n                    'key': `optionItem-${index}-${key}`,\n                    'text': titles[key],\n                    'value': values[key]\n                })\n            }\n        );\n        return options\n    };\n    renderInputs(){\n        return this.props.collection['inputs'].map(\n            (input, key) => this.renderInputType(input, key)\n        )\n    }\n\n    render() {\n        if(!this.props.collection['inputs']){\n            return null\n        }\n        let module = 'form:form';\n        let required_attributes = ['title', 'api', 'tool_reference', 'description'];\n        if (!validateAttributes(this.props.collection['form'][0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        module = 'form:inputs';\n        required_attributes = ['api_reference_parameter', 'label', 'input_type'];\n        if (!validateAttributes(this.props.collection['inputs'][0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return(\n                <Grid.Row>\n                    <Grid.Column>\n                        {(this.props.protocolStatus === protocol.PROTOCOL_COMPLETED)?(\n                            <Transition\n                                transitionOnMount={true}\n                                animation={\"slide down\"}\n                                duration={{ show:1000 }}\n                            >\n                                <Segment color={'green'}>\n                                    <b>Algorithm executed!</b> Dataset will be in your mail when ready\n                                </Segment>\n                            </Transition>\n                        ):''\n                        }\n                        {(this.props.protocolStatus === protocol.PROTOCOL_FAILED)?(\n                            <Transition\n                                transitionOnMount={true}\n                                animation={\"slide down\"}\n                                duration={{ show:1000 }}\n                            >\n                                <Segment color={'red'}>\n                                    <b>Algorithm encountered an error!</b> please make sure the configuration is setup correctly\n                                </Segment>\n                            </Transition>\n                        ):''\n                        }\n                        <h3>Configuration</h3>\n                        <Form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                            {this.renderForm()}\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n        )\n    }\n\n}\nexport default reduxForm({\n    form:'mainForm'\n})(FormModule)","import React, {Component} from 'react'\nimport {\n    Button,\n    Card,\n    Container,\n    Dimmer,\n    Form,\n    Grid,\n    Header,\n    Icon,\n    Image,\n    Loader,\n    Search,\n    Segment\n} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport Plot from '../../../../node_modules/react-plotly.js/react-plotly';\n\n\nconst initialState = {isLoading: false, value: '', selected: false, tissues: [], stages: []}\n\nclass GeneFinder extends Component {\n    state = initialState;\n\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        this.setState({tissues: _.chain(this.props.collection.tissue).keyBy('id').mapValues('name').value()})\n        this.setState({stages: _.chain(this.props.collection.stage).keyBy('id').mapValues('name').value()})\n    }\n\n    mapTissues = (tissues) =>{\n        return tissues.map((item) =>{\n            return this.state.tissues[item]\n        })\n    }\n    generatePlotTraces = (data) => {\n        const plotTraces = [];\n        const stage_groups = _.groupBy(data, 'stage')\n        const stages = this.state.stages;\n        Object.keys(stage_groups).forEach( (key) => {\n            let items = _.remove(stage_groups[key], function (currentObject) {\n                return currentObject.count !== \"nan\";\n            });\n            const trace = {\n                x: this.mapTissues(_.map(items, 'tissue')),\n                y: _.map(items, 'CPM'),\n                mode: 'markers',\n                type: 'scatter',\n                name: stages[key],\n                opacity: 0.5,\n                marker: {\n                    size: 20\n                }\n            };\n            plotTraces.push(trace)\n        });\n        return plotTraces\n    }\n    generateSexPlotTraces = (data) => {\n        const plotTraces = [];\n        const sex_groups = _.groupBy(data, 'sex')\n        const stages = {'F': 'Female', 'M': 'Male'};\n        Object.keys(sex_groups).forEach( (key) => {\n            let items = _.remove(sex_groups[key], function (currentObject) {\n                return currentObject.count !== \"nan\";\n            });\n            const trace = {\n                x: this.mapTissues(_.map(items, 'tissue')),\n                y: _.map(items, 'CPM'),\n                mode: 'markers',\n                type: 'scatter',\n                name: stages[key],\n                opacity: 0.5,\n                marker: {\n                    size: 20\n                }\n            };\n            plotTraces.push(trace)\n        });\n        return plotTraces\n    }\n    renderGraph() {\n        if (this.props.moduleData.geneCounts.length > 0) {\n            const plotTraces = this.generatePlotTraces(this.props.moduleData.geneCounts)\n            return (\n                <>\n                <Plot\n                    className={'full-size large'}\n                    data={plotTraces}\n                    layout={{\n                        showlegend: true,\n                        height: 600, hovermode: 'closest',\n                        title: `Expression in ${this.props.moduleData.activeGene.ensg}\\ \n${this.props.moduleData.activeGene.symbol ? ` (${this.props.moduleData.activeGene.symbol})` : ''}\\\n${this.props.moduleData.activeGene.description ? ` - ${this.props.moduleData.activeGene.description}` : ''}`,\n                        yaxis:{\n                            title: \"Counts per million (CPM)\"\n                        }\n                    }}\n                />\n                </>\n            )\n        } else if (this.state.selected) {\n            return (\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Preparing expression data...'/>\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png'/>\n                    </Segment>\n                </div>\n            )\n        }\n        return null\n    }\n    renderSexGraph() {\n        if(this.props.moduleData.geneCounts.length > 0) {\n            const plotTraces = this.generateSexPlotTraces(this.props.moduleData.geneCounts)\n            return (\n                <>\n                    <Plot\n                        className={'full-size large'}\n                        data={plotTraces}\n                        layout={{\n                            showlegend: true,\n                            height: 600, hovermode: 'closest',\n                            title: `Expression in ${this.props.moduleData.activeGene.ensg}\\ \n${this.props.moduleData.activeGene.symbol ? ` (${this.props.moduleData.activeGene.symbol})` : ''}\\\n${this.props.moduleData.activeGene.description ? ` - ${this.props.moduleData.activeGene.description}` : ''}`,\n                            yaxis:{\n                                title: \"Counts per million (CPM)\"\n                            }\n                        }}\n                    />\n                </>\n            )\n        } else if (this.state.selected) {\n            return (\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Preparing expression data...'/>\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png'/>\n                    </Segment>\n                </div>\n            )\n        }\n        return null\n    }\n    handleResultSelect = (e, {result}) => {\n        this.props.setGene(result)\n        this.setState({value: result.ensg, selected: true})\n        this.props.getGeneCounts(result.id)\n    }\n    handleSearchChange = (event) => {\n        this.props.getGeneSuggestions(event.target.value);\n        this.setState({value: event.target.value, selected: false})\n    }\n\n    render() {\n        const {isLoading, value, tissues, stages} = this.state;\n        if (tissues.length < 1 || stages.length < 1) {\n            return (\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Loading'/>\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png'/>\n                    </Segment>\n                </div>\n            )\n        }\n        return (\n            <Grid>\n                <Grid.Row centered>\n                    <Grid.Column width={8}>\n                        <Form>\n                            <Form.Field>\n                                <label>Search using the gene symbol,ensembl id or gene description</label>\n                                <Search\n                                    loading={isLoading}\n                                    onResultSelect={this.handleResultSelect}\n                                    onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                                        leading: true,\n                                    })}\n                                    results={this.props.moduleData.suggestions}\n                                    value={value}\n                                    {...this.props}\n                                />\n                            </Form.Field>\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row centered>\n                    <Grid.Column width={16}>\n                        <center>\n                        {this.renderGraph()}\n                        </center>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row centered>\n                    <Grid.Column width={16}>\n                        <center>\n                            {this.renderSexGraph()}\n                        </center>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        )\n    }\n\n}\n\nexport default GeneFinder;","import React, {Component} from 'react'\nimport {\n    Button,\n    Card,\n    Container,\n    Dimmer, Dropdown,\n    Form,\n    Grid,\n    Header,\n    Icon,\n    Image, Input,\n    Loader,\n    Search,\n    Segment, Table\n} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport Plot from '../../../../node_modules/react-plotly.js/react-plotly';\nimport SmartDataTable from \"react-smart-data-table\";\nimport FileSaver from 'file-saver'\nimport CsvDownload from 'react-json-to-csv'\n\nconst initialState = {stages: [], options: [], searchTerm: '', downloadData: []}\n\nclass TissueFinder extends Component {\n\n    header = {\n        columnKey: {\n            text: 'Column 1',\n            invisible: false,\n            sortable: true,\n            filterable: true,\n        },\n        tableActions: {\n            text: 'Actions',\n            invisible: false,\n            sortable: false,\n            filterable: false,\n        }\n    }\n    state = initialState;\n\n    componentDidMount() {\n        this.setState({stages: _.chain(this.props.collection.stage).\n            keyBy('id').\n            mapValues('name').value()})\n        this.setState({\n            options: _.map(this.props.collection.tissue, (state) => ({\n                key: state.id,\n                text: state.name,\n                value: state.id,\n            }))\n        })\n    }\n\n    setActiveTissue = (e, data) => {\n        this.props.setTissue({id: data.value, text: e.target.innerText})\n    }\n    generatePlotTraces = (data, genes) => {\n        data = _.map(data, (item) => {\n            if (genes.includes(item.symbol)) return item\n        })\n        data = _.compact(data)\n        const plotTraces = [];\n        const stage_groups = _.groupBy(data, 'stage')\n        const stages = this.state.stages;\n        Object.keys(stage_groups).forEach(function (key) {\n            let items = _.remove(stage_groups[key], function (currentObject) {\n                return currentObject.count !== \"nan\";\n            });\n            const trace = {\n                x: _.map(items, 'symbol'),\n                y: _.map(items, 'CPM'),\n                mode: 'markers',\n                type: 'scatter',\n                name: stages[key],\n                opacity: 0.5,\n                marker: {\n                    size: 20\n                }\n            };\n            plotTraces.push(trace)\n        });\n        return plotTraces\n    }\n\n    renderGraph() {\n        if (this.props.moduleData.tissueCounts.length > 0) {\n            let genes = _.map(this.props.moduleData.tissueGenes, (gene, index) => {\n                if (index < 20) {\n                    return gene.symbol\n                }\n                return null\n            })\n            genes = _.compact(genes)\n            const plotTraces = this.generatePlotTraces(this.props.moduleData.tissueCounts, genes)\n            return (\n                <>\n                    <Header as='h3' dividing>\n                        Top 25 expressed genes in {this.props.moduleData.activeTissue.text} tissue\n                    </Header>\n                    <center>\n                        <Plot\n                            className={'full-size large'}\n                            data={plotTraces}\n                            layout={{\n                                height: 600, hovermode: 'closest',\n                                xaxis: {\n                                    categoryorder: \"array\",\n                                    categoryarray: _.values(genes)\n                                },\n                                yaxis:{\n                                    title: \"Counts per million (CPM)\"\n                                }\n                            }}\n                        />\n                    </center>\n                </>\n            )\n        } else if (this.state.selected) {\n            return (\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Preparing transcription data...'/>\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png'/>\n                    </Segment>\n                </div>\n            )\n        }\n        return null\n    }\n\n    renderTableContent = () => {\n        const content = this.props.moduleData.tissueGenes.map(\n            (gene, index) => {\n                if (!(gene.ensg.includes(this.state.searchTerm)\n                    || gene.symbol.includes(this.state.searchTerm)\n                    || gene.description.includes(this.state.searchTerm))) return null\n                return (\n                    <Table.Row key={`tissueItem-${index}`}>\n                        <Table.Cell>{index + 1}</Table.Cell>\n                        <Table.Cell>\n                            <a\n                                className={'tableLink'}\n                                href={`https://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g=${gene.ensg}`}\n                                target={'_blank'}\n                            >\n                                {gene.ensg}\n                            </a>\n                        </Table.Cell>\n                        <Table.Cell>{gene.symbol}</Table.Cell>\n                        <Table.Cell>{gene.description}</Table.Cell>\n                        <Table.Cell>{gene.CPM_avg}</Table.Cell>\n                    </Table.Row>\n                )\n            }\n        )\n        return _.compact(content)\n    }\n\n    filterGeneResults = (e) => {\n        this.setState({searchTerm: e.target.value})\n    }\n\n    renderTable() {\n        if (!this.props.moduleData.tissueGenes.length > 0) {\n            return null\n        }\n        return (\n            <>\n                <Header as='h3' dividing>\n                    Top 100 expressed genes in {this.props.moduleData.activeTissue.text} tissue\n                </Header>\n                <Form>\n                    <Form.Group>\n                        <Form.Field\n                            width={10}\n                        >\n                            <Input onChange={this.filterGeneResults} action={{icon: 'search'}} placeholder='Search...'/>\n                        </Form.Field>\n                        <Form.Field\n                            width={3}\n                        >\n                            <CsvDownload\n                                filename={`KeyGenes-${this.props.moduleData.activeTissue.text}-tissue.csv`}\n                                data={this.renderDownloadData()}\n                                className=\" primary ui labeled icon button\" >\n                                <i className=\"file icon right\"></i>\n                                Save table (.CSV)\n                            </CsvDownload>\n                        </Form.Field>\n                    </Form.Group>\n                </Form>\n                <Table basic>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>#</Table.HeaderCell>\n                            <Table.HeaderCell>ENSG</Table.HeaderCell>\n                            <Table.HeaderCell>Symbol</Table.HeaderCell>\n                            <Table.HeaderCell>Description</Table.HeaderCell>\n                            <Table.HeaderCell>Average CPM</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {this.renderTableContent()}\n                    </Table.Body>\n                </Table>\n            </>\n        )\n    }\n    renderDownloadData = () =>{\n        return _.compact(_.map(this.props.moduleData.tissueGenes, (\n            (gene) => ({\n                ENSG: gene.ensg,\n                Symbol: gene.symbol,\n                AVG_count: gene.count_avg,\n                Description: gene.description\n\n            })\n        )))\n    }\n    render() {\n        const active = this.props.moduleData.activeTissue.id\n        return (\n            <Grid>\n                <Grid.Row centered>\n                    <Grid.Column width={8}>\n                        <Form>\n                            <Form.Field>\n                                <label>Select a tissue</label>\n                                <Dropdown value={active} placeholder='Tissue' search selection\n                                          options={this.state.options}\n                                          onChange={this.setActiveTissue}/>\n                            </Form.Field>\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row centered>\n                    <Grid.Column width={16}>\n                        {this.renderGraph()}\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={16}>\n                        {this.renderTable()}\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        )\n    }\n}\n\nexport default TissueFinder;","import React, {Component} from 'react'\nimport {Grid, Tab} from 'semantic-ui-react'\nimport GeneFinder from \"./GeneFinder\";\nimport TissueFinder from \"./TissueFinder\";\nimport ModuleLoader from \"../moduleLoader\";\n\nclass GeneBrowser extends Component {\n    panes = [\n        {\n            menuItem: { key: 'genefinder', icon: 'dna', content: 'Search a gene' },\n            render: () => (\n                <Tab.Pane attached={false}>\n                    <GeneFinder\n                        collection={this.props.collection}\n                        moduleData={this.props.moduleData}\n                        getGeneSuggestions={this.props.getGeneSuggestions}\n                        setGene={this.props.setGene}\n                        setting={this.props.setting}\n                        getGeneCounts={this.props.getGeneCounts}\n                    />\n            </Tab.Pane>)\n        },\n        {\n            menuItem: { key: 'tissueFinder', icon: 'heart', content: 'View tissues' },\n            render: () => <Tab.Pane attached={false}>\n                <TissueFinder\n                    collection={this.props.collection}\n                    setTissue={this.props.setTissue}\n                    moduleData={this.props.moduleData}\n                />\n            </Tab.Pane>,\n        },\n    ];\n\n    render() {\n        return (\n            <Grid.Column width={16}>\n                <Tab\n                    menu={{secondary: true, pointing: true}}\n                    panes={this.panes}\n                />\n            </Grid.Column>\n        )\n    }\n}\n\nexport default GeneBrowser\n","import React from 'react'\n\nimport ButtonModule from './ButtonModule'\nimport ContentModule from './ContentModule'\nimport ToolStepModule from './ToolStepsModule'\nimport ListModule from \"./ListModule\";\nimport FaqModule from \"./FaqModule\";\nimport ContactCardsModule from \"./ContactCardsModule\";\nimport FormModule from \"./FormModule\";\nimport {throwError} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\nimport GeneFinder from \"./GeneBrowserModule/GeneFinder\";\nimport GeneBrowserModule from \"./GeneBrowserModule\";\nimport Page from \"../Page\";\n\nconst ModuleLoader = (props) =>  {\n    switch(props.setting.module) {\n        case 'content':\n            return (\n                <ContentModule\n                    setting={props.setting}\n                    collection={props.collection}\n                />\n            );\n        case 'button':\n            return (\n                <ButtonModule\n                    setting={props.setting}\n                />\n            );\n        case 'tool_steps':\n            return (\n                <ToolStepModule\n                    collection={props.collection}\n                />\n            );\n        case 'list':\n            return(\n                <ListModule\n                    alias_ref={props.setting.alias_ref}\n                    setting={props.setting}\n                    collection={props.collection}\n                />\n            );\n        case 'faqs':\n            return (\n                <FaqModule\n                    collection={props.collection}\n                />\n            );\n        case 'contact-cards':\n            return(\n                <ContactCardsModule\n                    collection={props.collection}\n                />\n            );\n        case 'form':\n            return(\n                <FormModule\n                    onSubmit={props.onSubmit}\n                    collection={props.collection}\n                    protocolStatus={props.protocolStatus}\n                />\n            );\n        case 'transcript-finder':\n            return (\n                <GeneBrowserModule\n                    collection={props.collection}\n                    moduleData={props.modulesData.geneFinder}\n                    getGeneSuggestions={props.getGeneSuggestions}\n                    setTissue={props.setTissue}\n                    setGene={props.setGene}\n                    setting={props.setting}\n                    getGeneCounts={props.getGeneCounts}\n                />\n            )\n        default:\n            throwError.module(moduleError.INVALID_MODULE);\n            return null\n    }\n};\n\nexport default ModuleLoader","\nimport React, {Component} from 'react'\nimport ModuleLoader from './modules/moduleLoader'\nimport {Grid, Header} from \"semantic-ui-react\";\nimport {setTissue} from \"../actions/modules/geneFinderActions\";\n\nclass Page extends Component{\n\n    getCollection (collection){\n        if (!collection){\n            return null\n        }\n        if (collection in this.props.collections){\n            return this.props.collections[collection]\n        }\n        else{\n            return null\n        }\n    }\n    renderModules(){\n        return this.props.config.settings.map(\n            (setting, key) =>{\n                if (setting.module === 'form'){\n                    return(\n                        <ModuleLoader\n                            getGeneSuggestions={this.props.getGeneSuggestions}\n                            getGeneCounts={this.props.getGeneCounts}\n                            onSubmit={this.props.onSubmit}\n                            page={this.props.config.name}\n                            key={`module-${this.props.config.reference}-${key}`}\n                            collection={{\n                                'form': this.getCollection(setting.collection),\n                                'inputs': this.getCollection('inputs')\n                            }}\n                            setting={setting}\n                            protocolStatus={this.props.protocolStatus}\n                        />\n                    )\n                }\n                if(setting.module === 'transcript-finder'){\n                    return (\n                        <ModuleLoader\n                            setTissue={this.props.setTissue}\n                            modulesData={this.props.modulesData}\n                            setGene={this.props.setGene}\n                            getGeneSuggestions={this.props.getGeneSuggestions}\n                            getGeneCounts={this.props.getGeneCounts}\n                            page={this.props.config.name}\n                            key={`module-${this.props.config.reference}-${key}`}\n                            collection={{\n                                'tissue': this.getCollection('tissue'),\n                                'stage': this.getCollection('stage')\n                            }}\n                            setting={setting}\n                        />\n                    )\n                }\n                return (\n                    <ModuleLoader\n                        modulesData={this.props.modulesData}\n                        setGene={this.props.setGene}\n                        getGeneSuggestions={this.props.getGeneSuggestions}\n                        getGeneCounts={this.props.getGeneCounts}\n                        page={this.props.config.name}\n                        key={`module-${this.props.config.reference}-${key}`}\n                        collection={this.getCollection(setting.collection)}\n                        setting={setting}\n                    />\n                )\n            }\n        )\n    }\n    render() {\n        if (!this.props.path){\n            return null\n        }\n        return (\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Header as='h1' dividing>\n                            {this.props.config.name}\n                        </Header>\n                    </Grid.Column>\n                </Grid.Row>\n                {this.renderModules()}\n            </Grid>\n        )\n    }\n\n}\nexport  default  Page;","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\n\nimport App from \"../components/App\";\nimport {Dimmer, Icon, Loader, Segment} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport 'fs'\nimport history from '../history'\n\nimport {getConfig, getApplication} from '../actions/configActions'\nimport {getCollections} from '../actions/collectionActions'\nimport {Route, Router, Switch} from \"react-router-dom\";\nimport Page from \"../components/Page\";\nimport {directProtocol} from '../actions/protocols/directProtocolActions'\n\n\n\nimport {projectName, baseUrl} from \"../config.js\";\nimport {throwError} from \"../utils/generalHelpers\";\nimport {configError} from '../constants/errorTypes'\nimport GeneFinder from \"../components/modules/GeneBrowserModule/GeneFinder\";\nimport {getGeneSuggestions, setGene, getGeneCounts, setTissue} from \"../actions/modules/geneFinderActions\";\n\n\nclass AppContainer extends Component {\n\n    state = {\n        menu: [],\n        sloganText: false,\n        pageView: false,\n        render: false,\n        config: false\n    };\n    onSubmit = (config, values) => {\n        switch (config.api.protocol) {\n            case 'direct':\n                this.props.directProtocol(config, values);\n            break;\n            default:\n                console.log('No valid protocol connected to form')\n        }\n    };\n    getCollections = () =>{\n        const collections = [];\n        this.props.config.forEach(\n            (settingItem) => {\n                settingItem.settings.forEach(\n                    (item) =>{\n                        if(item.collection){\n                            if(item.collection === 'form'){\n                                collections.push(item.collection);\n                                collections.push('inputs');\n                            }\n                            collections.push(item.collection)\n                        }\n                        else{\n                            if(item.module === \"transcript-finder\"){\n                                collections.push(\"tissue\")\n                                collections.push(\"stage\")\n                            }\n                        }\n                    }\n                )\n            }\n        );\n        return _.uniq(collections)\n    };\n\n    loadConfig = async () =>{\n        await this.props.getApplication();\n        await this.props.getConfig();\n        const collections = this.getCollections();\n        await this.props.getCollections(collections);\n        this.setState({menu:this.props.config});\n    };\n\n    UNSAFE_componentWillMount(){\n        if(baseUrl !== null){\n            this.setState({config: true});\n        }\n    }\n    componentDidMount() {\n        this.loadConfig();\n        setTimeout(function() {\n            this.setState({render: true})\n        }.bind(this), 2000);\n        setTimeout(\n            () => {\n                this.setState({sloganText: true})\n            }, 1200);\n    }\n    renderRoutes() {\n        return this.props.config.map(\n            (item) =>{\n                return (\n                    <Route\n                        key={`route-${item.reference}`}\n                        path={'/'+item.reference}\n                        exact\n                        render={(props) => this.wrapTransition(\n                            <Page\n                                {...props}\n                                setTissue={this.props.setTissue}\n                                modulesData={this.props.modules}\n                                getGeneSuggestions={this.props.getGeneSuggestions}\n                                setGene={this.props.setGene}\n                                getGeneCounts={this.props.getGeneCounts}\n                                path={'/'+item.reference}\n                                config={item}\n                                collections={this.props.collections}\n                                onSubmit={this.onSubmit}\n                                protocolStatus={this.props.protocolStatus}\n                            />)\n                        }\n                    />\n                )\n            }\n        )\n    }\n    wrapTransition =  (object) => {\n        return object\n    };\n    renderContent() {\n        if(this.props.config.length === 0){\n            return null\n        }\n        return (\n            <Router history={history}>\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        exact\n                        render={(props) => this.wrapTransition(\n                            <Page {...props}\n                                  modulesData={this.props.modules}\n                                  getGeneSuggestions={this.props.getGeneSuggestions}\n                                  setGene={this.props.setGene}\n                                  setTissue={this.props.setTissue}\n                                  getGeneCounts={this.props.getGeneCounts}\n                                  path={'/'+this.props.config[0].reference}\n                                  config={this.props.config[0]}\n                                  collections={this.props.collections}\n                                  protocolStatus={this.props.protocolStatus}\n                                  onSubmit={this.onSubmit}\n                            />)\n                        }\n                    />\n                    {this.renderRoutes()}\n                </Switch>\n            </Router>\n        );\n    }\n    render() {\n        if(this.state.render && !_.isEmpty(this.props.config)) {\n            document\n                .documentElement.style.setProperty(\"--color-primary\", this.props.application.primary_color);\n            return (<App\n                    applicationDetails={this.props.application}\n                    activePageContent={this.renderContent()}\n                    collections={this.props.collections}\n                    config={this.props.config}\n                    menu={this.props.config}\n                    />\n            )\n        }\n        else if(!this.state.render){\n            return (\n                <Segment className={'loading-segment'}>\n                    <Dimmer active>\n                        <Loader indeterminate inline='centered'>Preparing the {projectName} website</Loader>\n                    </Dimmer>\n                </Segment>\n            )\n        }\n        else{\n            throwError.config(configError.FAILED_CONFIG);\n            return (\n                <Segment className={'loading-segment'}>\n                    <Dimmer active>\n                        <Icon name='close' size='huge' inverted color='grey' />\n                        <br/>\n                        <p>Failed to load website</p>\n                    </Dimmer>\n                </Segment>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        config: _.values(state.config),\n        collections: state.collections,\n        protocolStatus:state.protocolStatus,\n        application: state.application[0],\n        modules: state.modules\n    }\n};\nexport default connect(mapStateToProps,{\n        getConfig,\n        getApplication,\n        getCollections,\n        directProtocol,\n        getGeneSuggestions,\n        setGene,\n        getGeneCounts,\n        setTissue\n}\n    )(AppContainer)","import SascWebApi from \"../apis/SascWeb\";\nimport {getOnlyPublished} from '../utils/generalHelpers'\nimport {application, config} from '../constants/types'\n\n\nexport const getConfig = () => async (dispatch) =>{\n    const result = await SascWebApi.get('items/config');\n    const publishedConfig = getOnlyPublished(result.data.data);\n    dispatch({type: config.SET_CONFIG, payload: publishedConfig})\n};\n\nexport const getApplication = () => async (dispatch) =>{\n    const result = await SascWebApi.get('items/application');\n    const publishedConfig = getOnlyPublished(result.data.data);\n    dispatch({type: application.GET_APPLICATION_DONE, payload: publishedConfig})\n};","import SascWebApi from \"../apis/SascWeb\";\nimport {getOnlyPublished} from '../utils/generalHelpers'\nimport {collections} from '../constants/types'\n\n\nexport const getCollections = (rawCollections) => (dispatch) =>{\n    let count = 0;\n    let collectionData = {};\n    rawCollections.forEach( async (item) => {\n        const result = await SascWebApi.get('items/'+item+'?fields=*.*.*');\n        collectionData[item] = getOnlyPublished(result.data.data);\n        count++;\n        if(count === rawCollections.length){\n            dispatch({type: collections.ADD_COLLECTION, payload:collectionData})\n        }\n    });\n\n};\n\n\n\n","import axios from \"axios\";\n\nimport {protocol} from '../../constants/types'\n\nexport const directProtocol = (config, data) => async (dispatch) => {\n    let bodyFormData = new FormData();\n    bodyFormData.set('email', data.email);\n    bodyFormData.set('training', data.training);\n    bodyFormData.append('file', data.file[0]);\n    const result = await axios({\n        method: 'post',\n        url: config.tool_reference,\n        data: bodyFormData,\n        config: { headers: {'Content-Type': 'multipart/form-data',  'Accept': 'text/html' }}\n    });\n    if(result.data.includes(\"Succesfully submitted. Please check your email in a few minutes\")){\n        dispatch({\n            type:protocol.PROTOCOL_COMPLETED\n        });\n    }else{\n        dispatch({\n            type:protocol.PROTOCOL_FAILED\n        });\n    }\n};","import SascWebApi from \"../../apis/SascWeb\";\nimport {modules} from \"../../constants/types\";\n\n\nexport const getGeneSuggestions = (searchTerm) => async (dispatch) =>{\n    const result = await SascWebApi.get(`/items/gene?limit=5&filter[symbol][logical]=or&\n    filter[symbol][rlike]=${searchTerm}%&filter[description][logical]=or&\n    filter[description][rlike]=${searchTerm}%&filter[ensg][logical]=or&filter[ensg][rlike]=${searchTerm}%\n    &filter[symbol][nnull]`);\n    dispatch({type: modules.geneFinder.GET_SUGGESTIONS, payload: result.data.data})\n};\n\nexport const getGeneCounts = (id) => async (dispatch) =>{\n    const result = await SascWebApi.get(`/items/transcript?filter[gene][eq]=${id}`);\n    dispatch({type: modules.geneFinder.GET_GENE_COUNTS, payload: result.data.data})\n};\nexport const setGene = (item) =>{\n    return {type:modules.geneFinder.SET_ACTIVE_GENE, payload:item}\n}\nexport const setTissue = (activeTissue) =>  async (dispatch) =>{\n    const result = await SascWebApi.post(`/custom/data/tissue-data`,\n        {tissueId: activeTissue.id, amount: 100})\n    dispatch({type: modules.geneFinder.SET_ACTIVE_TISSUE, payload: {activeTissue:activeTissue, data:result.data}})\n}\n","import {combineReducers} from \"redux\";\nimport suggestionsReducer from \"./suggestionsReducer\";\nimport activeGeneReducer from \"./activeGeneReducer\";\nimport transcriptsReducer from \"./transcriptsReducer\";\nimport activeTissueReducer from \"./activeTissueReducer\";\nimport tissueCountsReducer from \"./tissueCountsReducer\";\nimport tissueGenesReducer from \"./tissueGenesReducer\";\n\nexport const geneFinderReducers = combineReducers({\n    suggestions: suggestionsReducer,\n    activeGene: activeGeneReducer,\n    geneCounts: transcriptsReducer,\n    activeTissue: activeTissueReducer,\n    tissueCounts: tissueCountsReducer,\n    tissueGenes: tissueGenesReducer\n});","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state=[], action) => {\n    switch (action.type) {\n        case modules.geneFinder.GET_SUGGESTIONS:\n            const items= [];\n            _.values(action.payload).forEach(\n                (item, value) => {\n                    if(!item.symbol){\n                        items.push({\n                            title: `${item.ensg}`,\n                            description: item.description,\n                            id:item.id,\n                            ensg: item.ensg\n                        })\n                    }else{\n                        items.push({\n                            title: `${item.symbol} | ${item.ensg}`,\n                            description: item.description,\n                            id:item.id,\n                            ensg: item.ensg,\n                            symbol: item.symbol\n                        })\n                    }\n\n                }\n            );\n            return items;\n        default:\n            return state;\n    }\n}","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_GENE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state=[], action) => {\n    switch (action.type) {\n        case modules.geneFinder.GET_GENE_COUNTS:\n            return _.values(action.payload)\n        case modules.geneFinder.SET_ACTIVE_GENE:\n            return []\n        default:\n            return state;\n    }\n}","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state='', action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_TISSUE:\n            return action.payload.activeTissue;\n        default:\n            return state;\n    }\n}","import {modules} from \"../../../constants/types\";\n\nexport default (state= {}, action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_TISSUE:\n            return action.payload.data.counts;\n        default:\n            return state;\n    }\n}","import {modules} from \"../../../constants/types\";\n\nexport default (state= {}, action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_TISSUE:\n            return action.payload.data.genes;\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\nimport {geneFinderReducers} from \"./genefinder\";\n\nexport const modules = combineReducers({\n    geneFinder: geneFinderReducers\n});","import {combineReducers} from \"redux\";\nimport {reducer as formReducer} from 'redux-form'\nimport configReducer from './configReducer'\nimport collectionsReducer from \"./collectionsReducer\";\nimport protocolStatusReducer from './protocols/protocolStatusReducer'\nimport applicationReducer from \"./applicationReducer\";\nimport {modules} from \"./modules\";\n\nexport default combineReducers({\n    form: formReducer,\n    protocolStatus: protocolStatusReducer,\n    application: applicationReducer,\n    config: configReducer,\n    collections: collectionsReducer,\n    modules: modules\n});","import {protocol} from \"../../constants/types\";\n\nexport default (state='', action) => {\n    switch (action.type) {\n        case protocol.PROTOCOL_COMPLETED:\n            return protocol.PROTOCOL_COMPLETED;\n\n        case protocol.PROTOCOL_FAILED:\n            return protocol.PROTOCOL_FAILED;\n        default:\n            return ''\n    }\n}","import {application} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case application.GET_APPLICATION_DONE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {config} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case config.SET_CONFIG:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {collections} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case collections.ADD_COLLECTION:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport App from \"./containers/AppContainer\";\nimport 'semantic-ui-css/semantic.min.css'\nimport './assets/main.css'\nimport reducers from './reducers'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}