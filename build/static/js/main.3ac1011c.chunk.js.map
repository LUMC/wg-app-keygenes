{"version":3,"sources":["history.js","components/App.js","config.js","apis/SascWeb.js","constants/errorTypes.js","utils/generalHelpers.js","constants/types.js","constants/formValidationRules.js","components/modules/ButtonModule.js","components/modules/ContentModule.js","components/modules/ToolStepsModule.js","components/modules/ListModule.js","components/modules/FaqModule.js","components/modules/ContactCardsModule.js","components/helpers/redux-form-inputs/textInput.js","components/helpers/redux-form-inputs/fileInput.js","components/helpers/redux-form-inputs/selectInput.js","components/helpers/redux-form-inputs/index.js","components/modules/FormModule.js","components/modules/GeneBrowserModule/GeneFinder.js","components/modules/GeneBrowserModule/TissueFinder.js","components/modules/GeneBrowserModule/index.js","components/modules/moduleLoader.js","components/Page.js","containers/AppContainer.js","actions/configActions.js","actions/collectionActions.js","actions/protocols/directProtocolActions.js","actions/modules/geneFinderActions.js","reducers/modules/genefinder/index.js","reducers/modules/genefinder/suggestionsReducer.js","reducers/modules/genefinder/activeGeneReducer.js","reducers/modules/genefinder/transcriptsReducer.js","reducers/modules/genefinder/activeTissueReducer.js","reducers/modules/genefinder/tissueCountsReducer.js","reducers/modules/genefinder/tissueGenesReducer.js","reducers/modules/index.js","reducers/index.js","reducers/protocols/protocolStatusReducer.js","reducers/applicationReducer.js","reducers/configReducer.js","reducers/collectionsReducer.js","index.js"],"names":["createBrowserHistory","charPoses","exit","opacity","y","enter","delay","_ref","charIndex","App","items","length","react_default","a","createElement","Dropdown","text","pointing","className","Menu","map","item","key","Item","name","reference","concat","as","Link","to","this","props","menu","subitems","inverted","widths","secondary","stackable","react_router","history","subitem","push","renderSubMenu","Fragment","main","Transition","visible","sloganText","animation","duration","show","particles_default","params","particles","number","value","size","Container","Grid","columns","Row","verticalAlign","Column","textAlign","react_pose_text_es","initialPose","pose","applicationDetails","title","unmountOnHide","sub_title","renderMenu","activePageContent","Component","baseUrl","axios","create","baseURL","configError","moduleError","getOnlyPublished","data","_","values","filter","status","published","validateAttributes","obj","required_attributes","every","Object","keys","includes","validateReferenceAlias","hasOwnProperty","throwError","classCallCheck","config","message","console","error","module","moduleAttr","attrs","min","collections","protocol","application","modules","GET_SUGGESTIONS","SET_ACTIVE_GENE","GET_GENE_COUNTS","SET_ACTIVE_TISSUE","SET_ACTIVE_STAGE","ButtonModule","setting","type","href","link","target","rel","Button","labelPosition","color","Icon","Label","basic","label","download","icon","moduleName","ContentModule","collection","pointer_set","keyBy","alias_ref","arguments","undefined","Header","getTitle","Parser","content","ToolStepModule","dir","dist_default","direction","time","step_name","description","tags","lineHeight","renderIconList","List","divided","relaxed","Content","Description","renderDownloadList","Image","avatar","circular","ListModule","FaqModule","question","answer","checkImage","cardData","image","full_url","e","ContactCardsModule","Card","Group","itemsPerRow","isBrowser","isTablet","src","wrapped","ui","Meta","year_joined","year_left","job_description","extra","email","renderCard","required","redux_form_inputs_textInput","input","meta","inputAttr","Form","Field","Input","assign","autoComplete","touched","renderError","redux_form_inputs_fileInput","_ref2","_ref2$input","inputProps","objectWithoutProperties","omitMeta","redux_form_inputs_selectInput","selection","onChange","param","placeholder","textInput","fileInput","file","selectInput","select","FormModule","state","fileInputCode","onSubmit","formValues","dispatch","_this","reset","setState","Math","random","toString","substring","renderInputType","input_type","api_reference_parameter","component","validate","toLowerCase","options","createOptions","option_titles","option_values","index","titles","forEach","renderInputs","floated","_this2","protocolStatus","transitionOnMount","Segment","handleSubmit","renderForm","reduxForm","form","initialState","isLoading","selected","tissues","stages","graphSetting","GeneFinder","possibleConstructorReturn","getPrototypeOf","call","mapTissues","generatePlotTraces","plotTraces","stage_groups","groupBy","remove","currentObject","count","trace","x","mode","marker","generateSexPlotTraces","sex_groups","F","M","symbol","setGraph","handleResultSelect","result","setGene","ensg","getGeneCounts","id","handleSearchChange","event","getGeneSuggestions","chain","tissue","mapValues","stage","moduleData","geneCounts","plotTracesSex","active","onClick","react_plotly_default","toConsumableArray","layout","showlegend","height","hovermode","activeGene","yaxis","xaxis","categoryarray","Dimmer","Loader","_this$state","centered","width","Search","loading","onResultSelect","onSearchChange","debounce","leading","results","suggestions","renderGraph","searchTerm","downloadData","stageOptions","stageActive","stageName","TissueFinder","setActiveTissue","setTissue","innerText","genes","compact","renderTableContent","tissueGenes","gene","Table","Cell","CPM_avg","setActiveStage","activeTissue","filterGeneResults","renderDownloadData","ENSG","Symbol","AVG_count","count_avg","tissueCounts","log","dividing","action","react_json_to_csv_dist_default","filename","HeaderCell","Body","search","renderTable","GeneBrowser","panes","menuItem","render","Tab","Pane","attached","GeneBrowserModule_GeneFinder","GeneBrowserModule_TissueFinder","isMobile","ModuleLoader","modules_ContentModule","modules_ButtonModule","ToolStepsModule","modules_ListModule","modules_FaqModule","modules_ContactCardsModule","modules_FormModule","GeneBrowserModule","modulesData","geneFinder","Page","settings","moduleLoader","page","getCollection","inputs","path","renderModules","AppContainer","pageView","api","directProtocol","getCollections","settingItem","uniq","loadConfig","_callee","regenerator_default","wrap","_context","prev","next","getApplication","getConfig","stop","wrapTransition","object","setTimeout","bind","_this3","exact","components_Page","_this4","renderRoutes","isEmpty","document","documentElement","style","setProperty","primary_color","components_App","renderContent","indeterminate","inline","connect","asyncToGenerator","mark","publishedConfig","SascWebApi","get","sent","payload","_x","apply","_callee2","_context2","_x2","rawCollections","collectionData","bodyFormData","FormData","set","training","append","method","url","tool_reference","headers","Content-Type","Accept","_ref3","_callee3","_context3","post","tissueId","amount","adult","_x3","geneFinderReducers","combineReducers","counts","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","es","containers_AppContainer","getElementById"],"mappings":"2WAEeA,0CCiBTC,EAAY,CACdC,KAAM,CAACC,QAAS,EAAGC,EAAG,IACtBC,MAAO,CACHF,QAAS,EACTC,EAAG,EACHE,MAAO,SAAAC,GAAA,OAA6B,GAA7BA,EAAEC,aAiJFC,wLA5IGC,GACV,OAAGA,EAAMC,OAAS,EACP,KAGPC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,KAAK,OAAOC,UAAQ,EAACC,UAAU,aACrCN,EAAAC,EAAAC,cAACC,EAAA,EAASI,KAAV,KAEQT,EAAMU,IACF,SAACC,EAAMC,GAAP,OACIV,EAAAC,EAAAC,cAACC,EAAA,EAASQ,KAAV,CACQC,KAAMH,EAAKI,UACXH,IAAG,YAAAI,OAAcJ,GACjBK,GAAIC,IACJC,GAAI,IAAMR,EAAKI,WACdJ,EAAKG,+CAUtC,GAAIM,KAAKC,MAAMC,KAAKrB,OAAS,EACzB,OAAO,KAEX,IAAMsB,EAAW,GACjB,OACIrB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMe,UAAQ,EAACC,OAAQ,EAAGjB,UAAW,WAAYD,UAAQ,EAACmB,WAAS,EAACC,WAAS,GACzEzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAQC,QAASA,GAETT,KAAKC,MAAMC,KAAKZ,IACZ,SAACC,EAAMC,GACH,OAAGD,EAAKmB,SACJP,EAASQ,KAAKpB,GACP,MAGPT,EAAAC,EAAAC,cAACK,EAAA,EAAKI,KAAN,CACIC,KAAMH,EAAKI,UACXH,IAAG,YAAAI,OAAcJ,GACjBK,GAAIC,IACJC,GAAI,IAAMR,EAAKI,WACdJ,EAAKG,QAKtBM,KAAKY,cAAcT,sCAQnC,OACIrB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8B,SAAA,KACI/B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAW,WACZN,EAAAC,EAAAC,cAAC8B,EAAA,YAAD,KACAhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CACIC,QAAShB,KAAKC,MAAMgB,WACpBC,UAAW,UACXC,SAAU,CAACC,KAAM,MAEjBtC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CACIK,UAAW,YACXkC,OAAQ,CACJC,UAAa,CACTC,OAAU,CACNC,MAAS,IAEbC,KAAQ,CACJD,MAAS,UAOjC3C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACI7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAMC,QAAS,GACX/C,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,CAAUC,cAAc,SAAS3C,UAAW,eACxCN,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,CAAaC,UAAW,UACpBnD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAWC,YAAY,OAAOC,KAAK,QAAQjE,UAAWA,GACjD6B,KAAKC,MAAMoC,mBAAmBC,QAGvCxD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CACIwB,eAAe,EACfvB,QAAShB,KAAKC,MAAMgB,WACpBC,UAAW,UACXC,SAAU,CAACC,KAAM,MAEjBtC,EAAAC,EAAAC,cAAA,WACKgB,KAAKC,MAAMoC,mBAAmBG,eAMnD1D,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CACIwB,eAAe,EACfvB,QAAShB,KAAKC,MAAMgB,WACpBC,UAAW,YACXC,SAAU,CAACC,KAAM,MAEjBtC,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,KACIhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,KACKhC,KAAKyC,mBAO9B3D,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CACIwB,eAAe,EACfvB,QAAShB,KAAKC,MAAMgB,WACpBC,UAAW,UACXC,SAAU,CAACC,KAAM,MAEjBtC,EAAAC,EAAAC,cAAA,OAAKI,UAAW,gBACZN,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACK3B,KAAKC,MAAMyC,8BAnI1BC,4FC5BLC,EAAQ,sCCGNC,MAAMC,OAAO,CACzBC,QAAWH,ICJDI,EACM,2DAGNC,EACO,+CADPA,EAEW,oDAFXA,EAGW,2CCJXC,EAAmB,SAACC,GAE7B,OAAOC,IAAEC,OAAOD,IAAEE,OACdH,EAAM,SAAS5D,GAAO,MAAuB,cAAhBA,EAAKgE,QAA6C,cAAnBhE,EAAKiE,cAI5DC,EAAqB,SAACC,EAAKC,GACpC,OAAQA,EAAoBC,MAAM,SAAApE,GAAG,OAAIqE,OAAOC,KAAKJ,GAAKK,SAASvE,MAG1DwE,EAAyB,SAACxE,EAAKkE,GACxC,OAAOA,EAAIO,eAAezE,IAGjB0E,EAAb,SAAAA,IAAAL,OAAAM,EAAA,EAAAN,CAAA7D,KAAAkE,IAAaA,EACFE,OAAS,SAACC,GACbC,QAAQC,MAAR,0BAAA3E,OAAyCyE,KAFpCH,EAIFM,OAAS,SAACH,GACbC,QAAQC,MAAR,mBAAA3E,OAAkCyE,KAL7BH,EAOFO,WAAa,SAACD,EAAQE,GACzBJ,QAAQC,MAAR,mBAAA3E,OAAkC4E,EAAlC,KAAA5E,OAA4CqD,EAA5C,MAAArD,OAAiF8E,KC1BlF,ICCqBC,EDDfP,EAEG,aAGHQ,EACO,iBAGPC,GACU,qBADVA,GAEQ,kBAGRC,GACa,uBAIbC,GACG,CACRC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,kBAAmB,oBACnBC,iBAAkB,wCEmBXC,GAvCM,SAACpF,GAClB,OAAOA,EAAMqF,QAAQlB,OAAOmB,MACxB,IAAK,SACD,OACIzG,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,KACIhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,CAAaC,UAAW,UACpBnD,EAAAC,EAAAC,cAAA,KAAGwG,KAAMvF,EAAMqF,QAAQlB,OAAOA,OAAOqB,KAAMC,OAAO,SAASC,IAAI,uBAC/D7G,EAAAC,EAAAC,cAAC4G,GAAA,EAAD,CAAQ/F,GAAG,MAAMgG,cAAc,SAC3B/G,EAAAC,EAAAC,cAAC4G,GAAA,EAAD,CAAQE,MAAM,QACVhH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAMrG,KAAK,WADf,UAIAZ,EAAAC,EAAAC,cAACgH,GAAA,EAAD,CAAOC,OAAK,EAAE9G,SAAS,QAClBc,EAAMqF,QAAQlB,OAAOA,OAAO8B,WAOrD,IAAK,WACD,OACIpH,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,KACIhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,CAAaC,UAAW,UACpBnD,EAAAC,EAAAC,cAAA,KAAGwG,KAAMvF,EAAMqF,QAAQlB,OAAOA,OAAOqB,KAAMU,UAAQ,EAACT,OAAQ,UAC5D5G,EAAAC,EAAAC,cAAC4G,GAAA,EAAD,CAAQQ,MAAI,EAACP,cAAc,QACvB/G,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAMrG,KAAK,UACVO,EAAMqF,QAAQlB,OAAOA,OAAO8B,UAMjD,QAEI,OADAhC,EAAWM,OAAX,8BAAA5E,OAAgDK,EAAMoG,WAAtD,eACO,sCC/Bb1C,GAAsB,CAAC,kBAAmB,WAuCjC2C,GAtBO,SAACrG,GACnB,GAAIA,EAAMsG,WAAW,CACjB,IAAK9C,EAAmBxD,EAAMsG,WAAW,GAAI5C,IACU,OAAnDO,EAAWO,WArBR,UAqB2Bd,IAA4B,KAC9D,IAAM6C,EAAcpD,IAAEqD,MAAMxG,EAAMsG,WAAY,mBAC9C,OAAKvC,EAAuB/D,EAAMqF,QAAQoB,UAAWF,GAGjD1H,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8B,SAAA,KAvBK,SAACyB,GAAoB,IAAbZ,EAAaiF,UAAA9H,OAAA,QAAA+H,IAAAD,UAAA,GAAAA,UAAA,GAAR,KAC1B,OAAIrE,EAIAxD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,KACIhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,KACIlD,EAAAC,EAAAC,cAAC6H,GAAA,EAAD,CAAQhH,GAAI6B,GACPY,KANN,KAsBFwE,CAASN,EAAYvG,EAAMqF,QAAQoB,WAAWpE,OAC/CxD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,KACIhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,KACC+E,KAAOP,EAAYvG,EAAMqF,QAAQoB,WAAWM,aANjD9C,EAAWM,OAAOvB,GAAuC,MAYjE,OAAO,2BCrCLU,GAAsB,CAAC,OAAQ,QAAS,YAAa,cAAe,QAsC3DsD,GAnCQ,SAAChH,GACpB,OAAIA,EAAMsG,WACD9C,EAAmBxD,EAAMsG,WAAW,GAAI5C,IAIzC7E,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,KACIhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,CAAa5C,UAAW,YACnBa,EAAMsG,WAAWjH,IACd,SAACC,EAAMC,GACH,IAAI0H,GAAQ1H,EAAM,GAAG,IAAM,EAAG,OAAQ,QACtC,OACIV,EAAAC,EAAAC,cAACmI,GAAApI,EAAD,CACIS,IAAG,gBAAAI,OAAkBJ,GACrBJ,UAAW,YACXgI,UAAWF,EACXd,KAAM7G,EAAK6G,KACX9D,MAAO/C,EAAK+C,MACZ+E,KAAI,GAAAzH,OAAKJ,EAAI,EAAT,KAAAI,OAAcL,EAAK+H,WACvBC,YAAahI,EAAKgI,YAClBzB,MAAM,OACN0B,KAAMjI,EAAKiI,KACXC,WAAYjI,SAnBpC0E,EAAWO,WAPR,aAO2Bd,IAA4B,MA4B3D,0BClCLmD,GAAW,SAACxE,GAAoB,IAAbZ,EAAaiF,UAAA9H,OAAA,QAAA+H,IAAAD,UAAA,GAAAA,UAAA,GAAR,KAC1B,OAAIrE,EAIAxD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,KACIhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,KACIlD,EAAAC,EAAAC,cAAC6H,GAAA,EAAD,CAAQhH,GAAI6B,GACPY,KANN,MA0BToF,GAAiB,SAACzH,GACpB,IACM0D,EAAsB,CAAC,OAAQ,QAAS,eAC9C,IAAKF,EAAmBxD,EAAMsG,WAAW,GAAI5C,GACU,OAAnDO,EAAWO,WAHA,aAGmBd,GAA4B,KAC9D,IAAM6C,EAAcpD,IAAEqD,MAAMxG,EAAMsG,WAAY,mBAC9C,OAAKvC,EAAuB/D,EAAMqF,QAAQoB,UAAWF,GAIjD1H,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8B,SAAA,KACKiG,GAAS7G,EAAMqF,QAAQhD,OACxBxD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,KACIhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,KACIlD,EAAAC,EAAAC,cAAC2I,GAAA,EAAD,CAAMC,SAAO,EAACC,SAAO,GAChB5H,EAAMsG,WAAWjH,IACd,SAACC,EAAMC,GACH,OACIV,EAAAC,EAAAC,cAAC2I,GAAA,EAAKlI,KAAN,CAAWD,IAAG,aAAAI,OAAeJ,EAAf,KAAAI,OAAsBK,EAAMqF,QAAQiB,aAC9CzH,EAAAC,EAAAC,cAAC2I,GAAA,EAAK5B,KAAN,CAAWrG,KAAMH,EAAK6G,KAAM1E,KAAK,QAAQK,cAAc,QACvDjD,EAAAC,EAAAC,cAAC2I,GAAA,EAAKG,QAAN,KACIhJ,EAAAC,EAAAC,cAAC2I,GAAA,EAAKd,OAAN,CAAahH,GAAG,KAAKN,EAAK+C,OAC1BxD,EAAAC,EAAAC,cAAC2I,GAAA,EAAKI,YAAN,CAAkBlI,GAAG,KAAKN,EAAKgI,sBAfnErD,EAAWM,OAAOvB,GAAuC,OA2B3D+E,GAAqB,SAAC/H,GACxB,IACM0D,EAAsB,CAAC,OAAQ,QAAS,eAC9C,IAAKF,EAAmBxD,EAAMsG,WAAW,GAAG3H,MAAM,GAAI+E,GACC,OAAnDO,EAAWO,WAHA,aAGmBd,GAA4B,KAC9D,IAAM6C,EAAcpD,IAAEqD,MAAMxG,EAAMsG,WAAY,mBAC9C,OAAKvC,EAAuB/D,EAAMqF,QAAQoB,UAAWF,GAGjD1H,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,KACIhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,KACK8E,GAAS7G,EAAMqF,QAAQhD,MAAO,MAC/BxD,EAAAC,EAAAC,cAAC2I,GAAA,EAAD,KACKnB,EAAYvG,EAAMyG,WAAW9H,MAAMU,IAChC,SAACC,EAAMC,GACH,OACIV,EAAAC,EAAAC,cAAC2I,GAAA,EAAKlI,KAAN,CAAWD,IAAG,iBAAAI,OAAmBJ,IAC7BV,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CAAOC,QAAM,GACTpJ,EAAAC,EAAAC,cAAA,KAAGwG,KAAMjG,EAAKkG,KAAMU,UAAQ,GACxBrH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAMmC,OAAQ,OAAQC,UAAQ,EAAC/H,UAAQ,EAACV,KAAK,eAGrDZ,EAAAC,EAAAC,cAAC2I,GAAA,EAAKG,QAAN,KACIhJ,EAAAC,EAAAC,cAAC2I,GAAA,EAAKd,OAAN,KAActH,EAAK+C,OAClB/C,EAAKgI,oBAjBtCrD,EAAWM,OAAOvB,GAAuC,OA6BlDmF,GApFI,SAACnI,GAChB,GAAIA,EAAMsG,WACN,OAAQtG,EAAMqF,QAAQlB,OAAOmB,MACzB,IAAK,YACD,OAAOmC,GAAezH,GAC1B,IAAK,gBACD,OAAO+H,GAAmB/H,GAC9B,QACI,OAAO,KAGnB,OAAO,MCEIoI,GA7BG,SAACpI,GACf,GAAIA,EAAMsG,WAAW,CACjB,IACI5C,EAAsB,CAAC,WAAY,UACvC,OAAKF,EAAmBxD,EAAMsG,WAAW,GAAI5C,GAGzC7E,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,KACIhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,KACK/B,EAAMsG,WAAWjH,IACd,SAACC,EAAMC,GAEH,OACIV,EAAAC,EAAAC,cAAA,OAAKQ,IAAG,mBAAAI,OAAqBJ,IACzBV,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,eAAOO,EAAK+I,WACdvB,KAAOxH,EAAKgJ,QACbzJ,EAAAC,EAAAC,cAAA,iBAXxBkF,EAAWO,WAHF,OAGqBd,GAA4B,MAoBlE,OAAO,gBCxBL6E,GAAa,SAACC,GAChB,IACI,OAAOA,EAASC,MAAMvF,KAAKwF,SAE/B,MAAOC,GACH,MAAO,oCAkDAC,GAxBY,SAAC5I,GACxB,GAAIA,EAAMsG,WAAW,CACjB,IACI5C,EAAsB,CAAC,OAAQ,kBAAmB,eACtD,OAAKF,EAAmBxD,EAAMsG,WAAW,GAAI5C,GAGzC7E,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,KACIhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,KACIlD,EAAAC,EAAAC,cAAC8J,GAAA,EAAKC,MAAN,CAAY9G,UAAW,SAAU+G,YAAcC,aAAaC,WAAU,EAAE,GACnEjJ,EAAMsG,WAAWjH,IACd,SAACC,EAAMC,GACH,OAnCZ,SAACiJ,EAAUjJ,GAC3B,OACIV,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CAAMtJ,IAAG,gBAAAI,OAAkBJ,IACvBV,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CAAOkB,IAAKX,GAAWC,GAAWW,SAAO,EAACC,IAAI,IAC9CvK,EAAAC,EAAAC,cAAC8J,GAAA,EAAKhB,QAAN,KACIhJ,EAAAC,EAAAC,cAAC8J,GAAA,EAAKjC,OAAN,KAAc4B,EAAS/I,MACvBZ,EAAAC,EAAAC,cAAC8J,GAAA,EAAKQ,KAAN,KACIxK,EAAAC,EAAAC,cAAA,QAAMI,UAAU,QAAhB,aACeqJ,EAASc,YAAad,EAASe,UAAW,aAAaf,EAASe,UAAU,KAG7F1K,EAAAC,EAAAC,cAAC8J,GAAA,EAAKf,YAAN,KACKU,EAASgB,kBAGlB3K,EAAAC,EAAAC,cAAC8J,GAAA,EAAKhB,QAAN,CAAc4B,OAAK,GACX5K,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAMrG,KAAK,SACV+I,EAASkB,QAkBSC,CAAWrK,EAAMC,SAP5C0E,EAAWO,WAHF,gBAGqBd,GAA4B,MAelE,OAAO,8CNzDEkG,GAAW,SAAApI,GAAK,OAAIA,OAAQmF,EAAY,gBACzBjC,EACU,iBOQvBmF,GAAA,SAACC,EAAO7D,EAAO8D,EAAMC,GAChC,OACInL,EAAAC,EAAAC,cAACkL,GAAA,EAAKC,MAAN,KACIrL,EAAAC,EAAAC,cAAA,aAAQkH,GACRpH,EAAAC,EAAAC,cAACoL,GAAA,EAADvG,OAAAwG,OAAA,GAAWN,EAAYE,EAAvB,CAAkCK,aAAa,SAXvC,SAAA7L,GAAqB,IAAnB8L,EAAmB9L,EAAnB8L,QAAShG,EAAU9F,EAAV8F,MAC3B,GAAGgG,GAAWhG,EACV,OACIzF,EAAAC,EAAAC,cAAA,OAAKI,UAAW,gBAAiBmF,GAShCiG,CAAYR,eCJTS,GAAA,SAAAC,GAA4E,IAAAC,EAAAD,EAAzEX,MAA6Ba,GAA4CD,EAAjElJ,MAAiEoC,OAAAgH,GAAA,EAAAhH,CAAA8G,EAAA,YAAxBG,EAAwBJ,EAA9BV,KAAmB/J,EAAW4D,OAAAgH,GAAA,EAAAhH,CAAA6G,EAAA,kBACxF,OACI5L,EAAAC,EAAAC,cAACkL,GAAA,EAAKC,MAAN,KACIrL,EAAAC,EAAAC,cAAA,aAAQiB,EAAMiG,OACdpH,EAAAC,EAAAC,cAACoL,GAAA,EAADvG,OAAAwG,OAAA,CACI9E,KAAM,QACFqF,EACA3K,EAAM8J,MAHd,CAIIO,aAAa,SAhBT,SAAA7L,GAAqB,IAAnB8L,EAAmB9L,EAAnB8L,QAAShG,EAAU9F,EAAV8F,MAC3B,GAAGgG,GAAWhG,EACV,OACIzF,EAAAC,EAAAC,cAAA,OAAKI,UAAW,gBAAiBmF,GAchCiG,CAAYM,KCVVC,GAAA,SAAChB,EAAO7D,EAAO8D,EAAMC,GAChC,OACInL,EAAAC,EAAAC,cAACkL,GAAA,EAAKC,MAAN,KACIrL,EAAAC,EAAAC,cAAA,aAAQkH,GACRpH,EAAAC,EAAAC,cAACC,EAAA,EAAD4E,OAAAwG,OAAA,CAAUW,WAAS,GAAKjB,EACVE,EADd,CAEUxI,MAAOsI,EAAMtI,MACbwJ,SAAU,SAACC,EAAO/H,GAAR,OAAiB4G,EAAMkB,SAAS9H,EAAK1B,QAC/C0J,YAAajF,KAff,SAAAzH,GAAsB,IAApB8L,EAAoB9L,EAApB8L,QAAShG,EAAW9F,EAAX8F,MAC3B,GAAIgG,GAAWhG,EACX,OACIzF,EAAAC,EAAAC,cAAA,OAAKI,UAAW,gBAAiBmF,GAchCiG,CAAYR,KCdZoB,GAAY,SAAA3M,GAAA,IAAEsL,EAAFtL,EAAEsL,MAAM7D,EAARzH,EAAQyH,MAAM8D,EAAdvL,EAAcuL,KAAKC,EAAnBxL,EAAmBwL,UAAnB,OAAkC/K,GAAK6K,EAAM7D,EAAM8D,EAAKC,IACpEoB,GAAY,SAACpL,GAAD,OAAWqL,GAAKrL,IAC5BsL,GAAc,SAAAb,GAAA,IAAEX,EAAFW,EAAEX,MAAM7D,EAARwE,EAAQxE,MAAM8D,EAAdU,EAAcV,KAAKC,EAAnBS,EAAmBT,UAAnB,OAAkCuB,GAAOzB,EAAM7D,EAAM8D,EAAKC,ICA/EwB,8MAEFC,MAAQ,CAACC,cAAe,cACxBC,SAAW,SAACC,EAAYC,GACpBC,EAAK9L,MAAM2L,SACPG,EAAK9L,MAAMsG,WAAX,KAA8B,GAC9BsF,GAEJC,EAASE,aAAM,aACfD,EAAKE,SAAS,CAACN,cAAeO,KAAKC,SAASC,SAAS,IAAIC,UAAU,QAiBvEC,gBAAkB,SAACvC,EAAOvK,GACtB,OAAQuK,EAAMwC,WAAWhH,MACrB,IAAK,OACD,OACIzG,EAAAC,EAAAC,cAACmL,GAAA,EAAD,CACI3K,IAAG,eAAAI,OAAiBJ,GACpBE,KAAMqK,EAAMyC,wBACZC,UAAWrB,GACXsB,SAAU,CAAE7C,IACZ3D,MAAO6D,EAAM7D,MACb+D,UAAW,CACPkB,YAAW,aAAAvL,OAAemK,EAAM7D,MAAMyG,eACtCpH,KAAK,UAIrB,IAAK,OACD,OACIzG,EAAAC,EAAAC,cAACmL,GAAA,EAAD,CACI3K,IAAG,eAAAI,OAAiBJ,EAAjB,KAAAI,OAAwBmM,EAAKL,MAAMC,eACtCjM,KAAMqK,EAAMyC,wBACZC,UAAWpB,GACXnF,MAAO6D,EAAM7D,MACb+D,UAAW,CACPkB,YAAW,aAAAvL,OAAemK,EAAM7D,MAAMyG,kBAItD,IAAK,SACD,IAAMC,EAAUb,EAAKc,cAAcrN,EAAKuK,EAAM+C,cAAe/C,EAAMgD,eACnE,OACIjO,EAAAC,EAAAC,cAACmL,GAAA,EAAD,CACI3K,IAAG,eAAAI,OAAiBJ,GACpBE,KAAMqK,EAAMyC,wBACZC,UAAWlB,GACXmB,SAAU,CAAE7C,IACZ3D,MAAO6D,EAAM7D,MACb+D,UAAW,CACPkB,YAAW,aAAAvL,OAAemK,EAAM7D,MAAMyG,eACtCC,QAASA,KAKzB,QACI,OAAO,SAInBC,cAAgB,SAACG,EAAOC,EAAQ5J,GAC5B,IAAMuJ,EAAU,GAUhB,OATAK,EAAOC,QACH,SAAC5K,EAAO9C,GACJoN,EAAQjM,KAAK,CACTnB,IAAA,cAAAI,OAAqBoN,EAArB,KAAApN,OAA8BJ,GAC9BN,KAAQ+N,EAAOzN,GACfiC,MAAS4B,EAAO7D,OAIrBoN,+EA1EP,OAAG5M,KAAKC,MAAMsG,WAAX,OAAgC1H,OAAS,EACjCC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,sCAGNF,EAAAC,EAAAC,cAAA,WACKgB,KAAKmN,eACNrO,EAAAC,EAAAC,cAAC4G,GAAA,EAAD,CAAQL,KAAM,SAAUa,MAAI,EAACP,cAAc,OAAOnE,KAAK,QAAS0L,QAAQ,SACpEtO,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAMrG,KAAK,gBADf,gDAsEF,IAAA2N,EAAArN,KACV,OAAOA,KAAKC,MAAMsG,WAAX,OAAgCjH,IACnC,SAACyK,EAAOvK,GAAR,OAAgB6N,EAAKf,gBAAgBvC,EAAOvK,sCAKhD,IAAIQ,KAAKC,MAAMsG,WAAX,OACA,OAAO,KAEX,IAAI/B,EAAS,YACTb,EAAsB,CAAC,QAAS,MAAO,iBAAkB,eAC7D,OAAKF,EAAmBzD,KAAKC,MAAMsG,WAAX,KAA8B,GAAI5C,IAE1Da,EAAS,cACTb,EAAsB,CAAC,0BAA2B,QAAS,cACtDF,EAAmBzD,KAAKC,MAAMsG,WAAX,OAAgC,GAAI5C,GAGpD7E,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,KACIhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,KACMhC,KAAKC,MAAMqN,iBAAmBzI,GAC5B/F,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CACIwM,mBAAmB,EACnBrM,UAAW,aACXC,SAAU,CAAEC,KAAK,MAEjBtC,EAAAC,EAAAC,cAACwO,EAAA,EAAD,CAAS1H,MAAO,SACZhH,EAAAC,EAAAC,cAAA,gCADJ,6CAIN,GAEAgB,KAAKC,MAAMqN,iBAAmBzI,GAC5B/F,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CACIwM,mBAAmB,EACnBrM,UAAW,aACXC,SAAU,CAAEC,KAAK,MAEjBtC,EAAAC,EAAAC,cAACwO,EAAA,EAAD,CAAS1H,MAAO,OACZhH,EAAAC,EAAAC,cAAA,4CADJ,2DAIN,GAEFF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACkL,GAAA,EAAD,CAAM0B,SAAU5L,KAAKC,MAAMwN,aAAazN,KAAK4L,WACxC5L,KAAK0N,iBA9BtBxJ,EAAWO,WAAWD,EAAQb,GAA4B,QAJ1DO,EAAWO,WAAWD,EAAQb,GAA4B,aArG7ChB,aA+IVgL,gBAAU,CACrBC,KAAK,YADMD,CAEZlC,6CCtIGoC,GAAe,CAACC,WAAW,EAAOrM,MAAO,GAAIsM,UAAU,EAAOC,QAAS,GAAIC,OAAQ,GAAIC,aAAa,OAgL3FC,eA3KX,SAAAA,IAAc,IAAApC,EAAA,OAAAlI,OAAAM,EAAA,EAAAN,CAAA7D,KAAAmO,IACVpC,EAAAlI,OAAAuK,EAAA,EAAAvK,CAAA7D,KAAA6D,OAAAwK,EAAA,EAAAxK,CAAAsK,GAAAG,KAAAtO,QAHJ0L,MAAQmC,GAEM9B,EAQdwC,WAAa,SAACP,GACV,OAAOA,EAAQ1O,IAAI,SAACC,GAChB,OAAOwM,EAAKL,MAAMsC,QAAQzO,MAVpBwM,EAadyC,mBAAqB,SAACrL,GAClB,GAA+B,QAA5B4I,EAAKL,MAAMwC,aACV,MAAO,GACX,IAAMO,EAAa,GACbC,EAAetL,IAAEuL,QAAQxL,EAAM,SAC/B8K,EAASlC,EAAKL,MAAMuC,OAkB1B,OAjBApK,OAAOC,KAAK4K,GAAcxB,QAAS,SAAC1N,GAChC,IAAIZ,EAAQwE,IAAEwL,OAAOF,EAAalP,GAAM,SAAUqP,GAC9C,MAA+B,QAAxBA,EAAcC,QAEnBC,EAAQ,CACVC,EAAGjD,EAAKwC,WAAWnL,IAAE9D,IAAIV,EAAO,WAChCN,EAAG8E,IAAE9D,IAAIV,EAAO,OAChBqQ,KAAM,UACN1J,KAAM,UACN7F,KAAMuO,EAAOzO,GACbnB,QAAS,GACT6Q,OAAQ,CACJxN,KAAM,KAGd+M,EAAW9N,KAAKoO,KAEbN,GApCG1C,EAsCdoD,sBAAwB,SAAChM,GACrB,GAA+B,UAA5B4I,EAAKL,MAAMwC,aACV,MAAO,GACX,IAAMO,EAAa,GACbW,EAAahM,IAAEuL,QAAQxL,EAAM,OAC7B8K,EAAS,CAACoB,EAAK,SAAUC,EAAK,QAmBpC,OAlBAzL,OAAOC,KAAKsL,GAAYlC,QAAS,SAAC1N,GAC9B,IAAIZ,EAAQwE,IAAEwL,OAAOQ,EAAW5P,GAAM,SAAUqP,GAC5C,MAA+B,QAAxBA,EAAcC,QAEnBC,EAAQ,CACVC,EAAGjD,EAAKwC,WAAWnL,IAAE9D,IAAIV,EAAO,WAChCN,EAAG8E,IAAE9D,IAAIV,EAAO,OAChBqQ,KAAM,UACN1J,KAAM,UACN7F,KAAMuO,EAAOzO,GACbnB,QAAsC,QAA5B0N,EAAKL,MAAMwC,aAAwB,GAAI,GACjDgB,OAAQ,CACJK,OAAO,EACP7N,KAAmC,QAA5BqK,EAAKL,MAAMwC,aAAwB,GAAG,KAGrDO,EAAW9N,KAAKoO,KAEbN,GA9DG1C,EAgEdyD,SAAW,SAAC9P,GACRqM,EAAKE,SAAS,CAACiC,aAAcxO,KAjEnBqM,EAkHd0D,mBAAqB,SAAC7G,EAADnK,GAAiB,IAAZiR,EAAYjR,EAAZiR,OACtB3D,EAAK9L,MAAM0P,QAAQD,GACnB3D,EAAKE,SAAS,CAACxK,MAAOiO,EAAOE,KAAM7B,UAAU,IAC7ChC,EAAK9L,MAAM4P,cAAcH,EAAOI,KArHtB/D,EAuHdgE,mBAAqB,SAACC,GAClBjE,EAAK9L,MAAMgQ,mBAAmBD,EAAMtK,OAAOjE,OAC3CsK,EAAKE,SAAS,CAACxK,MAAOuO,EAAMtK,OAAOjE,MAAOsM,UAAU,KAzH1ChC,mFAIV/L,KAAKiM,SAAS,CAAC+B,QAAS5K,IAAE8M,MAAMlQ,KAAKC,MAAMsG,WAAW4J,QAAQ1J,MAAM,MAAM2J,UAAU,QAAQ3O,UAC5FzB,KAAKiM,SAAS,CAACgC,OAAQ7K,IAAE8M,MAAMlQ,KAAKC,MAAMsG,WAAW8J,OAAO5J,MAAM,MAAM2J,UAAU,QAAQ3O,gDA8DhF,IAAA4L,EAAArN,KACV,GAAIA,KAAKC,MAAMqQ,WAAWC,WAAW1R,OAAS,EAAG,CAC7C,IAAM4P,EAAazO,KAAKwO,mBAAmBxO,KAAKC,MAAMqQ,WAAWC,YAC3DC,EAAgBxQ,KAAKmP,sBAAsBnP,KAAKC,MAAMqQ,WAAWC,YACvE,OACIzR,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8B,SAAA,KACI/B,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAC4G,GAAA,EAAOmD,MAAR,KACIjK,EAAAC,EAAAC,cAAC4G,GAAA,EAAD,CAAQ6K,OAAqC,UAA5BzQ,KAAK0L,MAAMwC,aAA2BwC,QAAS,kBAAMrD,EAAKmC,SAAS,WAApF,UACA1Q,EAAAC,EAAAC,cAAC4G,GAAA,EAAD,CAAQ6K,OAAqC,QAA5BzQ,KAAK0L,MAAMwC,aAAyBwC,QAAS,kBAAMrD,EAAKmC,SAAS,SAAlF,OACA1Q,EAAAC,EAAAC,cAAC4G,GAAA,EAAD,CAAQ6K,OAAqC,QAA5BzQ,KAAK0L,MAAMwC,aAAyBwC,QAAS,kBAAMrD,EAAKmC,SAAS,SAAlF,SAGR1Q,EAAAC,EAAAC,cAAC2R,GAAA5R,EAAD,CACIK,UAAW,kBACX+D,KAAI,GAAAvD,OAAAiE,OAAA+M,GAAA,EAAA/M,CAAM2M,GAAN3M,OAAA+M,GAAA,EAAA/M,CAAwB4K,IAC5BoC,OAAQ,CACJC,YAAY,EACZC,OAAQ,IAAKC,UAAW,UACxB1O,MAAK,iBAAA1C,OAAmBI,KAAKC,MAAMqQ,WAAWW,WAAWrB,KAApD,OAAAhQ,OAC3BI,KAAKC,MAAMqQ,WAAWW,WAAW1B,OAAjC,KAAA3P,OAA+CI,KAAKC,MAAMqQ,WAAWW,WAAW1B,OAAhF,KAA4F,IADjE3P,OAE3BI,KAAKC,MAAMqQ,WAAWW,WAAW1J,YAAjC,MAAA3H,OAAqDI,KAAKC,MAAMqQ,WAAWW,WAAW1J,aAAgB,IAChF2J,MAAM,CACF5O,MAAO,4BAEX6O,MAAM,CACFC,cAAehO,IAAE9D,IAAIU,KAAK0L,MAAMsC,QAAS,SAACzO,GAAD,OAAUA,SAMhE,OAAIS,KAAK0L,MAAMqC,SAEdjP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwO,EAAA,EAAD,KACI1O,EAAAC,EAAAC,cAACqS,EAAA,EAAD,CAAQZ,QAAM,EAACrQ,UAAQ,GACnBtB,EAAAC,EAAAC,cAACsS,EAAA,EAAD,CAAQtK,QAAQ,kCAEpBlI,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CAAOkB,IAAI,yEAKpB,sCAYF,IAAAoI,EACuCvR,KAAK0L,MAA1CoC,EADFyD,EACEzD,UAAWrM,EADb8P,EACa9P,MAAOuM,EADpBuD,EACoBvD,QAASC,EAD7BsD,EAC6BtD,OAClC,OAAID,EAAQnP,OAAS,GAAKoP,EAAOpP,OAAS,EAElCC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwO,EAAA,EAAD,KACI1O,EAAAC,EAAAC,cAACqS,EAAA,EAAD,CAAQZ,QAAM,EAACrQ,UAAQ,GACnBtB,EAAAC,EAAAC,cAACsS,EAAA,EAAD,CAAQtK,QAAQ,aAEpBlI,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CAAOkB,IAAI,yEAMvBrK,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACI9C,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,CAAU0P,UAAQ,GACd1S,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,CAAayP,MAAO,GAChB3S,EAAAC,EAAAC,cAACkL,GAAA,EAAD,KACIpL,EAAAC,EAAAC,cAACkL,GAAA,EAAKC,MAAN,KACIrL,EAAAC,EAAAC,cAAA,4EACAF,EAAAC,EAAAC,cAAC0S,GAAA,EAAD7N,OAAAwG,OAAA,CACIsH,QAAS7D,EACT8D,eAAgB5R,KAAKyP,mBACrBoC,eAAgBzO,IAAE0O,SAAS9R,KAAK+P,mBAAoB,IAAK,CACrDgC,SAAS,IAEbC,QAAShS,KAAKC,MAAMqQ,WAAW2B,YAC/BxQ,MAAOA,GACHzB,KAAKC,YAM7BnB,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,CAAU0P,UAAQ,GACd1S,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,CAAayP,MAAO,IAChB3S,EAAAC,EAAAC,cAAA,cACCgB,KAAKkS,yBApKLvP,sECkBnBkL,GAAe,CAACI,OAAQ,GAAIrB,QAAS,GAAIuF,WAAY,GAAIC,aAAc,GAAIC,aAlBlE,CACX,CACI7S,IAAK,EACLN,KAAM,MACNuC,OAAQ,GAEZ,CACIjC,IAAK,EACLN,KAAM,QACNuC,MAAO,GAEX,CACIjC,IAAK,EACLN,KAAM,QACNuC,MAAO,IAIwF6Q,aAAc,EAAGC,UAAW,OA0OpHC,8MAtOX9G,MAAQmC,KAeR4E,gBAAkB,SAAC7J,EAAGzF,GAClB4I,EAAK9L,MAAMyS,UAAU,CAAC5C,GAAI3M,EAAK1B,MAAOvC,KAAM0J,EAAElD,OAAOiN,WAAY5G,EAAKL,MAAM4G,gBAEhF9D,mBAAqB,SAACrL,EAAMyP,GACxBzP,EAAOC,IAAE9D,IAAI6D,EAAM,SAAC5D,GAChB,GAAIqT,EAAM7O,SAASxE,EAAKgQ,QAAS,OAAOhQ,IAE5C4D,EAAOC,IAAEyP,QAAQ1P,GACjB,IAAMsL,EAAa,GACbC,EAAetL,IAAEuL,QAAQxL,EAAM,SAC/B8K,EAASlC,EAAKL,MAAMuC,OAkB1B,OAjBApK,OAAOC,KAAK4K,GAAcxB,QAAQ,SAAU1N,GACxC,IAAIZ,EAAQwE,IAAEwL,OAAOF,EAAalP,GAAM,SAAUqP,GAC9C,MAA+B,QAAxBA,EAAcC,QAEnBC,EAAQ,CACVC,EAAG5L,IAAE9D,IAAIV,EAAO,UAChBN,EAAG8E,IAAE9D,IAAIV,EAAO,OAChBqQ,KAAM,UACN1J,KAAM,UACN7F,KAAMuO,EAAOzO,GACbnB,QAAS,GACT6Q,OAAQ,CACJxN,KAAM,KAGd+M,EAAW9N,KAAKoO,KAEbN,KAsDXqE,mBAAqB,WACjB,IAAM9L,EAAU+E,EAAK9L,MAAMqQ,WAAWyC,YAAYzT,IAC9C,SAAC0T,EAAMhG,GACH,OAAMgG,EAAKpD,KAAK7L,SAASgI,EAAKL,MAAMyG,aAC7Ba,EAAKzD,OAAOxL,SAASgI,EAAKL,MAAMyG,aAChCa,EAAKzL,YAAYxD,SAASgI,EAAKL,MAAMyG,YAExCrT,EAAAC,EAAAC,cAACiU,GAAA,EAAMnR,IAAP,CAAWtC,IAAG,cAAAI,OAAgBoN,IAC1BlO,EAAAC,EAAAC,cAACiU,GAAA,EAAMC,KAAP,KAAalG,EAAQ,GACrBlO,EAAAC,EAAAC,cAACiU,GAAA,EAAMC,KAAP,KACIpU,EAAAC,EAAAC,cAAA,KACII,UAAW,YACXoG,KAAI,+DAAA5F,OAAiEoT,EAAKpD,MAC1ElK,OAAQ,UAEPsN,EAAKpD,OAGd9Q,EAAAC,EAAAC,cAACiU,GAAA,EAAMC,KAAP,KAAaF,EAAKzD,QAClBzQ,EAAAC,EAAAC,cAACiU,GAAA,EAAMC,KAAP,KAAaF,EAAKzL,aAClBzI,EAAAC,EAAAC,cAACiU,GAAA,EAAMC,KAAP,KAAaF,EAAKG,UAfuC,OAoBzE,OAAO/P,IAAEyP,QAAQ7L,MAErBoM,eAAiB,SAACxK,EAAGzF,GACjB4I,EAAKE,SAAS,CAACqG,YAAanP,EAAK1B,QACjCsK,EAAKE,SAAS,CAACsG,UAAW3J,EAAElD,OAAOiN,YACS,IAAzC5G,EAAK9L,MAAMqQ,WAAW+C,aAAavD,IAClC/D,EAAK9L,MAAMyS,UAAU3G,EAAK9L,MAAMqQ,WAAW+C,aAAclQ,EAAK1B,UAGtE6R,kBAAoB,SAAC1K,GACjBmD,EAAKE,SAAS,CAACkG,WAAYvJ,EAAElD,OAAOjE,WAiDxC8R,mBAAqB,WACjB,OAAOnQ,IAAEyP,QAAQzP,IAAE9D,IAAIyM,EAAK9L,MAAMqQ,WAAWyC,YACzC,SAACC,GAAD,MAAW,CACPQ,KAAMR,EAAKpD,KACX6D,OAAQT,EAAKzD,OACbmE,UAAWV,EAAKW,UAChB5L,YAAaiL,EAAKzL,oGAxL1BvH,KAAKiM,SAAS,CAACgC,OAAQ7K,IAAE8M,MAAMlQ,KAAKC,MAAMsG,WAAW8J,OACjD5J,MAAM,MACN2J,UAAU,QAAQ3O,UACtBzB,KAAKiM,SAAS,CACVW,QAASxJ,IAAE9D,IAAIU,KAAKC,MAAMsG,WAAW4J,OAAQ,SAACzE,GAAD,MAAY,CACrDlM,IAAKkM,EAAMoE,GACX5Q,KAAMwM,EAAMhM,KACZ+B,MAAOiK,EAAMoE,8CAqCrB,GAAI9P,KAAKC,MAAMqQ,WAAWsD,aAAa/U,OAAS,EAAG,CAC/C,IAAI+T,EAAQxP,IAAE9D,IAAIU,KAAKC,MAAMqQ,WAAWyC,YAAa,SAACC,EAAMhG,GACxD,OAAIA,EAAQ,GACDgG,EAAKzD,OAET,OAEXqD,EAAQxP,IAAEyP,QAAQD,GAClB,IAAMnE,EAAazO,KAAKwO,mBAAmBxO,KAAKC,MAAMqQ,WAAWsD,aAAchB,GAE/E,OADAtO,QAAQuP,IAAIjB,GAER9T,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8B,SAAA,KACI/B,EAAAC,EAAAC,cAAC6H,GAAA,EAAD,CAAQhH,GAAG,KAAKiU,UAAQ,GAAxB,6BAC+B9T,KAAK0L,MAAM6G,UAD1C,IACsDvS,KAAKC,MAAMqQ,WAAW+C,aAAanU,KADzF,WAGAJ,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAC2R,GAAA5R,EAAD,CACIK,UAAW,kBACX+D,KAAMsL,EACNoC,OAAQ,CACJC,YAAY,EACZC,OAAQ,IAAKC,UAAW,UACxBG,MAAO,CACHC,cAAehO,IAAEC,OAAOuP,IAE5B1B,MAAM,CACF5O,MAAO,iCAO5B,OAAItC,KAAK0L,MAAMqC,SAEdjP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwO,EAAA,EAAD,KACI1O,EAAAC,EAAAC,cAACqS,EAAA,EAAD,CAAQZ,QAAM,EAACrQ,UAAQ,GACnBtB,EAAAC,EAAAC,cAACsS,EAAA,EAAD,CAAQtK,QAAQ,qCAEpBlI,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CAAOkB,IAAI,yEAI2B,IAA5CnJ,KAAKC,MAAMqQ,WAAWC,WAAW1R,QAAsD,IAAtCmB,KAAKC,MAAMqQ,WAAW+C,aACtEvU,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,wCAEjB,2CA0CP,OAAKgB,KAAKC,MAAMqQ,WAAWyC,YAAYlU,OAAS,EACrC,KAGPC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8B,SAAA,KACI/B,EAAAC,EAAAC,cAAC6H,GAAA,EAAD,CAAQhH,GAAG,KAAKiU,UAAQ,GAAxB,8BACgC9T,KAAK0L,MAAM6G,UAD3C,IACuDvS,KAAKC,MAAMqQ,WAAW+C,aAAanU,KAD1F,WAGAJ,EAAAC,EAAAC,cAACkL,GAAA,EAAD,KACIpL,EAAAC,EAAAC,cAACkL,GAAA,EAAKnB,MAAN,KACIjK,EAAAC,EAAAC,cAACkL,GAAA,EAAKC,MAAN,CACIsH,MAAO,IAEP3S,EAAAC,EAAAC,cAACoL,GAAA,EAAD,CAAOa,SAAUjL,KAAKsT,kBAAmBS,OAAQ,CAAC3N,KAAM,UAAW+E,YAAY,eAEnFrM,EAAAC,EAAAC,cAACkL,GAAA,EAAKC,MAAN,CACIsH,MAAO,GAEP3S,EAAAC,EAAAC,cAACgV,GAAAjV,EAAD,CACIkV,SAAQ,YAAArU,OAAcI,KAAKC,MAAMqQ,WAAW+C,aAAanU,KAAjD,eACRiE,KAAMnD,KAAKuT,qBACXnU,UAAU,mCACVN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,oBAJjB,wBAUZN,EAAAC,EAAAC,cAACiU,GAAA,EAAD,CAAOhN,OAAK,GACRnH,EAAAC,EAAAC,cAACiU,GAAA,EAAMpM,OAAP,KACI/H,EAAAC,EAAAC,cAACiU,GAAA,EAAMnR,IAAP,KACIhD,EAAAC,EAAAC,cAACiU,GAAA,EAAMiB,WAAP,UACApV,EAAAC,EAAAC,cAACiU,GAAA,EAAMiB,WAAP,aACApV,EAAAC,EAAAC,cAACiU,GAAA,EAAMiB,WAAP,eACApV,EAAAC,EAAAC,cAACiU,GAAA,EAAMiB,WAAP,oBACApV,EAAAC,EAAAC,cAACiU,GAAA,EAAMiB,WAAP,sBAGRpV,EAAAC,EAAAC,cAACiU,GAAA,EAAMkB,KAAP,KACKnU,KAAK8S,yDAkBtB,IAAMrC,EAASzQ,KAAKC,MAAMqQ,WAAW+C,aAAavD,GAClD,OACIhR,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACI9C,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,CAAU0P,UAAQ,GACd1S,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,CAAayP,MAAO,GAChB3S,EAAAC,EAAAC,cAACkL,GAAA,EAAD,KACIpL,EAAAC,EAAAC,cAACkL,GAAA,EAAKC,MAAN,KACIrL,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUwC,MAAOzB,KAAK0L,MAAM4G,YAAanH,YAAY,QAAQiJ,QAAM,EAACpJ,WAAS,EACnE4B,QAAS5M,KAAK0L,MAAM2G,aACpBpH,SAAUjL,KAAKoT,kBAG7BtU,EAAAC,EAAAC,cAACkL,GAAA,EAAKC,MAAN,KACIrL,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUwC,MAAOgP,EAAQtF,YAAY,SAASiJ,QAAM,EAACpJ,WAAS,EACpD4B,QAAS5M,KAAK0L,MAAMkB,QACpB3B,SAAUjL,KAAKyS,sBAKzC3T,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,CAAU0P,UAAQ,GACd1S,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,CAAayP,MAAO,IACfzR,KAAKkS,gBAGdpT,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,KACIhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,CAAayP,MAAO,IACfzR,KAAKqU,wBAhOH1R,aCOZ2R,8MAxCXC,MAAQ,CACJ,CACIC,SAAU,CAAEhV,IAAK,aAAc4G,KAAM,MAAOY,QAAS,iBACrDyN,OAAQ,kBACJ3V,EAAAC,EAAAC,cAAC0V,GAAA,EAAIC,KAAL,CAAUC,UAAU,GAChB9V,EAAAC,EAAAC,cAAC6V,GAAD,CACItO,WAAYwF,EAAK9L,MAAMsG,WACvB+J,WAAYvE,EAAK9L,MAAMqQ,WACvBL,mBAAoBlE,EAAK9L,MAAMgQ,mBAC/BN,QAAS5D,EAAK9L,MAAM0P,QACpBrK,QAASyG,EAAK9L,MAAMqF,QACpBuK,cAAe9D,EAAK9L,MAAM4P,mBAI1C,CACI2E,SAAU,CAAEhV,IAAK,eAAgB4G,KAAM,QAASY,QAAS,gBACzDyN,OAAQ,kBAAM3V,EAAAC,EAAAC,cAAC0V,GAAA,EAAIC,KAAL,CAAUC,UAAU,GAC9B9V,EAAAC,EAAAC,cAAC8V,GAAD,CACIvO,WAAYwF,EAAK9L,MAAMsG,WACvBmM,UAAW3G,EAAK9L,MAAMyS,UACtBpC,WAAYvE,EAAK9L,MAAMqQ,yFAOnC,OAAGyE,WAAiBjW,EAAAC,EAAAC,cAAA,iFAEhBF,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,CAAayP,MAAO,IAChB3S,EAAAC,EAAAC,cAAC0V,GAAA,EAAD,CACIxU,KAAM,CAACI,WAAW,EAAMnB,UAAU,GAClCoV,MAAOvU,KAAKuU,gBAlCN5R,aC6EXqS,GApEM,SAAC/U,GAClB,OAAOA,EAAMqF,QAAQd,QACjB,IAAK,UACD,OACI1F,EAAAC,EAAAC,cAACiW,GAAD,CACI3P,QAASrF,EAAMqF,QACfiB,WAAYtG,EAAMsG,aAG9B,IAAK,SACD,OACIzH,EAAAC,EAAAC,cAACkW,GAAD,CACI5P,QAASrF,EAAMqF,UAG3B,IAAK,aACD,OAAGyP,WAAiB,KAEhBjW,EAAAC,EAAAC,cAACmW,GAAD,CACI5O,WAAYtG,EAAMsG,aAG9B,IAAK,OACD,OACIzH,EAAAC,EAAAC,cAACoW,GAAD,CACI1O,UAAWzG,EAAMqF,QAAQoB,UACzBpB,QAASrF,EAAMqF,QACfiB,WAAYtG,EAAMsG,aAG9B,IAAK,OACD,OACIzH,EAAAC,EAAAC,cAACqW,GAAD,CACI9O,WAAYtG,EAAMsG,aAG9B,IAAK,gBACD,OACIzH,EAAAC,EAAAC,cAACsW,GAAD,CACI/O,WAAYtG,EAAMsG,aAG9B,IAAK,OACD,OACIzH,EAAAC,EAAAC,cAACuW,GAAD,CACI3J,SAAU3L,EAAM2L,SAChBrF,WAAYtG,EAAMsG,WAClB+G,eAAgBrN,EAAMqN,iBAGlC,IAAK,oBACD,OACIxO,EAAAC,EAAAC,cAACwW,GAAD,CACIjP,WAAYtG,EAAMsG,WAClB+J,WAAYrQ,EAAMwV,YAAYC,WAC9BzF,mBAAoBhQ,EAAMgQ,mBAC1ByC,UAAWzS,EAAMyS,UACjB/C,QAAS1P,EAAM0P,QACfrK,QAASrF,EAAMqF,QACfuK,cAAe5P,EAAM4P,gBAGjC,QAEI,OADA3L,EAAWM,OAAOvB,GACX,OCWF0S,yLAnFEpP,GACX,OAAKA,GAGDA,KAAcvG,KAAKC,MAAM2E,YAClB5E,KAAKC,MAAM2E,YAAY2B,GAHvB,6CASA,IAAAwF,EAAA/L,KACX,OAAOA,KAAKC,MAAMmE,OAAOwR,SAAStW,IAC9B,SAACgG,EAAS9F,GACN,MAAuB,SAAnB8F,EAAQd,OAEJ1F,EAAAC,EAAAC,cAAC6W,GAAD,CACI5F,mBAAoBlE,EAAK9L,MAAMgQ,mBAC/BJ,cAAe9D,EAAK9L,MAAM4P,cAC1BjE,SAAUG,EAAK9L,MAAM2L,SACrBkK,KAAM/J,EAAK9L,MAAMmE,OAAO1E,KACxBF,IAAG,UAAAI,OAAYmM,EAAK9L,MAAMmE,OAAOzE,UAA9B,KAAAC,OAA2CJ,GAC9C+G,WAAY,CACRqH,KAAQ7B,EAAKgK,cAAczQ,EAAQiB,YACnCyP,OAAUjK,EAAKgK,cAAc,WAEjCzQ,QAASA,EACTgI,eAAgBvB,EAAK9L,MAAMqN,iBAIjB,sBAAnBhI,EAAQd,OAEH1F,EAAAC,EAAAC,cAAC6W,GAAD,CACInD,UAAW3G,EAAK9L,MAAMyS,UACtB+C,YAAa1J,EAAK9L,MAAMwV,YACxB9F,QAAS5D,EAAK9L,MAAM0P,QACpBM,mBAAoBlE,EAAK9L,MAAMgQ,mBAC/BJ,cAAe9D,EAAK9L,MAAM4P,cAC1BiG,KAAM/J,EAAK9L,MAAMmE,OAAO1E,KACxBF,IAAG,UAAAI,OAAYmM,EAAK9L,MAAMmE,OAAOzE,UAA9B,KAAAC,OAA2CJ,GAC9C+G,WAAY,CACR4J,OAAUpE,EAAKgK,cAAc,UAC7B1F,MAAStE,EAAKgK,cAAc,UAEhCzQ,QAASA,IAKjBxG,EAAAC,EAAAC,cAAC6W,GAAD,CACIJ,YAAa1J,EAAK9L,MAAMwV,YACxB9F,QAAS5D,EAAK9L,MAAM0P,QACpBM,mBAAoBlE,EAAK9L,MAAMgQ,mBAC/BJ,cAAe9D,EAAK9L,MAAM4P,cAC1BiG,KAAM/J,EAAK9L,MAAMmE,OAAO1E,KACxBF,IAAG,UAAAI,OAAYmM,EAAK9L,MAAMmE,OAAOzE,UAA9B,KAAAC,OAA2CJ,GAC9C+G,WAAYwF,EAAKgK,cAAczQ,EAAQiB,YACvCjB,QAASA,uCAOzB,OAAKtF,KAAKC,MAAMgW,KAIZnX,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACI9C,EAAAC,EAAAC,cAAC4C,EAAA,EAAKE,IAAN,KACIhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,OAAN,KACIlD,EAAAC,EAAAC,cAAC6H,GAAA,EAAD,CAAQhH,GAAG,KAAKiU,UAAQ,GACnB9T,KAAKC,MAAMmE,OAAO1E,QAI9BM,KAAKkW,iBAXH,YApEAvT,aCkBbwT,8MAEFzK,MAAQ,CACJxL,KAAM,GACNe,YAAY,EACZmV,UAAU,EACV3B,QAAQ,EACRrQ,QAAQ,KAEZwH,SAAW,SAACxH,EAAQf,GAChB,OAAQe,EAAOiS,IAAIxR,UACf,IAAK,SACDkH,EAAK9L,MAAMqW,eAAelS,EAAQf,GACtC,MACA,QACIiB,QAAQuP,IAAI,2CAGxB0C,eAAiB,WACb,IAAM3R,EAAc,GAsBpB,OArBAmH,EAAK9L,MAAMmE,OAAO8I,QACd,SAACsJ,GACGA,EAAYZ,SAAS1I,QACjB,SAAC3N,GACMA,EAAKgH,YACmB,SAApBhH,EAAKgH,aACJ3B,EAAYjE,KAAKpB,EAAKgH,YACtB3B,EAAYjE,KAAK,WAErBiE,EAAYjE,KAAKpB,EAAKgH,aAGH,sBAAhBhH,EAAKiF,SACJI,EAAYjE,KAAK,UACjBiE,EAAYjE,KAAK,cAOlCyC,IAAEqT,KAAK7R,MAGlB8R,gCAAa,SAAAC,IAAA,IAAA/R,EAAA,OAAAgS,EAAA7X,EAAA8X,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACHjL,EAAK9L,MAAMgX,iBADR,cAAAH,EAAAE,KAAA,EAEHjL,EAAK9L,MAAMiX,YAFR,cAGHtS,EAAcmH,EAAKwK,iBAHhBO,EAAAE,KAAA,EAIHjL,EAAK9L,MAAMsW,eAAe3R,GAJvB,OAKTmH,EAAKE,SAAS,CAAC/L,KAAK6L,EAAK9L,MAAMmE,SALtB,wBAAA0S,EAAAK,SAAAR,QAmDbS,eAAkB,SAACC,GACf,OAAOA,8FA1CHrX,KAAKiM,SAAS,CAAC7H,QAAQ,gDAGX,IAAAiJ,EAAArN,KAChBA,KAAK0W,aACLY,WAAW,WACPtX,KAAKiM,SAAS,CAACwI,QAAQ,KACzB8C,KAAKvX,MAAO,KACdsX,WACI,WACIjK,EAAKpB,SAAS,CAAChL,YAAY,KAC5B,6CAEI,IAAAuW,EAAAxX,KACX,OAAOA,KAAKC,MAAMmE,OAAO9E,IACrB,SAACC,GACG,OACIT,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIhB,IAAG,SAAAI,OAAWL,EAAKI,WACnBsW,KAAM,IAAI1W,EAAKI,UACf8X,OAAK,EACLhD,OAAQ,SAACxU,GAAD,OAAWuX,EAAKJ,eACpBtY,EAAAC,EAAAC,cAAC0Y,GAAD7T,OAAAwG,OAAA,GACQpK,EADR,CAEIyS,UAAW8E,EAAKvX,MAAMyS,UACtB+C,YAAa+B,EAAKvX,MAAM8E,QACxBkL,mBAAoBuH,EAAKvX,MAAMgQ,mBAC/BN,QAAS6H,EAAKvX,MAAM0P,QACpBE,cAAe2H,EAAKvX,MAAM4P,cAC1BoG,KAAM,IAAI1W,EAAKI,UACfyE,OAAQ7E,EACRqF,YAAa4S,EAAKvX,MAAM2E,YACxBgH,SAAU4L,EAAK5L,SACf0B,eAAgBkK,EAAKvX,MAAMqN,gEAWvC,IAAAqK,EAAA3X,KACZ,OAAgC,IAA7BA,KAAKC,MAAMmE,OAAOvF,OACV,KAGPC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAQC,QAASA,GACb3B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIyV,KAAK,IACLwB,OAAK,EACLhD,OAAQ,SAACxU,GAAD,OAAW0X,EAAKP,eACpBtY,EAAAC,EAAAC,cAAC0Y,GAAD7T,OAAAwG,OAAA,GAAUpK,EAAV,CACMwV,YAAakC,EAAK1X,MAAM8E,QACxBkL,mBAAoB0H,EAAK1X,MAAMgQ,mBAC/BN,QAASgI,EAAK1X,MAAM0P,QACpB+C,UAAWiF,EAAK1X,MAAMyS,UACtB7C,cAAe8H,EAAK1X,MAAM4P,cAC1BoG,KAAM,IAAI0B,EAAK1X,MAAMmE,OAAO,GAAGzE,UAC/ByE,OAAQuT,EAAK1X,MAAMmE,OAAO,GAC1BQ,YAAa+S,EAAK1X,MAAM2E,YACxB0I,eAAgBqK,EAAK1X,MAAMqN,eAC3B1B,SAAU+L,EAAK/L,gBAI5B5L,KAAK4X,kDAMlB,OAAG5X,KAAK0L,MAAM+I,SAAWrR,IAAEyU,QAAQ7X,KAAKC,MAAMmE,SAC1C0T,SACKC,gBAAgBC,MAAMC,YAAY,kBAAmBjY,KAAKC,MAAM6E,YAAYoT,eACzEpZ,EAAAC,EAAAC,cAACmZ,EAAD,CACA9V,mBAAoBrC,KAAKC,MAAM6E,YAC/BpC,kBAAmB1C,KAAKoY,gBACxBxT,YAAa5E,KAAKC,MAAM2E,YACxBR,OAAQpE,KAAKC,MAAMmE,OACnBlE,KAAMF,KAAKC,MAAMmE,UAIpBpE,KAAK0L,MAAM+I,QAUhBvQ,EAAWE,OAAOpB,GAEdlE,EAAAC,EAAAC,cAACwO,EAAA,EAAD,CAASpO,UAAW,mBAChBN,EAAAC,EAAAC,cAACqS,EAAA,EAAD,CAAQZ,QAAM,GACV3R,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAMrG,KAAK,QAAQgC,KAAK,OAAOtB,UAAQ,EAAC0F,MAAM,SAC9ChH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sCAdRF,EAAAC,EAAAC,cAACwO,EAAA,EAAD,CAASpO,UAAW,mBAChBN,EAAAC,EAAAC,cAACqS,EAAA,EAAD,CAAQZ,QAAM,GACV3R,EAAAC,EAAAC,cAACsS,EAAA,EAAD,CAAQ+G,eAAa,EAACC,OAAO,YAA7B,iBtBxKC,WsBwKD,qBAjJG3V,aA8KZ4V,eATS,SAAC7M,GACrB,MAAO,CACHtH,OAAQhB,IAAEC,OAAOqI,EAAMtH,QACvBQ,YAAa8G,EAAM9G,YACnB0I,eAAe5B,EAAM4B,eACrBxI,YAAa4G,EAAM5G,YAAY,GAC/BC,QAAS2G,EAAM3G,UAGgB,CAC/BmS,UClMiB,iCAAAzY,EAAAoF,OAAA2U,EAAA,EAAA3U,CAAA+S,EAAA7X,EAAA0Z,KAAM,SAAA9B,EAAO7K,GAAP,IAAA4D,EAAAgJ,EAAA,OAAA9B,EAAA7X,EAAA8X,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACN2B,EAAWC,IAAI,gBADT,OACrBlJ,EADqBoH,EAAA+B,KAErBH,EAAkBxV,EAAiBwM,EAAOvM,KAAKA,MACrD2I,EAAS,CAACvG,KAAMnB,EAAmB0U,QAASJ,IAHjB,wBAAA5B,EAAAK,SAAAR,MAAN,gBAAAoC,GAAA,OAAAta,EAAAua,MAAAhZ,KAAA2G,YAAA,IDmMjBsQ,eC7LsB,iCAAAvM,EAAA7G,OAAA2U,EAAA,EAAA3U,CAAA+S,EAAA7X,EAAA0Z,KAAM,SAAAQ,EAAOnN,GAAP,IAAA4D,EAAAgJ,EAAA,OAAA9B,EAAA7X,EAAA8X,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAlC,KAAA,EACX2B,EAAWC,IAAI,qBADJ,OAC1BlJ,EAD0BwJ,EAAAL,KAE1BH,EAAkBxV,EAAiBwM,EAAOvM,KAAKA,MACrD2I,EAAS,CAACvG,KAAMT,GAAkCgU,QAASJ,IAH3B,wBAAAQ,EAAA/B,SAAA8B,MAAN,gBAAAE,GAAA,OAAAzO,EAAAsO,MAAAhZ,KAAA2G,YAAA,ID8LtB4P,eEpMsB,SAAC6C,GAAD,OAAoB,SAACtN,GAC/C,IAAIgD,EAAQ,EACRuK,EAAiB,GACrBD,EAAelM,QAAf,eAAAzO,EAAAoF,OAAA2U,EAAA,EAAA3U,CAAA+S,EAAA7X,EAAA0Z,KAAwB,SAAA9B,EAAOpX,GAAP,IAAAmQ,EAAA,OAAAkH,EAAA7X,EAAA8X,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACC2B,EAAWC,IAAI,SAASrZ,EAAK,iBAD9B,OACdmQ,EADcoH,EAAA+B,KAEpBQ,EAAe9Z,GAAQ2D,EAAiBwM,EAAOvM,KAAKA,QACpD2L,IACasK,EAAeva,QACxBiN,EAAS,CAACvG,KAAMX,EAA4BkU,QAAQO,IALpC,wBAAAvC,EAAAK,SAAAR,MAAxB,gBAAAoC,GAAA,OAAAta,EAAAua,MAAAhZ,KAAA2G,YAAA,MFkMI2P,eGtMsB,SAAClS,EAAQjB,GAAT,sBAAA1E,EAAAoF,OAAA2U,EAAA,EAAA3U,CAAA+S,EAAA7X,EAAA0Z,KAAkB,SAAA9B,EAAO7K,GAAP,IAAAwN,EAAA,OAAA1C,EAAA7X,EAAA8X,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACxCsC,EAAe,IAAIC,UACVC,IAAI,QAASrW,EAAKwG,OAC/B2P,EAAaE,IAAI,WAAYrW,EAAKsW,UAClCH,EAAaI,OAAO,OAAQvW,EAAKmI,KAAK,IAJMwL,EAAAE,KAAA,EAKvBnU,IAAM,CACvB8W,OAAQ,OACRC,IAAKxV,EAAOyV,eACZ1W,KAAMmW,EACNlV,OAAQ,CAAE0V,QAAS,CAACC,eAAgB,sBAAwBC,OAAU,gBAT9B,OAAAlD,EAAA+B,KAWlC1V,KAAKY,SAAS,mEACpB+H,EAAS,CACLvG,KAAKV,KAGTiH,EAAS,CACLvG,KAAKV,KAjB+B,wBAAAiS,EAAAK,SAAAR,MAAlB,gBAAAoC,GAAA,OAAAta,EAAAua,MAAAhZ,KAAA2G,YAAA,IHuMtBsJ,mBIvM0B,SAACkC,GAAD,sBAAA1T,EAAAoF,OAAA2U,EAAA,EAAA3U,CAAA+S,EAAA7X,EAAA0Z,KAAgB,SAAA9B,EAAO7K,GAAP,IAAA4D,EAAA,OAAAkH,EAAA7X,EAAA8X,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACzB2B,EAAWC,IAAX,8EAAAhZ,OACGuS,EADH,uEAAAvS,OAEQuS,EAFR,mDAAAvS,OAEoEuS,EAFpE,kCADyB,OACxCzC,EADwCoH,EAAA+B,KAK9C/M,EAAS,CAACvG,KAAMR,GAAmBC,gBAAiB8T,QAASpJ,EAAOvM,KAAKA,OAL3B,wBAAA2T,EAAAK,SAAAR,MAAhB,gBAAAoC,GAAA,OAAAta,EAAAua,MAAAhZ,KAAA2G,YAAA,IJwM1BgJ,QI5Le,SAACpQ,GACpB,MAAO,CAACgG,KAAKR,GAAmBE,gBAAiB6T,QAAQvZ,IJ4LrDsQ,cIjMqB,SAACC,GAAD,sBAAApF,EAAA7G,OAAA2U,EAAA,EAAA3U,CAAA+S,EAAA7X,EAAA0Z,KAAQ,SAAAQ,EAAOnN,GAAP,IAAA4D,EAAA,OAAAkH,EAAA7X,EAAA8X,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAlC,KAAA,EACZ2B,EAAWC,IAAX,sCAAAhZ,OAAqDkQ,IADzC,OAC3BJ,EAD2BwJ,EAAAL,KAEjC/M,EAAS,CAACvG,KAAMR,GAAmBG,gBAAiB4T,QAASpJ,EAAOvM,KAAKA,OAFxC,wBAAA+V,EAAA/B,SAAA8B,MAAR,gBAAAE,GAAA,OAAAzO,EAAAsO,MAAAhZ,KAAA2G,YAAA,IJkMrB+L,UI3LiB,SAACW,EAAchD,GAAf,sBAAA4J,EAAApW,OAAA2U,EAAA,EAAA3U,CAAA+S,EAAA7X,EAAA0Z,KAA0B,SAAAyB,EAAOpO,GAAP,IAAA4D,EAAA,OAAAkH,EAAA7X,EAAA8X,KAAA,SAAAsD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,cAC/C3G,EAASA,GAAS,EAAIA,EAAM,KADmB8J,EAAAnD,KAAA,EAE1B2B,EAAWyB,KAAX,2BACjB,CAACC,SAAUhH,EAAavD,GAAIwK,OAAQ,IAAKC,MAAOlK,IAHL,OAEzCX,EAFyCyK,EAAAtB,KAI/C/M,EAAS,CAACvG,KAAMR,GAAmBI,kBAAmB2T,QAAS,CAACzF,aAAaA,EAAclQ,KAAKuM,EAAOvM,QAJxD,wBAAAgX,EAAAhD,SAAA+C,MAA1B,gBAAAM,GAAA,OAAAP,EAAAjB,MAAAhZ,KAAA2G,YAAA,KJmLV4R,CAUTpC,8BKxMOsE,GAAqBC,YAAgB,CAC9CzI,YCNW,WAAsB,IAArBvG,EAAqB/E,UAAA9H,OAAA,QAAA+H,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIoN,EAAWpN,UAAA9H,OAAA,EAAA8H,UAAA,QAAAC,EACjC,OAAQmN,EAAOxO,MACX,KAAKR,GAAmBC,gBACpB,IAAMpG,EAAO,GAsBb,OArBAwE,IAAEC,OAAO0Q,EAAO+E,SAAS5L,QACrB,SAAC3N,EAAMkC,GACClC,EAAKgQ,OAQL3Q,EAAM+B,KAAK,CACP2B,MAAK,GAAA1C,OAAKL,EAAKgQ,OAAV,OAAA3P,OAAsBL,EAAKqQ,MAChCrI,YAAahI,EAAKgI,YAClBuI,GAAGvQ,EAAKuQ,GACRF,KAAMrQ,EAAKqQ,KACXL,OAAQhQ,EAAKgQ,SAZjB3Q,EAAM+B,KAAK,CACP2B,MAAK,GAAA1C,OAAKL,EAAKqQ,MACfrI,YAAahI,EAAKgI,YAClBuI,GAAGvQ,EAAKuQ,GACRF,KAAMrQ,EAAKqQ,SAcpBhR,EACX,QACI,OAAO8M,IDpBfuF,WEPW,WAAsB,IAArBvF,EAAqB/E,UAAA9H,OAAA,QAAA+H,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIoN,EAAWpN,UAAA9H,OAAA,EAAA8H,UAAA,QAAAC,EACjC,OAAQmN,EAAOxO,MACX,KAAKR,GAAmBE,gBACpB,OAAO8O,EAAO+E,QAClB,QACI,OAAOpN,IFGf6E,WGRW,WAAsB,IAArB7E,EAAqB/E,UAAA9H,OAAA,QAAA+H,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIoN,EAAWpN,UAAA9H,OAAA,EAAA8H,UAAA,QAAAC,EACjC,OAAQmN,EAAOxO,MACX,KAAKR,GAAmBG,gBACpB,OAAO9B,IAAEC,OAAO0Q,EAAO+E,SAC3B,KAAK/T,GAAmBE,gBACpB,MAAO,GACX,QACI,OAAOyG,IHEf2H,aITW,WAAsB,IAArB3H,EAAqB/E,UAAA9H,OAAA,QAAA+H,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIoN,EAAWpN,UAAA9H,OAAA,EAAA8H,UAAA,QAAAC,EACjC,OAAQmN,EAAOxO,MACX,KAAKR,GAAmBI,kBACpB,OAAO4O,EAAO+E,QAAQzF,aAC1B,QACI,OAAO3H,IJKfkI,aKXW,WAAuB,IAAtBlI,EAAsB/E,UAAA9H,OAAA,QAAA+H,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIoN,EAAWpN,UAAA9H,OAAA,EAAA8H,UAAA,QAAAC,EAClC,OAAQmN,EAAOxO,MACX,KAAKR,GAAmBI,kBACpB,OAAO4O,EAAO+E,QAAQ3V,KAAKwX,OAC/B,QACI,OAAOjP,ILOfqH,YMZW,WAAuB,IAAtBrH,EAAsB/E,UAAA9H,OAAA,QAAA+H,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIoN,EAAWpN,UAAA9H,OAAA,EAAA8H,UAAA,QAAAC,EAClC,OAAQmN,EAAOxO,MACX,KAAKR,GAAmBI,kBACpB,OAAO4O,EAAO+E,QAAQ3V,KAAKyP,MAC/B,QACI,OAAOlH,MCJN3G,GAAU2V,YAAgB,CACnChF,WAAY+E,KCIDC,eAAgB,CAC3B9M,KAAMgN,KACNtN,eCRW,WAAsB3G,UAAA9H,OAAA,QAAA+H,IAAAD,UAAA,IAAAA,UAAA,GACjC,QADiCA,UAAA9H,OAAA,EAAA8H,UAAA,QAAAC,GAClBrB,MACX,KAAKV,GACD,OAAOA,GAEX,KAAKA,GACD,OAAOA,GACX,QACI,MAAO,KDCfC,YETW,WAAsB,IAArB4G,EAAqB/E,UAAA9H,OAAA,QAAA+H,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIoN,EAAWpN,UAAA9H,OAAA,EAAA8H,UAAA,QAAAC,EACjC,OAAQmN,EAAOxO,MACX,KAAKT,GACD,OAAOiP,EAAO+E,QAClB,QACI,OAAOpN,IFKftH,OGVW,WAAsB,IAArBsH,EAAqB/E,UAAA9H,OAAA,QAAA+H,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIoN,EAAWpN,UAAA9H,OAAA,EAAA8H,UAAA,QAAAC,EACjC,OAAQmN,EAAOxO,MACX,KAAKnB,EACD,OAAO2P,EAAO+E,QAClB,QACI,OAAOpN,IHMf9G,YIXW,WAAsB,IAArB8G,EAAqB/E,UAAA9H,OAAA,QAAA+H,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIoN,EAAWpN,UAAA9H,OAAA,EAAA8H,UAAA,QAAAC,EACjC,OAAQmN,EAAOxO,MACX,KAAKX,EACD,OAAOmP,EAAO+E,QAClB,QACI,OAAOpN,IJOf3G,QAASA,KKHP8V,GAAmBC,OAAOC,sCAAwCC,IAClEC,GAAQC,YAAYC,GACtBN,GAAiBO,YAAgBC,OAGrCC,IAAS7G,OACL3V,EAAAC,EAAAC,cAACuc,EAAA,EAAD,CAAUN,MAAOA,IACbnc,EAAAC,EAAAC,cAACwc,GAAD,OAEJ1D,SAAS2D,eAAe","file":"static/js/main.3ac1011c.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory();","import React, {Component} from 'react'\n\nimport {\n    Container, Dropdown,\n    Grid,\n    Menu,\n    Transition\n} from \"semantic-ui-react\";\nimport SplitText from 'react-pose-text';\nimport {Link, Router} from \"react-router-dom\";\nimport history from \"../history\";\nimport Particles from \"react-particles-js\";\nimport {\n    BrowserView,\n    MobileView,\n    isBrowser,\n    isMobile\n} from \"react-device-detect\";\n\nconst charPoses = {\n    exit: {opacity: 0, y: 20},\n    enter: {\n        opacity: 1,\n        y: 0,\n        delay: ({charIndex}) => charIndex * 60\n    }\n};\n\nclass App extends Component {\n    renderSubMenu(items){\n        if(items.length < 1){\n            return null\n        }\n        return (\n            <Dropdown text='More' pointing className='link item'>\n                <Dropdown.Menu>\n                    {\n                        items.map(\n                            (item, key) => (\n                                <Dropdown.Item\n                                        name={item.reference}\n                                        key={`menuItem-${key}`}\n                                        as={Link}\n                                        to={'/' + item.reference}>\n                                        {item.name}\n                                </Dropdown.Item>\n                            )\n                        )\n                    }\n                </Dropdown.Menu>\n            </Dropdown>\n        )\n    }\n    renderMenu() {\n        if (this.props.menu.length < 1) {\n            return null\n        }\n        const subitems = []\n        return (\n            <Menu inverted widths={6} className={'mainMenu'} pointing secondary stackable>\n                <Router history={history}>\n                    {\n                        this.props.menu.map(\n                            (item, key) => {\n                                if(item.subitem){\n                                    subitems.push(item);\n                                    return null\n                                }\n                                return (\n                                    <Menu.Item\n                                        name={item.reference}\n                                        key={`menuItem-${key}`}\n                                        as={Link}\n                                        to={'/' + item.reference}>\n                                        {item.name}\n                                    </Menu.Item>)\n                            })\n                    }\n                    {\n                        this.renderSubMenu(subitems)\n                    }\n                </Router>\n            </Menu>\n        )\n    }\n\n    render() {\n        return (\n            <>\n                <div className='appContent'>\n                    <div className={'welcome'}>\n                        <BrowserView>\n                        <Transition\n                            visible={this.props.sloganText}\n                            animation={\"fade up\"}\n                            duration={{show: 2000}}\n                        >\n                            <div>\n                                <Particles\n                                    className={'particles'}\n                                    params={{\n                                        \"particles\": {\n                                            \"number\": {\n                                                \"value\": 40\n                                            },\n                                            \"size\": {\n                                                \"value\": 3\n                                            }\n                                        }\n                                    }}/>\n                            </div>\n                        </Transition>\n                        </BrowserView>\n                        <Container>\n                            <Grid columns={1}>\n                                <Grid.Row verticalAlign='middle' className={'welcome-box'}>\n                                    <Grid.Column textAlign={'center'}>\n                                        <div className=\"introName\">\n                                            <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n                                                {this.props.applicationDetails.title}\n                                            </SplitText>\n                                        </div>\n                                        <div className=\"sloganText\">\n                                            <Transition\n                                                unmountOnHide={false}\n                                                visible={this.props.sloganText}\n                                                animation={\"fade up\"}\n                                                duration={{show: 1000}}\n                                            >\n                                                <div>\n                                                    {this.props.applicationDetails.sub_title}\n                                                </div>\n                                            </Transition>\n                                        </div>\n                                    </Grid.Column>\n                                </Grid.Row>\n                                <Transition\n                                    unmountOnHide={false}\n                                    visible={this.props.sloganText}\n                                    animation={\"fade down\"}\n                                    duration={{show: 800}}\n                                >\n                                    <Grid.Row>\n                                        <Grid.Column>\n                                            {this.renderMenu()}\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                </Transition>\n                            </Grid>\n                        </Container>\n                    </div>\n                    <Transition\n                        unmountOnHide={false}\n                        visible={this.props.sloganText}\n                        animation={\"fade up\"}\n                        duration={{show: 1000}}\n                    >\n                        <div className={'page-section'}>\n                            <Container>\n                                {this.props.activePageContent}\n                            </Container>\n                        </div>\n                    </Transition>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default App","export const baseUrl='http://165.22.196.58:8080/keygenes/';\nexport const projectName='KeyGenes';\n","import axios from 'axios'\nimport {baseUrl} from \"../config\";\n\nexport default axios.create({\n   'baseURL': baseUrl\n});\n\n","export const configError = {\n    FAILED_CONFIG: \"application configuration could not be received from API\"\n};\n\nexport const moduleError = {\n    INVALID_MODULE: \"config item is assigned to an unknown module\",\n    INVALID_MODULE_ATTRS: `module config does not contain the required attrs`,\n    INVALID_MODULE_REF: \"reference alias doesn't refer to an item\",\n};\n","import _ from \"lodash\";\nimport {moduleError} from '../constants/errorTypes'\n\nexport const getOnlyPublished = (data) =>{\n\n    return _.values(_.filter(\n        data, function(item){ return item.status === 'published' || item.published === 'published' })\n    );\n};\n\nexport const validateAttributes = (obj, required_attributes) =>{\n    return (required_attributes.every(key => Object.keys(obj).includes(key)))\n};\n\nexport const validateReferenceAlias = (key, obj)=>{\n    return obj.hasOwnProperty(key)\n};\n\nexport class throwError{\n    static config = (message) =>{\n        console.error( `Configuration error -  ${message}`);\n    };\n    static module = (message) =>{\n        console.error( `Module error -  ${message}`);\n    };\n    static moduleAttr = (module, attrs) =>{\n        console.error( `Module error -  ${module} ${moduleError.INVALID_MODULE_ATTRS}: ${attrs}`);\n    };\n}","export const config = {\n    GET_CONFIG: \"GET_CONFIG\",\n    SET_CONFIG: \"SET_CONFIG\"\n};\n\nexport const collections = {\n    ADD_COLLECTION: \"ADD_COLLECTION\"\n};\n\nexport const protocol ={\n    PROTOCOL_COMPLETED:'PROTOCOL_COMPLETED',\n    PROTOCOL_FAILED :'PROTOCOL_FAILED',\n};\n\nexport const application ={\n    GET_APPLICATION_DONE: \"GET_APPLICATION_DONE\",\n    GET_APPLICATION_FAILED: \"GET_APPLICATION_FAILED\"\n};\n\nexport const modules ={\n    geneFinder: {\n        GET_SUGGESTIONS: \"GET_SUGGESTIONS\",\n        SET_ACTIVE_GENE: \"SET_ACTIVE_GENE\",\n        GET_GENE_COUNTS: \"GET_GENE_COUNTS\",\n        SET_ACTIVE_TISSUE: \"SET_ACTIVE_TISSUE\",\n        SET_ACTIVE_STAGE: \"SET_ACTIVE_STAGE\"\n    }\n\n};","export const required = value => value ? undefined : 'Required';\nexport const minValueChar = min => value => value.length && value.length < min ? `Must be at least ${min} characters` : undefined;\nexport const minValue5 = minValueChar(5);\nexport const email = value =>value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;","import React from 'react'\nimport {Button, Grid, Icon, Label} from \"semantic-ui-react\";\nimport {throwError} from \"../../utils/generalHelpers\";\n\n\nconst ButtonModule = (props) =>{\n    switch(props.setting.config.type) {\n        case 'github':\n            return(\n                <Grid.Row>\n                    <Grid.Column textAlign={'center'}>\n                        <a href={props.setting.config.config.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Button as='div' labelPosition='right'>\n                            <Button color='blue'>\n                                <Icon name='github' />\n                                GitHub\n                            </Button>\n                            <Label basic  pointing='left'>\n                                {props.setting.config.config.label}\n                            </Label>\n                        </Button>\n                        </a>\n                    </Grid.Column>\n                </Grid.Row>\n            );\n        case 'download':\n            return(\n                <Grid.Row>\n                    <Grid.Column textAlign={'center'}>\n                        <a href={props.setting.config.config.link} download target={'_blank'}>\n                        <Button icon labelPosition='left'>\n                            <Icon name='cloud' />\n                            {props.setting.config.config.label}\n                        </Button>\n                        </a>\n                    </Grid.Column>\n                </Grid.Row>\n            );\n        default:\n            throwError.module(`Button not rendered, type: ${props.moduleName} not found`);\n            return null;\n    }\n};\n\nexport default ButtonModule","import React from 'react'\nimport Parser from \"html-react-parser\";\nimport _ from 'lodash'\nimport {Grid, Header} from \"semantic-ui-react\";\nimport {throwError} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\nimport {validateAttributes, validateReferenceAlias} from \"../../utils/generalHelpers\"\n\nconst module = 'content';\nconst required_attributes = ['reference_alias', 'content'];\n\nconst getTitle = (title, size='h2') =>{\n    if(!title){\n        return null\n    }\n    return(\n        <Grid.Row>\n            <Grid.Column >\n                <Header as={size}>\n                    {title}\n                </Header>\n            </Grid.Column>\n        </Grid.Row>\n    )\n};\n\nconst ContentModule = (props) =>{\n    if (props.collection){\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        const pointer_set = _.keyBy(props.collection, 'reference_alias');\n        if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n            throwError.module(moduleError.INVALID_MODULE_REF);return null}\n        return (\n            <>\n            {getTitle(pointer_set[props.setting.alias_ref].title)}\n            <Grid.Row>\n                <Grid.Column>\n                {Parser(pointer_set[props.setting.alias_ref].content)}\n                </Grid.Column>\n            </Grid.Row>\n            </>\n        )\n    }\n    return null\n\n};\n\nexport default ContentModule","import React from 'react'\nimport {Grid} from \"semantic-ui-react\";\nimport Timeline from \"react-timeline-semantic-ui\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\nimport {BrowserView} from \"react-device-detect\";\n\nconst module = 'tool_steps';\nconst required_attributes = ['icon', 'title', 'step_name', 'description', 'tags'];\n\n\nconst ToolStepModule = (props) =>{\n    if (props.collection){\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n\n            <Grid.Row>\n                <Grid.Column className={'timeLine'}>\n                    {props.collection.map(\n                        (item, key) =>{\n                            let dir = ((key + 1)%2 === 1)?'left': 'right';\n                            return(\n                                <Timeline\n                                    key={`timelineItem-${key}`}\n                                    className={'time-item'}\n                                    direction={dir}\n                                    icon={item.icon}\n                                    title={item.title}\n                                    time={`${key+1} ${item.step_name}`}\n                                    description={item.description}\n                                    color=\"blue\"\n                                    tags={item.tags}\n                                    lineHeight={key}\n                                />\n                            )\n                        }\n                    )}\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default ToolStepModule","import React from 'react'\nimport _ from 'lodash'\nimport {Grid, Header, Icon, Image} from \"semantic-ui-react\";\nimport {List} from \"semantic-ui-react\";\nimport {throwError, validateAttributes, validateReferenceAlias} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\n\nconst getTitle = (title, size='h2') =>{\n    if(!title){\n        return null\n    }\n    return(\n        <Grid.Row>\n            <Grid.Column >\n                <Header as={size}>\n                    {title}\n                </Header>\n            </Grid.Column>\n        </Grid.Row>\n    )\n};\nconst ListModule = (props) =>{\n    if (props.collection){\n        switch (props.setting.config.type) {\n            case 'icon-list':\n                return renderIconList(props);\n            case 'download-list':\n                return renderDownloadList(props);\n            default:\n                return null\n        }\n    }\n    return null\n\n};\nconst renderIconList = (props) => {\n    const module = 'tool_steps';\n    const required_attributes = ['icon', 'title', 'description'];\n    if (!validateAttributes(props.collection[0], required_attributes)){\n        throwError.moduleAttr(module, required_attributes);return null}\n    const pointer_set = _.keyBy(props.collection, 'reference_alias');\n    if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n        throwError.module(moduleError.INVALID_MODULE_REF);return null}\n\n    return (\n        <>\n            {getTitle(props.setting.title)}\n            <Grid.Row>\n                <Grid.Column >\n                    <List divided relaxed>\n                        {props.collection.map(\n                            (item, key) => {\n                                return (\n                                    <List.Item key={`list-icon-${key}-${props.setting.collection}`}>\n                                        <List.Icon name={item.icon} size='large' verticalAlign='top' />\n                                        <List.Content>\n                                            <List.Header as='a'>{item.title}</List.Header>\n                                            <List.Description as='a'>{item.description}</List.Description>\n                                        </List.Content>\n                                    </List.Item>\n                                )\n                            }\n                        )}\n                    </List>\n                </Grid.Column>\n            </Grid.Row>\n        </>\n    );\n};\nconst renderDownloadList = (props) =>{\n    const module = 'tool_steps';\n    const required_attributes = ['link', 'title', 'description'];\n    if (!validateAttributes(props.collection[0].items[0], required_attributes)){\n        throwError.moduleAttr(module, required_attributes);return null}\n    const pointer_set = _.keyBy(props.collection, 'reference_alias');\n    if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n        throwError.module(moduleError.INVALID_MODULE_REF);return null}\n    return (\n        <Grid.Row>\n            <Grid.Column>\n                {getTitle(props.setting.title, 'h3')}\n                <List >\n                    {pointer_set[props.alias_ref].items.map(\n                        (item, key) => {\n                            return (\n                                <List.Item key={`download-list-${key}`}>\n                                    <Image avatar>\n                                        <a href={item.link} download>\n                                            <Icon avatar={'true'} circular inverted name='download' />\n                                        </a>\n                                    </Image>\n                                    <List.Content>\n                                        <List.Header>{item.title}</List.Header>\n                                        {item.description}\n                                    </List.Content>\n                                </List.Item>\n                            )\n                        }\n                    )}\n                </List>\n            </Grid.Column>\n        </Grid.Row>\n    );\n}\n\nexport default ListModule","import React from 'react'\nimport {Grid} from \"semantic-ui-react\";\nimport Parser from \"html-react-parser\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst FaqModule = (props) =>{\n    if (props.collection){\n        let module = 'faqs';\n        let required_attributes = ['question', 'answer'];\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column>\n                    {props.collection.map(\n                        (item, key) =>{\n\n                            return (\n                                <div key={`question-answer-${key}`}>\n                                    <p><b>Q: {item.question}</b></p>\n                                    {Parser(item.answer)}\n                                    <br/>\n                                </div>\n                            )\n                        }\n                    )}\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default FaqModule","import React from 'react'\nimport {Grid, Icon, Image} from \"semantic-ui-react\";\nimport {Card} from \"semantic-ui-react\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\nimport {isMobile, isTablet, isBrowser} from \"react-device-detect\";\n\nconst checkImage = (cardData) =>{\n    try{\n        return cardData.image.data.full_url\n    }\n    catch (e) {\n        return 'https://via.placeholder.com/150'\n    }\n};\nconst renderCard =  (cardData ,key) =>{\n    return (\n        <Card key={`contact-card-${key}`}>\n            <Image src={checkImage(cardData)} wrapped ui={false} />\n            <Card.Content>\n                <Card.Header>{cardData.name}</Card.Header>\n                <Card.Meta>\n                    <span className='date'>\n                        Joined in {cardData.year_joined}{cardData.year_left? \", left in \"+cardData.year_left:\"\"}\n                    </span>\n                </Card.Meta>\n                <Card.Description>\n                    {cardData.job_description}\n                </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                    <Icon name='mail' />\n                    {cardData.email}\n            </Card.Content>\n        </Card>\n    )\n};\n\nconst ContactCardsModule = (props) =>{\n    if (props.collection){\n        let module = 'contact-cards';\n        let required_attributes = ['name', 'job_description', 'year_joined'];\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column>\n                    <Card.Group textAlign={'center'} itemsPerRow={(isBrowser || isTablet)?3:1}>\n                        {props.collection.map(\n                            (item, key) =>{\n                                return renderCard(item, key)\n                            }\n                        )}\n                    </Card.Group>\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default ContactCardsModule","import React from 'react'\nimport {Form, Input} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) =>{\n    if(touched && error){\n        return(\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\nexport default (input, label, meta, inputAttr) =>{\n    return(\n        <Form.Field>\n            <label>{label}</label>\n            <Input {...input}  {...inputAttr} autoComplete='off' />\n            {renderError(meta)}\n        </Form.Field>\n    )\n};\n\n","import React from 'react'\nimport {Form, Input} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) =>{\n    if(touched && error){\n        return(\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\n\nexport default  ({ input: {value: omitValue, ...inputProps }, meta: omitMeta, ...props }) =>{\n    return(\n        <Form.Field>\n            <label>{props.label}</label>\n            <Input\n                type={'file'}\n                {...inputProps}\n                {...props.input}\n                autoComplete='off' />\n            {renderError(omitMeta)}\n        </Form.Field>\n    )\n};\n","import React from 'react'\nimport {Dropdown, Form} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) => {\n    if (touched && error) {\n        return (\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\nexport default (input, label, meta, inputAttr) => {\n    return (\n        <Form.Field>\n            <label>{label}</label>\n            <Dropdown selection {...input}\n                      {...inputAttr}\n                      value={input.value}\n                      onChange={(param, data) => input.onChange(data.value)}\n                      placeholder={label}\n            />\n            {renderError(meta)}\n        </Form.Field>\n    )\n};\n\n","import checkBox from './checkBoxInput'\nimport text from './textInput'\nimport file from './fileInput'\nimport slider from \"./sliderInput\";\nimport select from \"./selectInput\";\n\nexport const textInput = ({input,label,meta,inputAttr}) => text(input,label,meta,inputAttr);\nexport const fileInput = (props) => file(props);\nexport const selectInput = ({input,label,meta,inputAttr}) => select(input,label,meta,inputAttr);\nexport const checkBoxInput = ({input,label,meta,inputAttr={}}) => checkBox(input,label,meta,inputAttr);\nexport const sliderInput = ({input,label,meta,inputAttr={}}) => slider(input,label,meta,inputAttr);\n","import React, {Component} from 'react'\nimport {Button, Form, Grid, Icon, Segment, Transition} from \"semantic-ui-react\";\nimport {Field, reduxForm, reset} from \"redux-form\";\nimport {required} from \"../../constants/formValidationRules\";\nimport {fileInput, selectInput, textInput} from \"../helpers/redux-form-inputs\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\nimport {protocol} from \"../../constants/types\";\n\nclass FormModule extends Component{\n\n    state = {fileInputCode: 'fileCode'};\n    onSubmit = (formValues, dispatch) =>{\n        this.props.onSubmit(\n            this.props.collection['form'][0],\n            formValues\n        );\n        dispatch(reset('mainForm'));\n        this.setState({fileInputCode: Math.random().toString(36).substring(7)})\n    };\n    renderForm(){\n        if(this.props.collection['inputs'].length < 1){\n            return <b><i>Form under construction!</i></b>\n        }else{\n            return (\n                <div>\n                    {this.renderInputs()}\n                    <Button type={'submit'} icon labelPosition='left' size='large'  floated='right'>\n                        <Icon name='paper plane' />\n                        Run!\n                    </Button>\n                </div>\n            )\n        }\n    }\n    renderInputType = (input, key) => {\n        switch (input.input_type.type) {\n            case 'text':\n                return (\n                    <Field\n                        key={`field-input-${key}`}\n                        name={input.api_reference_parameter}\n                        component={textInput}\n                        validate={[ required ]}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`,\n                            type:'text',\n                        }}\n                    />\n                );\n            case 'file':\n                return (\n                    <Field\n                        key={`field-input-${key}-${this.state.fileInputCode}`}\n                        name={input.api_reference_parameter}\n                        component={fileInput}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`\n                        }}\n                    />\n                );\n            case 'select':\n                const options = this.createOptions(key, input.option_titles, input.option_values);\n                return (\n                    <Field\n                        key={`field-input-${key}`}\n                        name={input.api_reference_parameter}\n                        component={selectInput}\n                        validate={[ required ]}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`,\n                            options: options}\n\n                        }\n                    />\n                );\n            default:\n                return null\n\n        }\n    };\n    createOptions = (index, titles, values) => {\n        const options = [];\n        titles.forEach(\n            (title, key) =>{\n                options.push({\n                    'key': `optionItem-${index}-${key}`,\n                    'text': titles[key],\n                    'value': values[key]\n                })\n            }\n        );\n        return options\n    };\n    renderInputs(){\n        return this.props.collection['inputs'].map(\n            (input, key) => this.renderInputType(input, key)\n        )\n    }\n\n    render() {\n        if(!this.props.collection['inputs']){\n            return null\n        }\n        let module = 'form:form';\n        let required_attributes = ['title', 'api', 'tool_reference', 'description'];\n        if (!validateAttributes(this.props.collection['form'][0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        module = 'form:inputs';\n        required_attributes = ['api_reference_parameter', 'label', 'input_type'];\n        if (!validateAttributes(this.props.collection['inputs'][0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return(\n                <Grid.Row>\n                    <Grid.Column>\n                        {(this.props.protocolStatus === protocol.PROTOCOL_COMPLETED)?(\n                            <Transition\n                                transitionOnMount={true}\n                                animation={\"slide down\"}\n                                duration={{ show:1000 }}\n                            >\n                                <Segment color={'green'}>\n                                    <b>Algorithm executed!</b> Dataset will be in your mail when ready\n                                </Segment>\n                            </Transition>\n                        ):''\n                        }\n                        {(this.props.protocolStatus === protocol.PROTOCOL_FAILED)?(\n                            <Transition\n                                transitionOnMount={true}\n                                animation={\"slide down\"}\n                                duration={{ show:1000 }}\n                            >\n                                <Segment color={'red'}>\n                                    <b>Algorithm encountered an error!</b> please make sure the configuration is setup correctly\n                                </Segment>\n                            </Transition>\n                        ):''\n                        }\n                        <h3>Configuration</h3>\n                        <Form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                            {this.renderForm()}\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n        )\n    }\n\n}\nexport default reduxForm({\n    form:'mainForm'\n})(FormModule)","import React, {Component} from 'react'\nimport {\n    Button,\n    Card,\n    Container,\n    Dimmer,\n    Form,\n    Grid,\n    Header,\n    Icon,\n    Image,\n    Loader,\n    Search,\n    Segment\n} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport Plot from '../../../../node_modules/react-plotly.js/react-plotly';\n\n\nconst initialState = {isLoading: false, value: '', selected: false, tissues: [], stages: [], graphSetting:'all'}\n\nclass GeneFinder extends Component {\n    state = initialState;\n\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        this.setState({tissues: _.chain(this.props.collection.tissue).keyBy('id').mapValues('name').value()})\n        this.setState({stages: _.chain(this.props.collection.stage).keyBy('id').mapValues('name').value()})\n    }\n\n    mapTissues = (tissues) =>{\n        return tissues.map((item) =>{\n            return this.state.tissues[item]\n        })\n    }\n    generatePlotTraces = (data) => {\n        if(this.state.graphSetting === 'sex')\n            return []\n        const plotTraces = [];\n        const stage_groups = _.groupBy(data, 'stage')\n        const stages = this.state.stages;\n        Object.keys(stage_groups).forEach( (key) => {\n            let items = _.remove(stage_groups[key], function (currentObject) {\n                return currentObject.count !== \"nan\";\n            });\n            const trace = {\n                x: this.mapTissues(_.map(items, 'tissue')),\n                y: _.map(items, 'CPM'),\n                mode: 'markers',\n                type: 'scatter',\n                name: stages[key],\n                opacity: 0.5,\n                marker: {\n                    size: 20\n                }\n            };\n            plotTraces.push(trace)\n        });\n        return plotTraces\n    }\n    generateSexPlotTraces = (data) => {\n        if(this.state.graphSetting === 'stage')\n            return []\n        const plotTraces = [];\n        const sex_groups = _.groupBy(data, 'sex')\n        const stages = {'F': 'Female', 'M': 'Male'};\n        Object.keys(sex_groups).forEach( (key) => {\n            let items = _.remove(sex_groups[key], function (currentObject) {\n                return currentObject.count !== \"nan\";\n            });\n            const trace = {\n                x: this.mapTissues(_.map(items, 'tissue')),\n                y: _.map(items, 'CPM'),\n                mode: 'markers',\n                type: 'scatter',\n                name: stages[key],\n                opacity: (this.state.graphSetting === 'all')?0.1:0.5,\n                marker: {\n                    symbol:1,\n                    size: (this.state.graphSetting === 'all')?40:20\n                }\n            };\n            plotTraces.push(trace)\n        });\n        return plotTraces\n    }\n    setGraph = (name) =>{\n        this.setState({graphSetting: name})\n    }\n    renderGraph() {\n        if (this.props.moduleData.geneCounts.length > 0) {\n            const plotTraces = this.generatePlotTraces(this.props.moduleData.geneCounts)\n            const plotTracesSex = this.generateSexPlotTraces(this.props.moduleData.geneCounts)\n            return (\n                <>\n                    <center>\n                    <Button.Group>\n                        <Button active={(this.state.graphSetting === 'stage')} onClick={() => this.setGraph('stage')}>stages</Button>\n                        <Button active={(this.state.graphSetting === 'sex')} onClick={() => this.setGraph('sex')}>sex</Button>\n                        <Button active={(this.state.graphSetting === 'all')} onClick={() => this.setGraph('all')}>all</Button>\n                    </Button.Group>\n                    </center>\n                <Plot\n                    className={'full-size large'}\n                    data={[...plotTracesSex, ...plotTraces]}\n                    layout={{\n                        showlegend: true,\n                        height: 600, hovermode: 'closest',\n                        title: `Expression in ${this.props.moduleData.activeGene.ensg}\\ \n${this.props.moduleData.activeGene.symbol ? ` (${this.props.moduleData.activeGene.symbol})` : ''}\\\n${this.props.moduleData.activeGene.description ? ` - ${this.props.moduleData.activeGene.description}` : ''}`,\n                        yaxis:{\n                            title: \"Counts per million (CPM)\"\n                        },\n                        xaxis:{\n                            categoryarray: _.map(this.state.tissues, (item) => item)\n                        }\n                    }}\n                />\n                </>\n            )\n        } else if (this.state.selected) {\n            return (\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Preparing expression data...'/>\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png'/>\n                    </Segment>\n                </div>\n            )\n        }\n        return null\n    }\n\n    handleResultSelect = (e, {result}) => {\n        this.props.setGene(result)\n        this.setState({value: result.ensg, selected: true})\n        this.props.getGeneCounts(result.id)\n    }\n    handleSearchChange = (event) => {\n        this.props.getGeneSuggestions(event.target.value);\n        this.setState({value: event.target.value, selected: false})\n    }\n    render() {\n        const {isLoading, value, tissues, stages} = this.state;\n        if (tissues.length < 1 || stages.length < 1) {\n            return (\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Loading'/>\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png'/>\n                    </Segment>\n                </div>\n            )\n        }\n        return (\n            <Grid>\n                <Grid.Row centered>\n                    <Grid.Column width={8}>\n                        <Form>\n                            <Form.Field>\n                                <label>Search using the gene symbol,ensembl id or gene description</label>\n                                <Search\n                                    loading={isLoading}\n                                    onResultSelect={this.handleResultSelect}\n                                    onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                                        leading: true,\n                                    })}\n                                    results={this.props.moduleData.suggestions}\n                                    value={value}\n                                    {...this.props}\n                                />\n                            </Form.Field>\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row centered>\n                    <Grid.Column width={16}>\n                        <center>\n                        {this.renderGraph()}\n                        </center>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        )\n    }\n\n}\n\nexport default GeneFinder;","import React, {Component} from 'react'\nimport {\n    Button,\n    Card,\n    Container,\n    Dimmer, Dropdown,\n    Form,\n    Grid,\n    Header,\n    Icon,\n    Image, Input,\n    Loader,\n    Search,\n    Segment, Table\n} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport Plot from '../../../../node_modules/react-plotly.js/react-plotly';\nimport SmartDataTable from \"react-smart-data-table\";\nimport FileSaver from 'file-saver'\nimport CsvDownload from 'react-json-to-csv'\n\nconst stages = [\n    {\n        key: 1,\n        text: 'all',\n        value: -1\n    },\n    {\n        key: 2,\n        text: 'adult',\n        value: 1\n    },\n    {\n        key: 3,\n        text: 'fetal',\n        value: 0\n    },\n]\n\nconst initialState = {stages: [], options: [], searchTerm: '', downloadData: [], stageOptions: stages, stageActive: -1, stageName: 'all'}\n\nclass TissueFinder extends Component {\n\n    state = initialState;\n\n    componentDidMount() {\n        this.setState({stages: _.chain(this.props.collection.stage).\n            keyBy('id').\n            mapValues('name').value()})\n        this.setState({\n            options: _.map(this.props.collection.tissue, (state) => ({\n                key: state.id,\n                text: state.name,\n                value: state.id,\n            }))\n        })\n    }\n\n    setActiveTissue = (e, data) => {\n        this.props.setTissue({id: data.value, text: e.target.innerText}, this.state.stageActive)\n    }\n    generatePlotTraces = (data, genes) => {\n        data = _.map(data, (item) => {\n            if (genes.includes(item.symbol)) return item\n        })\n        data = _.compact(data)\n        const plotTraces = [];\n        const stage_groups = _.groupBy(data, 'stage')\n        const stages = this.state.stages;\n        Object.keys(stage_groups).forEach(function (key) {\n            let items = _.remove(stage_groups[key], function (currentObject) {\n                return currentObject.count !== \"nan\";\n            });\n            const trace = {\n                x: _.map(items, 'symbol'),\n                y: _.map(items, 'CPM'),\n                mode: 'markers',\n                type: 'scatter',\n                name: stages[key],\n                opacity: 0.5,\n                marker: {\n                    size: 20\n                }\n            };\n            plotTraces.push(trace)\n        });\n        return plotTraces\n    }\n\n    renderGraph() {\n        if (this.props.moduleData.tissueCounts.length > 0) {\n            let genes = _.map(this.props.moduleData.tissueGenes, (gene, index) => {\n                if (index < 20) {\n                    return gene.symbol\n                }\n                return null\n            })\n            genes = _.compact(genes)\n            const plotTraces = this.generatePlotTraces(this.props.moduleData.tissueCounts, genes)\n            console.log(genes)\n            return (\n                <>\n                    <Header as='h3' dividing>\n                        Top 20 expressed genes in {this.state.stageName} {this.props.moduleData.activeTissue.text} tissue\n                    </Header>\n                    <center>\n                        <Plot\n                            className={'full-size large'}\n                            data={plotTraces}\n                            layout={{\n                                showlegend: true,\n                                height: 600, hovermode: 'closest',\n                                xaxis: {\n                                    categoryarray: _.values(genes)\n                                },\n                                yaxis:{\n                                    title: \"Counts per million (CPM)\"\n                                }\n                            }}\n                        />\n                    </center>\n                </>\n            )\n        } else if (this.state.selected) {\n            return (\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Preparing transcription data...'/>\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png'/>\n                    </Segment>\n                </div>\n            )\n        }else if (this.props.moduleData.geneCounts.length === 0 && this.props.moduleData.activeTissue != ''){\n            return <div><center><b>No gene expression found!</b></center></div>\n        }\n        return null\n    }\n\n    renderTableContent = () => {\n        const content = this.props.moduleData.tissueGenes.map(\n            (gene, index) => {\n                if (!(gene.ensg.includes(this.state.searchTerm)\n                    || gene.symbol.includes(this.state.searchTerm)\n                    || gene.description.includes(this.state.searchTerm))) return null\n                return (\n                    <Table.Row key={`tissueItem-${index}`}>\n                        <Table.Cell>{index + 1}</Table.Cell>\n                        <Table.Cell>\n                            <a\n                                className={'tableLink'}\n                                href={`https://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g=${gene.ensg}`}\n                                target={'_blank'}\n                            >\n                                {gene.ensg}\n                            </a>\n                        </Table.Cell>\n                        <Table.Cell>{gene.symbol}</Table.Cell>\n                        <Table.Cell>{gene.description}</Table.Cell>\n                        <Table.Cell>{gene.CPM_avg}</Table.Cell>\n                    </Table.Row>\n                )\n            }\n        )\n        return _.compact(content)\n    }\n    setActiveStage = (e, data) =>{\n        this.setState({stageActive: data.value})\n        this.setState({stageName: e.target.innerText})\n        if(this.props.moduleData.activeTissue.id != ''){\n            this.props.setTissue(this.props.moduleData.activeTissue, data.value)\n        }\n    }\n    filterGeneResults = (e) => {\n        this.setState({searchTerm: e.target.value})\n    }\n\n    renderTable() {\n        if (!this.props.moduleData.tissueGenes.length > 0) {\n            return null\n        }\n        return (\n            <>\n                <Header as='h3' dividing>\n                    Top 100 expressed genes in {this.state.stageName} {this.props.moduleData.activeTissue.text} tissue\n                </Header>\n                <Form>\n                    <Form.Group>\n                        <Form.Field\n                            width={10}\n                        >\n                            <Input onChange={this.filterGeneResults} action={{icon: 'search'}} placeholder='Search...'/>\n                        </Form.Field>\n                        <Form.Field\n                            width={3}\n                        >\n                            <CsvDownload\n                                filename={`KeyGenes-${this.props.moduleData.activeTissue.text}-tissue.csv`}\n                                data={this.renderDownloadData()}\n                                className=\" primary ui labeled icon button\" >\n                                <i className=\"file icon right\"></i>\n                                Save table (.CSV)\n                            </CsvDownload>\n                        </Form.Field>\n                    </Form.Group>\n                </Form>\n                <Table basic>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>#</Table.HeaderCell>\n                            <Table.HeaderCell>ENSG</Table.HeaderCell>\n                            <Table.HeaderCell>Symbol</Table.HeaderCell>\n                            <Table.HeaderCell>Description</Table.HeaderCell>\n                            <Table.HeaderCell>Average CPM</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {this.renderTableContent()}\n                    </Table.Body>\n                </Table>\n            </>\n        )\n    }\n    renderDownloadData = () =>{\n        return _.compact(_.map(this.props.moduleData.tissueGenes, (\n            (gene) => ({\n                ENSG: gene.ensg,\n                Symbol: gene.symbol,\n                AVG_count: gene.count_avg,\n                Description: gene.description\n\n            })\n        )))\n    }\n    render() {\n        const active = this.props.moduleData.activeTissue.id\n        return (\n            <Grid>\n                <Grid.Row centered>\n                    <Grid.Column width={8}>\n                        <Form>\n                            <Form.Field>\n                                <label>Select a development stage</label>\n                                <Dropdown value={this.state.stageActive} placeholder='Stage' search selection\n                                          options={this.state.stageOptions}\n                                          onChange={this.setActiveStage}\n                                          />\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Select a tissue</label>\n                                <Dropdown value={active} placeholder='Tissue' search selection\n                                          options={this.state.options}\n                                          onChange={this.setActiveTissue}/>\n                            </Form.Field>\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row centered>\n                    <Grid.Column width={16}>\n                        {this.renderGraph()}\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={16}>\n                        {this.renderTable()}\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        )\n    }\n}\n\nexport default TissueFinder;","import React, {Component} from 'react'\nimport {Grid, Tab} from 'semantic-ui-react'\nimport GeneFinder from \"./GeneFinder\";\nimport TissueFinder from \"./TissueFinder\";\nimport ModuleLoader from \"../moduleLoader\";\nimport {isMobile} from \"react-device-detect\";\n\nclass GeneBrowser extends Component {\n    panes = [\n        {\n            menuItem: { key: 'genefinder', icon: 'dna', content: 'Search a gene' },\n            render: () => (\n                <Tab.Pane attached={false}>\n                    <GeneFinder\n                        collection={this.props.collection}\n                        moduleData={this.props.moduleData}\n                        getGeneSuggestions={this.props.getGeneSuggestions}\n                        setGene={this.props.setGene}\n                        setting={this.props.setting}\n                        getGeneCounts={this.props.getGeneCounts}\n                    />\n            </Tab.Pane>)\n        },\n        {\n            menuItem: { key: 'tissueFinder', icon: 'heart', content: 'View tissues' },\n            render: () => <Tab.Pane attached={false}>\n                <TissueFinder\n                    collection={this.props.collection}\n                    setTissue={this.props.setTissue}\n                    moduleData={this.props.moduleData}\n                />\n            </Tab.Pane>,\n        },\n    ];\n\n    render() {\n        if(isMobile) return <p>The KeyGenes browser module is only accessible by desktop or tablet!</p>\n        return (\n            <Grid.Column width={16}>\n                <Tab\n                    menu={{secondary: true, pointing: true}}\n                    panes={this.panes}\n                />\n            </Grid.Column>\n        )\n    }\n}\n\nexport default GeneBrowser\n","import React from 'react'\n\nimport ButtonModule from './ButtonModule'\nimport ContentModule from './ContentModule'\nimport ToolStepModule from './ToolStepsModule'\nimport ListModule from \"./ListModule\";\nimport FaqModule from \"./FaqModule\";\nimport ContactCardsModule from \"./ContactCardsModule\";\nimport FormModule from \"./FormModule\";\nimport {throwError} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\nimport GeneFinder from \"./GeneBrowserModule/GeneFinder\";\nimport GeneBrowserModule from \"./GeneBrowserModule\";\nimport Page from \"../Page\";\nimport {isMobile} from \"react-device-detect\";\n\nconst ModuleLoader = (props) =>  {\n    switch(props.setting.module) {\n        case 'content':\n            return (\n                <ContentModule\n                    setting={props.setting}\n                    collection={props.collection}\n                />\n            );\n        case 'button':\n            return (\n                <ButtonModule\n                    setting={props.setting}\n                />\n            );\n        case 'tool_steps':\n            if(isMobile) return null;\n            return (\n                <ToolStepModule\n                    collection={props.collection}\n                />\n            );\n        case 'list':\n            return(\n                <ListModule\n                    alias_ref={props.setting.alias_ref}\n                    setting={props.setting}\n                    collection={props.collection}\n                />\n            );\n        case 'faqs':\n            return (\n                <FaqModule\n                    collection={props.collection}\n                />\n            );\n        case 'contact-cards':\n            return(\n                <ContactCardsModule\n                    collection={props.collection}\n                />\n            );\n        case 'form':\n            return(\n                <FormModule\n                    onSubmit={props.onSubmit}\n                    collection={props.collection}\n                    protocolStatus={props.protocolStatus}\n                />\n            );\n        case 'transcript-finder':\n            return (\n                <GeneBrowserModule\n                    collection={props.collection}\n                    moduleData={props.modulesData.geneFinder}\n                    getGeneSuggestions={props.getGeneSuggestions}\n                    setTissue={props.setTissue}\n                    setGene={props.setGene}\n                    setting={props.setting}\n                    getGeneCounts={props.getGeneCounts}\n                />\n            )\n        default:\n            throwError.module(moduleError.INVALID_MODULE);\n            return null\n    }\n};\n\nexport default ModuleLoader","\nimport React, {Component} from 'react'\nimport ModuleLoader from './modules/moduleLoader'\nimport {Grid, Header} from \"semantic-ui-react\";\nimport {setTissue} from \"../actions/modules/geneFinderActions\";\n\nclass Page extends Component{\n\n    getCollection (collection){\n        if (!collection){\n            return null\n        }\n        if (collection in this.props.collections){\n            return this.props.collections[collection]\n        }\n        else{\n            return null\n        }\n    }\n    renderModules(){\n        return this.props.config.settings.map(\n            (setting, key) =>{\n                if (setting.module === 'form'){\n                    return(\n                        <ModuleLoader\n                            getGeneSuggestions={this.props.getGeneSuggestions}\n                            getGeneCounts={this.props.getGeneCounts}\n                            onSubmit={this.props.onSubmit}\n                            page={this.props.config.name}\n                            key={`module-${this.props.config.reference}-${key}`}\n                            collection={{\n                                'form': this.getCollection(setting.collection),\n                                'inputs': this.getCollection('inputs')\n                            }}\n                            setting={setting}\n                            protocolStatus={this.props.protocolStatus}\n                        />\n                    )\n                }\n                if(setting.module === 'transcript-finder'){\n                    return (\n                        <ModuleLoader\n                            setTissue={this.props.setTissue}\n                            modulesData={this.props.modulesData}\n                            setGene={this.props.setGene}\n                            getGeneSuggestions={this.props.getGeneSuggestions}\n                            getGeneCounts={this.props.getGeneCounts}\n                            page={this.props.config.name}\n                            key={`module-${this.props.config.reference}-${key}`}\n                            collection={{\n                                'tissue': this.getCollection('tissue'),\n                                'stage': this.getCollection('stage')\n                            }}\n                            setting={setting}\n                        />\n                    )\n                }\n                return (\n                    <ModuleLoader\n                        modulesData={this.props.modulesData}\n                        setGene={this.props.setGene}\n                        getGeneSuggestions={this.props.getGeneSuggestions}\n                        getGeneCounts={this.props.getGeneCounts}\n                        page={this.props.config.name}\n                        key={`module-${this.props.config.reference}-${key}`}\n                        collection={this.getCollection(setting.collection)}\n                        setting={setting}\n                    />\n                )\n            }\n        )\n    }\n    render() {\n        if (!this.props.path){\n            return null\n        }\n        return (\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Header as='h1' dividing>\n                            {this.props.config.name}\n                        </Header>\n                    </Grid.Column>\n                </Grid.Row>\n                {this.renderModules()}\n            </Grid>\n        )\n    }\n\n}\nexport  default  Page;","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\n\nimport App from \"../components/App\";\nimport {Dimmer, Icon, Loader, Segment} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport 'fs'\nimport history from '../history'\n\nimport {getConfig, getApplication} from '../actions/configActions'\nimport {getCollections} from '../actions/collectionActions'\nimport {Route, Router, Switch} from \"react-router-dom\";\nimport Page from \"../components/Page\";\nimport {directProtocol} from '../actions/protocols/directProtocolActions'\n\n\n\nimport {projectName, baseUrl} from \"../config.js\";\nimport {throwError} from \"../utils/generalHelpers\";\nimport {configError} from '../constants/errorTypes'\nimport GeneFinder from \"../components/modules/GeneBrowserModule/GeneFinder\";\nimport {getGeneSuggestions, setGene, getGeneCounts, setTissue} from \"../actions/modules/geneFinderActions\";\n\n\nclass AppContainer extends Component {\n\n    state = {\n        menu: [],\n        sloganText: false,\n        pageView: false,\n        render: false,\n        config: false\n    };\n    onSubmit = (config, values) => {\n        switch (config.api.protocol) {\n            case 'direct':\n                this.props.directProtocol(config, values);\n            break;\n            default:\n                console.log('No valid protocol connected to form')\n        }\n    };\n    getCollections = () =>{\n        const collections = [];\n        this.props.config.forEach(\n            (settingItem) => {\n                settingItem.settings.forEach(\n                    (item) =>{\n                        if(item.collection){\n                            if(item.collection === 'form'){\n                                collections.push(item.collection);\n                                collections.push('inputs');\n                            }\n                            collections.push(item.collection)\n                        }\n                        else{\n                            if(item.module === \"transcript-finder\"){\n                                collections.push(\"tissue\")\n                                collections.push(\"stage\")\n                            }\n                        }\n                    }\n                )\n            }\n        );\n        return _.uniq(collections)\n    };\n\n    loadConfig = async () =>{\n        await this.props.getApplication();\n        await this.props.getConfig();\n        const collections = this.getCollections();\n        await this.props.getCollections(collections);\n        this.setState({menu:this.props.config});\n    };\n\n    UNSAFE_componentWillMount(){\n        if(baseUrl !== null){\n            this.setState({config: true});\n        }\n    }\n    componentDidMount() {\n        this.loadConfig();\n        setTimeout(function() {\n            this.setState({render: true})\n        }.bind(this), 2000);\n        setTimeout(\n            () => {\n                this.setState({sloganText: true})\n            }, 1200);\n    }\n    renderRoutes() {\n        return this.props.config.map(\n            (item) =>{\n                return (\n                    <Route\n                        key={`route-${item.reference}`}\n                        path={'/'+item.reference}\n                        exact\n                        render={(props) => this.wrapTransition(\n                            <Page\n                                {...props}\n                                setTissue={this.props.setTissue}\n                                modulesData={this.props.modules}\n                                getGeneSuggestions={this.props.getGeneSuggestions}\n                                setGene={this.props.setGene}\n                                getGeneCounts={this.props.getGeneCounts}\n                                path={'/'+item.reference}\n                                config={item}\n                                collections={this.props.collections}\n                                onSubmit={this.onSubmit}\n                                protocolStatus={this.props.protocolStatus}\n                            />)\n                        }\n                    />\n                )\n            }\n        )\n    }\n    wrapTransition =  (object) => {\n        return object\n    };\n    renderContent() {\n        if(this.props.config.length === 0){\n            return null\n        }\n        return (\n            <Router history={history}>\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        exact\n                        render={(props) => this.wrapTransition(\n                            <Page {...props}\n                                  modulesData={this.props.modules}\n                                  getGeneSuggestions={this.props.getGeneSuggestions}\n                                  setGene={this.props.setGene}\n                                  setTissue={this.props.setTissue}\n                                  getGeneCounts={this.props.getGeneCounts}\n                                  path={'/'+this.props.config[0].reference}\n                                  config={this.props.config[0]}\n                                  collections={this.props.collections}\n                                  protocolStatus={this.props.protocolStatus}\n                                  onSubmit={this.onSubmit}\n                            />)\n                        }\n                    />\n                    {this.renderRoutes()}\n                </Switch>\n            </Router>\n        );\n    }\n    render() {\n        if(this.state.render && !_.isEmpty(this.props.config)) {\n            document\n                .documentElement.style.setProperty(\"--color-primary\", this.props.application.primary_color);\n            return (<App\n                    applicationDetails={this.props.application}\n                    activePageContent={this.renderContent()}\n                    collections={this.props.collections}\n                    config={this.props.config}\n                    menu={this.props.config}\n                    />\n            )\n        }\n        else if(!this.state.render){\n            return (\n                <Segment className={'loading-segment'}>\n                    <Dimmer active>\n                        <Loader indeterminate inline='centered'>Preparing the {projectName} website</Loader>\n                    </Dimmer>\n                </Segment>\n            )\n        }\n        else{\n            throwError.config(configError.FAILED_CONFIG);\n            return (\n                <Segment className={'loading-segment'}>\n                    <Dimmer active>\n                        <Icon name='close' size='huge' inverted color='grey' />\n                        <br/>\n                        <p>Failed to load website</p>\n                    </Dimmer>\n                </Segment>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        config: _.values(state.config),\n        collections: state.collections,\n        protocolStatus:state.protocolStatus,\n        application: state.application[0],\n        modules: state.modules\n    }\n};\nexport default connect(mapStateToProps,{\n        getConfig,\n        getApplication,\n        getCollections,\n        directProtocol,\n        getGeneSuggestions,\n        setGene,\n        getGeneCounts,\n        setTissue\n}\n    )(AppContainer)","import SascWebApi from \"../apis/SascWeb\";\nimport {getOnlyPublished} from '../utils/generalHelpers'\nimport {application, config} from '../constants/types'\n\n\nexport const getConfig = () => async (dispatch) =>{\n    const result = await SascWebApi.get('items/config');\n    const publishedConfig = getOnlyPublished(result.data.data);\n    dispatch({type: config.SET_CONFIG, payload: publishedConfig})\n};\n\nexport const getApplication = () => async (dispatch) =>{\n    const result = await SascWebApi.get('items/application');\n    const publishedConfig = getOnlyPublished(result.data.data);\n    dispatch({type: application.GET_APPLICATION_DONE, payload: publishedConfig})\n};","import SascWebApi from \"../apis/SascWeb\";\nimport {getOnlyPublished} from '../utils/generalHelpers'\nimport {collections} from '../constants/types'\n\n\nexport const getCollections = (rawCollections) => (dispatch) =>{\n    let count = 0;\n    let collectionData = {};\n    rawCollections.forEach( async (item) => {\n        const result = await SascWebApi.get('items/'+item+'?fields=*.*.*');\n        collectionData[item] = getOnlyPublished(result.data.data);\n        count++;\n        if(count === rawCollections.length){\n            dispatch({type: collections.ADD_COLLECTION, payload:collectionData})\n        }\n    });\n\n};\n\n\n\n","import axios from \"axios\";\n\nimport {protocol} from '../../constants/types'\n\nexport const directProtocol = (config, data) => async (dispatch) => {\n    let bodyFormData = new FormData();\n    bodyFormData.set('email', data.email);\n    bodyFormData.set('training', data.training);\n    bodyFormData.append('file', data.file[0]);\n    const result = await axios({\n        method: 'post',\n        url: config.tool_reference,\n        data: bodyFormData,\n        config: { headers: {'Content-Type': 'multipart/form-data',  'Accept': 'text/html' }}\n    });\n    if(result.data.includes(\"Succesfully submitted. Please check your email in a few minutes\")){\n        dispatch({\n            type:protocol.PROTOCOL_COMPLETED\n        });\n    }else{\n        dispatch({\n            type:protocol.PROTOCOL_FAILED\n        });\n    }\n};","import SascWebApi from \"../../apis/SascWeb\";\nimport {modules} from \"../../constants/types\";\n\n\nexport const getGeneSuggestions = (searchTerm) => async (dispatch) =>{\n    const result = await SascWebApi.get(`/items/gene?limit=5&filter[symbol][logical]=or&\n    filter[symbol][rlike]=${searchTerm}%&filter[description][logical]=or&\n    filter[description][rlike]=${searchTerm}%&filter[ensg][logical]=or&filter[ensg][rlike]=${searchTerm}%\n    &filter[symbol][nnull]`);\n    dispatch({type: modules.geneFinder.GET_SUGGESTIONS, payload: result.data.data})\n};\n\nexport const getGeneCounts = (id) => async (dispatch) =>{\n    const result = await SascWebApi.get(`/items/transcript?filter[gene][eq]=${id}`);\n    dispatch({type: modules.geneFinder.GET_GENE_COUNTS, payload: result.data.data})\n};\nexport const setGene = (item) =>{\n    return {type:modules.geneFinder.SET_ACTIVE_GENE, payload:item}\n}\nexport const setTissue = (activeTissue, stage) =>  async (dispatch) =>{\n    stage = (stage >= 0 )?stage:null;\n    const result = await SascWebApi.post(`/custom/data/tissue-data`,\n        {tissueId: activeTissue.id, amount: 100, adult: stage})\n    dispatch({type: modules.geneFinder.SET_ACTIVE_TISSUE, payload: {activeTissue:activeTissue, data:result.data}})\n}\n","import {combineReducers} from \"redux\";\nimport suggestionsReducer from \"./suggestionsReducer\";\nimport activeGeneReducer from \"./activeGeneReducer\";\nimport transcriptsReducer from \"./transcriptsReducer\";\nimport activeTissueReducer from \"./activeTissueReducer\";\nimport tissueCountsReducer from \"./tissueCountsReducer\";\nimport tissueGenesReducer from \"./tissueGenesReducer\";\n\nexport const geneFinderReducers = combineReducers({\n    suggestions: suggestionsReducer,\n    activeGene: activeGeneReducer,\n    geneCounts: transcriptsReducer,\n    activeTissue: activeTissueReducer,\n    tissueCounts: tissueCountsReducer,\n    tissueGenes: tissueGenesReducer\n});","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state=[], action) => {\n    switch (action.type) {\n        case modules.geneFinder.GET_SUGGESTIONS:\n            const items= [];\n            _.values(action.payload).forEach(\n                (item, value) => {\n                    if(!item.symbol){\n                        items.push({\n                            title: `${item.ensg}`,\n                            description: item.description,\n                            id:item.id,\n                            ensg: item.ensg\n                        })\n                    }else{\n                        items.push({\n                            title: `${item.symbol} | ${item.ensg}`,\n                            description: item.description,\n                            id:item.id,\n                            ensg: item.ensg,\n                            symbol: item.symbol\n                        })\n                    }\n\n                }\n            );\n            return items;\n        default:\n            return state;\n    }\n}","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_GENE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state=[], action) => {\n    switch (action.type) {\n        case modules.geneFinder.GET_GENE_COUNTS:\n            return _.values(action.payload)\n        case modules.geneFinder.SET_ACTIVE_GENE:\n            return []\n        default:\n            return state;\n    }\n}","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state='', action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_TISSUE:\n            return action.payload.activeTissue;\n        default:\n            return state;\n    }\n}","import {modules} from \"../../../constants/types\";\n\nexport default (state= {}, action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_TISSUE:\n            return action.payload.data.counts;\n        default:\n            return state;\n    }\n}","import {modules} from \"../../../constants/types\";\n\nexport default (state= {}, action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_TISSUE:\n            return action.payload.data.genes;\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\nimport {geneFinderReducers} from \"./genefinder\";\n\nexport const modules = combineReducers({\n    geneFinder: geneFinderReducers\n});","import {combineReducers} from \"redux\";\nimport {reducer as formReducer} from 'redux-form'\nimport configReducer from './configReducer'\nimport collectionsReducer from \"./collectionsReducer\";\nimport protocolStatusReducer from './protocols/protocolStatusReducer'\nimport applicationReducer from \"./applicationReducer\";\nimport {modules} from \"./modules\";\n\nexport default combineReducers({\n    form: formReducer,\n    protocolStatus: protocolStatusReducer,\n    application: applicationReducer,\n    config: configReducer,\n    collections: collectionsReducer,\n    modules: modules\n});","import {protocol} from \"../../constants/types\";\n\nexport default (state='', action) => {\n    switch (action.type) {\n        case protocol.PROTOCOL_COMPLETED:\n            return protocol.PROTOCOL_COMPLETED;\n\n        case protocol.PROTOCOL_FAILED:\n            return protocol.PROTOCOL_FAILED;\n        default:\n            return ''\n    }\n}","import {application} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case application.GET_APPLICATION_DONE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {config} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case config.SET_CONFIG:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {collections} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case collections.ADD_COLLECTION:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport App from \"./containers/AppContainer\";\nimport 'semantic-ui-css/semantic.min.css'\nimport './assets/main.css'\nimport reducers from './reducers'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}