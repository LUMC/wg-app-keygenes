{"version":3,"sources":["history.js","components/App.js","config.js","apis/SascWeb.js","constants/errorTypes.js","utils/generalHelpers.js","constants/types.js","constants/formValidationRules.js","components/modules/ButtonModule.js","components/modules/ContentModule.js","components/modules/ToolStepsModule.js","components/modules/ListModule.js","components/modules/FaqModule.js","components/modules/ContactCardsModule.js","components/helpers/redux-form-inputs/textInput.js","components/helpers/redux-form-inputs/fileInput.js","components/helpers/redux-form-inputs/selectInput.js","components/helpers/redux-form-inputs/index.js","components/modules/FormModule.js","components/modules/GeneBrowserModule/GeneFinder.js","components/modules/GeneBrowserModule/TissueFinder.js","components/modules/GeneBrowserModule/index.js","components/modules/moduleLoader.js","components/Page.js","containers/AppContainer.js","actions/configActions.js","actions/collectionActions.js","actions/protocols/directProtocolActions.js","actions/modules/geneFinderActions.js","reducers/modules/genefinder/index.js","reducers/modules/genefinder/suggestionsReducer.js","reducers/modules/genefinder/activeGeneReducer.js","reducers/modules/genefinder/transcriptsReducer.js","reducers/modules/genefinder/activeTissueReducer.js","reducers/modules/genefinder/tissueCountsReducer.js","reducers/modules/genefinder/tissueGenesReducer.js","reducers/modules/index.js","reducers/index.js","reducers/protocols/protocolStatusReducer.js","reducers/applicationReducer.js","reducers/configReducer.js","reducers/collectionsReducer.js","index.js"],"names":["createBrowserHistory","charPoses","exit","opacity","y","enter","delay","_ref","charIndex","App","this","props","menu","length","react_default","a","createElement","Menu","inverted","widths","className","pointing","secondary","react_router","history","map","item","key","Item","name","reference","concat","as","Link","to","Fragment","Transition","visible","sloganText","animation","duration","show","particles_default","params","particles","number","value","size","Container","Grid","columns","Row","verticalAlign","Column","textAlign","react_pose_text_es","initialPose","pose","applicationDetails","title","unmountOnHide","sub_title","renderMenu","activePageContent","Component","baseUrl","axios","create","baseURL","configError","moduleError","getOnlyPublished","data","_","values","filter","status","published","validateAttributes","obj","required_attributes","every","Object","keys","includes","validateReferenceAlias","hasOwnProperty","throwError","classCallCheck","config","message","console","error","module","moduleAttr","attrs","min","collections","protocol","application","modules","GET_SUGGESTIONS","SET_ACTIVE_GENE","GET_GENE_COUNTS","SET_ACTIVE_TISSUE","SET_ACTIVE_STAGE","ButtonModule","setting","type","href","link","target","rel","Button","labelPosition","color","Icon","Label","basic","label","download","icon","moduleName","ContentModule","collection","pointer_set","keyBy","alias_ref","arguments","undefined","Header","getTitle","Parser","content","ToolStepModule","dir","dist_default","direction","time","step_name","description","tags","lineHeight","renderIconList","List","divided","relaxed","Content","Description","renderDownloadList","items","Image","avatar","circular","ListModule","FaqModule","question","answer","checkImage","cardData","image","full_url","e","ContactCardsModule","Card","Group","itemsPerRow","src","wrapped","ui","Meta","year_joined","year_left","job_description","extra","email","renderCard","required","redux_form_inputs_textInput","input","meta","inputAttr","Form","Field","Input","assign","autoComplete","touched","renderError","redux_form_inputs_fileInput","_ref2","_ref2$input","inputProps","objectWithoutProperties","omitMeta","redux_form_inputs_selectInput","Dropdown","selection","onChange","param","placeholder","textInput","text","fileInput","file","selectInput","select","FormModule","state","fileInputCode","onSubmit","formValues","dispatch","_this","reset","setState","Math","random","toString","substring","renderInputType","input_type","api_reference_parameter","component","validate","toLowerCase","options","createOptions","option_titles","option_values","index","titles","forEach","push","renderInputs","floated","_this2","protocolStatus","transitionOnMount","Segment","handleSubmit","renderForm","reduxForm","form","initialState","isLoading","selected","tissues","stages","graphSetting","GeneFinder","possibleConstructorReturn","getPrototypeOf","call","mapTissues","generatePlotTraces","plotTraces","stage_groups","groupBy","remove","currentObject","count","trace","x","mode","marker","generateSexPlotTraces","sex_groups","F","M","symbol","setGraph","handleResultSelect","result","setGene","ensg","getGeneCounts","id","handleSearchChange","event","getGeneSuggestions","chain","tissue","mapValues","stage","moduleData","geneCounts","plotTracesSex","active","onClick","react_plotly_default","toConsumableArray","layout","showlegend","height","hovermode","activeGene","yaxis","Dimmer","Loader","_this$state","centered","width","Search","loading","onResultSelect","onSearchChange","debounce","leading","results","suggestions","renderGraph","searchTerm","downloadData","stageOptions","stageActive","stageName","TissueFinder","setActiveTissue","setTissue","innerText","genes","compact","renderTableContent","tissueGenes","gene","Table","Cell","CPM_avg","setActiveStage","activeTissue","filterGeneResults","renderDownloadData","ENSG","Symbol","AVG_count","count_avg","tissueCounts","dividing","xaxis","categoryorder","categoryarray","action","react_json_to_csv_dist_default","filename","HeaderCell","Body","search","renderTable","GeneBrowser","panes","menuItem","render","Tab","Pane","attached","GeneBrowserModule_GeneFinder","GeneBrowserModule_TissueFinder","ModuleLoader","modules_ContentModule","modules_ButtonModule","ToolStepsModule","modules_ListModule","modules_FaqModule","modules_ContactCardsModule","modules_FormModule","GeneBrowserModule","modulesData","geneFinder","Page","settings","moduleLoader","page","getCollection","inputs","path","renderModules","AppContainer","pageView","api","directProtocol","log","getCollections","settingItem","uniq","loadConfig","_callee","regenerator_default","wrap","_context","prev","next","getApplication","getConfig","stop","wrapTransition","object","setTimeout","bind","_this3","exact","components_Page","_this4","renderRoutes","isEmpty","document","documentElement","style","setProperty","primary_color","components_App","renderContent","indeterminate","inline","connect","asyncToGenerator","mark","publishedConfig","SascWebApi","get","sent","payload","_x","apply","_callee2","_context2","_x2","rawCollections","collectionData","bodyFormData","FormData","set","training","append","method","url","tool_reference","headers","Content-Type","Accept","_ref3","_callee3","_context3","post","tissueId","amount","adult","_x3","geneFinderReducers","combineReducers","counts","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","es","containers_AppContainer","getElementById"],"mappings":"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","file":"static/js/main.3368e9a2.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory();","import React, {Component} from 'react'\n\nimport {\n    Container,\n    Grid,\n    Menu,\n    Transition\n} from \"semantic-ui-react\";\nimport SplitText from 'react-pose-text';\nimport {Link, Router} from \"react-router-dom\";\nimport history from \"../history\";\nimport Particles from \"react-particles-js\";\n\nconst charPoses = {\n    exit: { opacity: 0, y: 20 },\n    enter: {\n        opacity: 1,\n        y: 0,\n        delay: ({ charIndex }) => charIndex * 60\n    }\n};\nclass App extends Component{\n    renderMenu(){\n        if (this.props.menu.length < 1){\n            return null\n        }\n        return (\n            <Menu inverted  widths={6} className={'mainMenu'}  pointing secondary  >\n                <Router history={history}>\n                    {\n                        this.props.menu.map(\n                            (item, key) => (\n                                <Menu.Item\n                                    name={item.reference}\n                                    key={`menuItem-${key}`}\n                                    as={Link}\n                                    to={'/'+item.reference}>\n                                    {item.name}\n                                </Menu.Item>\n                            ))\n                    }\n                </Router>\n            </Menu>\n        )\n    }\n    render() {\n        return(\n            <>\n            <div className='appContent' >\n                <div className={'welcome'}>\n                    <Transition\n                        visible={this.props.sloganText}\n                        animation={\"fade up\"}\n                        duration={{ show:2000 }}\n                    >\n                        <div>\n                            <Particles\n                                className={'particles'}\n                                params={{\n                                    \"particles\": {\n                                        \"number\": {\n                                            \"value\": 40\n                                        },\n                                        \"size\": {\n                                            \"value\": 3\n                                        }\n                                    }\n                                }} />\n                        </div>\n                    </Transition>\n                <Container>\n                    <Grid columns={1} >\n                        <Grid.Row verticalAlign='middle' className={'welcome-box'} >\n                            <Grid.Column textAlign={'center'} >\n                                <div className=\"introName\">\n                                <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n                                    {this.props.applicationDetails.title}\n                                </SplitText>\n                                </div>\n                                <div className=\"sloganText\">\n                                    <Transition\n                                        unmountOnHide={false}\n                                        visible={this.props.sloganText}\n                                        animation={\"fade up\"}\n                                        duration={{ show:1000 }}\n                                    >\n                                        <div>\n                                            {this.props.applicationDetails.sub_title}\n                                        </div>\n                                    </Transition>\n                                </div>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Transition\n                            unmountOnHide={false}\n                            visible={this.props.sloganText}\n                            animation={\"fade down\"}\n                            duration={{ show:800 }}\n                        >\n                        <Grid.Row>\n                            <Grid.Column>\n                                {this.renderMenu()}\n                            </Grid.Column>\n                        </Grid.Row>\n                        </Transition>\n                    </Grid>\n                </Container>\n                </div>\n                <Transition\n                    unmountOnHide={false}\n                    visible={this.props.sloganText}\n                    animation={\"fade up\"}\n                    duration={{ show:1000 }}\n                >\n                <div className={'page-section'}>\n                    <Container>\n                        {this.props.activePageContent}\n                    </Container>\n                </div>\n                </Transition>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default App","export const baseUrl='http://165.22.196.58:8080/keygenes/';\nexport const projectName='KeyGenes';\n","import axios from 'axios'\nimport {baseUrl} from \"../config\";\n\nexport default axios.create({\n   'baseURL': baseUrl\n});\n\n","export const configError = {\n    FAILED_CONFIG: \"application configuration could not be received from API\"\n};\n\nexport const moduleError = {\n    INVALID_MODULE: \"config item is assigned to an unknown module\",\n    INVALID_MODULE_ATTRS: `module config does not contain the required attrs`,\n    INVALID_MODULE_REF: \"reference alias doesn't refer to an item\",\n};\n","import _ from \"lodash\";\nimport {moduleError} from '../constants/errorTypes'\n\nexport const getOnlyPublished = (data) =>{\n\n    return _.values(_.filter(\n        data, function(item){ return item.status === 'published' || item.published === 'published' })\n    );\n};\n\nexport const validateAttributes = (obj, required_attributes) =>{\n    return (required_attributes.every(key => Object.keys(obj).includes(key)))\n};\n\nexport const validateReferenceAlias = (key, obj)=>{\n    return obj.hasOwnProperty(key)\n};\n\nexport class throwError{\n    static config = (message) =>{\n        console.error( `Configuration error -  ${message}`);\n    };\n    static module = (message) =>{\n        console.error( `Module error -  ${message}`);\n    };\n    static moduleAttr = (module, attrs) =>{\n        console.error( `Module error -  ${module} ${moduleError.INVALID_MODULE_ATTRS}: ${attrs}`);\n    };\n}","export const config = {\n    GET_CONFIG: \"GET_CONFIG\",\n    SET_CONFIG: \"SET_CONFIG\"\n};\n\nexport const collections = {\n    ADD_COLLECTION: \"ADD_COLLECTION\"\n};\n\nexport const protocol ={\n    PROTOCOL_COMPLETED:'PROTOCOL_COMPLETED',\n    PROTOCOL_FAILED :'PROTOCOL_FAILED',\n};\n\nexport const application ={\n    GET_APPLICATION_DONE: \"GET_APPLICATION_DONE\",\n    GET_APPLICATION_FAILED: \"GET_APPLICATION_FAILED\"\n};\n\nexport const modules ={\n    geneFinder: {\n        GET_SUGGESTIONS: \"GET_SUGGESTIONS\",\n        SET_ACTIVE_GENE: \"SET_ACTIVE_GENE\",\n        GET_GENE_COUNTS: \"GET_GENE_COUNTS\",\n        SET_ACTIVE_TISSUE: \"SET_ACTIVE_TISSUE\",\n        SET_ACTIVE_STAGE: \"SET_ACTIVE_STAGE\"\n    }\n\n};","export const required = value => value ? undefined : 'Required';\nexport const minValueChar = min => value => value.length && value.length < min ? `Must be at least ${min} characters` : undefined;\nexport const minValue5 = minValueChar(5);\nexport const email = value =>value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;","import React from 'react'\nimport {Button, Grid, Icon, Label} from \"semantic-ui-react\";\nimport {throwError} from \"../../utils/generalHelpers\";\n\n\nconst ButtonModule = (props) =>{\n    switch(props.setting.config.type) {\n        case 'github':\n            return(\n                <Grid.Row>\n                    <Grid.Column textAlign={'center'}>\n                        <a href={props.setting.config.config.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Button as='div' labelPosition='right'>\n                            <Button color='blue'>\n                                <Icon name='github' />\n                                GitHub\n                            </Button>\n                            <Label basic  pointing='left'>\n                                {props.setting.config.config.label}\n                            </Label>\n                        </Button>\n                        </a>\n                    </Grid.Column>\n                </Grid.Row>\n            );\n        case 'download':\n            return(\n                <Grid.Row>\n                    <Grid.Column textAlign={'center'}>\n                        <a href={props.setting.config.config.link} download target={'_blank'}>\n                        <Button icon labelPosition='left'>\n                            <Icon name='cloud' />\n                            {props.setting.config.config.label}\n                        </Button>\n                        </a>\n                    </Grid.Column>\n                </Grid.Row>\n            );\n        default:\n            throwError.module(`Button not rendered, type: ${props.moduleName} not found`);\n            return null;\n    }\n};\n\nexport default ButtonModule","import React from 'react'\nimport Parser from \"html-react-parser\";\nimport _ from 'lodash'\nimport {Grid, Header} from \"semantic-ui-react\";\nimport {throwError} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\nimport {validateAttributes, validateReferenceAlias} from \"../../utils/generalHelpers\"\n\nconst module = 'content';\nconst required_attributes = ['reference_alias', 'content'];\n\nconst getTitle = (title, size='h2') =>{\n    if(!title){\n        return null\n    }\n    return(\n        <Grid.Row>\n            <Grid.Column >\n                <Header as={size}>\n                    {title}\n                </Header>\n            </Grid.Column>\n        </Grid.Row>\n    )\n};\n\nconst ContentModule = (props) =>{\n    if (props.collection){\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        const pointer_set = _.keyBy(props.collection, 'reference_alias');\n        if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n            throwError.module(moduleError.INVALID_MODULE_REF);return null}\n        return (\n            <>\n            {getTitle(pointer_set[props.setting.alias_ref].title)}\n            <Grid.Row>\n                <Grid.Column>\n                {Parser(pointer_set[props.setting.alias_ref].content)}\n                </Grid.Column>\n            </Grid.Row>\n            </>\n        )\n    }\n    return null\n\n};\n\nexport default ContentModule","import React from 'react'\nimport {Grid} from \"semantic-ui-react\";\nimport Timeline from \"react-timeline-semantic-ui\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst module = 'tool_steps';\nconst required_attributes = ['icon', 'title', 'step_name', 'description', 'tags'];\n\n\nconst ToolStepModule = (props) =>{\n    if (props.collection){\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column className={'timeLine'}>\n                    {props.collection.map(\n                        (item, key) =>{\n                            let dir = ((key + 1)%2 === 1)?'left': 'right';\n                            return(\n                                <Timeline\n                                    key={`timelineItem-${key}`}\n                                    className={'time-item'}\n                                    direction={dir}\n                                    icon={item.icon}\n                                    title={item.title}\n                                    time={`${key+1} ${item.step_name}`}\n                                    description={item.description}\n                                    color=\"blue\"\n                                    tags={item.tags}\n                                    lineHeight={key}\n                                />\n                            )\n                        }\n                    )}\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default ToolStepModule","import React from 'react'\nimport _ from 'lodash'\nimport {Grid, Header, Icon, Image} from \"semantic-ui-react\";\nimport {List} from \"semantic-ui-react\";\nimport {throwError, validateAttributes, validateReferenceAlias} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\n\nconst getTitle = (title, size='h2') =>{\n    if(!title){\n        return null\n    }\n    return(\n        <Grid.Row>\n            <Grid.Column >\n                <Header as={size}>\n                    {title}\n                </Header>\n            </Grid.Column>\n        </Grid.Row>\n    )\n};\nconst ListModule = (props) =>{\n    if (props.collection){\n        switch (props.setting.config.type) {\n            case 'icon-list':\n                return renderIconList(props);\n            case 'download-list':\n                return renderDownloadList(props);\n            default:\n                return null\n        }\n    }\n    return null\n\n};\nconst renderIconList = (props) => {\n    const module = 'tool_steps';\n    const required_attributes = ['icon', 'title', 'description'];\n    if (!validateAttributes(props.collection[0], required_attributes)){\n        throwError.moduleAttr(module, required_attributes);return null}\n    const pointer_set = _.keyBy(props.collection, 'reference_alias');\n    if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n        throwError.module(moduleError.INVALID_MODULE_REF);return null}\n\n    return (\n        <>\n            {getTitle(props.setting.title)}\n            <Grid.Row>\n                <Grid.Column >\n                    <List divided relaxed>\n                        {props.collection.map(\n                            (item, key) => {\n                                return (\n                                    <List.Item key={`list-icon-${key}-${props.setting.collection}`}>\n                                        <List.Icon name={item.icon} size='large' verticalAlign='top' />\n                                        <List.Content>\n                                            <List.Header as='a'>{item.title}</List.Header>\n                                            <List.Description as='a'>{item.description}</List.Description>\n                                        </List.Content>\n                                    </List.Item>\n                                )\n                            }\n                        )}\n                    </List>\n                </Grid.Column>\n            </Grid.Row>\n        </>\n    );\n};\nconst renderDownloadList = (props) =>{\n    const module = 'tool_steps';\n    const required_attributes = ['link', 'title', 'description'];\n    if (!validateAttributes(props.collection[0].items[0], required_attributes)){\n        throwError.moduleAttr(module, required_attributes);return null}\n    const pointer_set = _.keyBy(props.collection, 'reference_alias');\n    if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n        throwError.module(moduleError.INVALID_MODULE_REF);return null}\n    return (\n        <Grid.Row>\n            <Grid.Column>\n                {getTitle(props.setting.title, 'h3')}\n                <List >\n                    {pointer_set[props.alias_ref].items.map(\n                        (item, key) => {\n                            return (\n                                <List.Item key={`download-list-${key}`}>\n                                    <Image avatar>\n                                        <a href={item.link} download>\n                                            <Icon avatar={'true'} circular inverted name='download' />\n                                        </a>\n                                    </Image>\n                                    <List.Content>\n                                        <List.Header>{item.title}</List.Header>\n                                        {item.description}\n                                    </List.Content>\n                                </List.Item>\n                            )\n                        }\n                    )}\n                </List>\n            </Grid.Column>\n        </Grid.Row>\n    );\n}\n\nexport default ListModule","import React from 'react'\nimport {Grid} from \"semantic-ui-react\";\nimport Parser from \"html-react-parser\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst FaqModule = (props) =>{\n    if (props.collection){\n        let module = 'faqs';\n        let required_attributes = ['question', 'answer'];\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column>\n                    {props.collection.map(\n                        (item, key) =>{\n\n                            return (\n                                <div key={`question-answer-${key}`}>\n                                    <p><b>Q: {item.question}</b></p>\n                                    {Parser(item.answer)}\n                                    <br/>\n                                </div>\n                            )\n                        }\n                    )}\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default FaqModule","import React from 'react'\nimport {Grid, Icon, Image} from \"semantic-ui-react\";\nimport {Card} from \"semantic-ui-react\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst checkImage = (cardData) =>{\n    try{\n        return cardData.image.data.full_url\n    }\n    catch (e) {\n        return 'https://via.placeholder.com/150'\n    }\n};\nconst renderCard =  (cardData ,key) =>{\n    return (\n        <Card key={`contact-card-${key}`}>\n            <Image src={checkImage(cardData)} wrapped ui={false} />\n            <Card.Content>\n                <Card.Header>{cardData.name}</Card.Header>\n                <Card.Meta>\n                    <span className='date'>\n                        Joined in {cardData.year_joined}{cardData.year_left? \", left in \"+cardData.year_left:\"\"}\n                    </span>\n                </Card.Meta>\n                <Card.Description>\n                    {cardData.job_description}\n                </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                    <Icon name='mail' />\n                    {cardData.email}\n            </Card.Content>\n        </Card>\n    )\n};\n\nconst ContactCardsModule = (props) =>{\n    if (props.collection){\n        let module = 'contact-cards';\n        let required_attributes = ['name', 'job_description', 'year_joined'];\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column>\n                    <Card.Group textAlign={'center'} itemsPerRow={3}>\n                        {props.collection.map(\n                            (item, key) =>{\n                                return renderCard(item, key)\n                            }\n                        )}\n                    </Card.Group>\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default ContactCardsModule","import React from 'react'\nimport {Form, Input} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) =>{\n    if(touched && error){\n        return(\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\nexport default (input, label, meta, inputAttr) =>{\n    return(\n        <Form.Field>\n            <label>{label}</label>\n            <Input {...input}  {...inputAttr} autoComplete='off' />\n            {renderError(meta)}\n        </Form.Field>\n    )\n};\n\n","import React from 'react'\nimport {Form, Input} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) =>{\n    if(touched && error){\n        return(\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\n\nexport default  ({ input: {value: omitValue, ...inputProps }, meta: omitMeta, ...props }) =>{\n    return(\n        <Form.Field>\n            <label>{props.label}</label>\n            <Input\n                type={'file'}\n                {...inputProps}\n                {...props.input}\n                autoComplete='off' />\n            {renderError(omitMeta)}\n        </Form.Field>\n    )\n};\n","import React from 'react'\nimport {Dropdown, Form} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) => {\n    if (touched && error) {\n        return (\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\nexport default (input, label, meta, inputAttr) => {\n    return (\n        <Form.Field>\n            <label>{label}</label>\n            <Dropdown selection {...input}\n                      {...inputAttr}\n                      value={input.value}\n                      onChange={(param, data) => input.onChange(data.value)}\n                      placeholder={label}\n            />\n            {renderError(meta)}\n        </Form.Field>\n    )\n};\n\n","import checkBox from './checkBoxInput'\nimport text from './textInput'\nimport file from './fileInput'\nimport slider from \"./sliderInput\";\nimport select from \"./selectInput\";\n\nexport const textInput = ({input,label,meta,inputAttr}) => text(input,label,meta,inputAttr);\nexport const fileInput = (props) => file(props);\nexport const selectInput = ({input,label,meta,inputAttr}) => select(input,label,meta,inputAttr);\nexport const checkBoxInput = ({input,label,meta,inputAttr={}}) => checkBox(input,label,meta,inputAttr);\nexport const sliderInput = ({input,label,meta,inputAttr={}}) => slider(input,label,meta,inputAttr);\n","import React, {Component} from 'react'\nimport {Button, Form, Grid, Icon, Segment, Transition} from \"semantic-ui-react\";\nimport {Field, reduxForm, reset} from \"redux-form\";\nimport {required} from \"../../constants/formValidationRules\";\nimport {fileInput, selectInput, textInput} from \"../helpers/redux-form-inputs\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\nimport {protocol} from \"../../constants/types\";\n\nclass FormModule extends Component{\n\n    state = {fileInputCode: 'fileCode'};\n    onSubmit = (formValues, dispatch) =>{\n        this.props.onSubmit(\n            this.props.collection['form'][0],\n            formValues\n        );\n        dispatch(reset('mainForm'));\n        this.setState({fileInputCode: Math.random().toString(36).substring(7)})\n    };\n    renderForm(){\n        if(this.props.collection['inputs'].length < 1){\n            return <b><i>Form under construction!</i></b>\n        }else{\n            return (\n                <div>\n                    {this.renderInputs()}\n                    <Button type={'submit'} icon labelPosition='left' size='large'  floated='right'>\n                        <Icon name='paper plane' />\n                        Run!\n                    </Button>\n                </div>\n            )\n        }\n    }\n    renderInputType = (input, key) => {\n        switch (input.input_type.type) {\n            case 'text':\n                return (\n                    <Field\n                        key={`field-input-${key}`}\n                        name={input.api_reference_parameter}\n                        component={textInput}\n                        validate={[ required ]}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`,\n                            type:'text',\n                        }}\n                    />\n                );\n            case 'file':\n                return (\n                    <Field\n                        key={`field-input-${key}-${this.state.fileInputCode}`}\n                        name={input.api_reference_parameter}\n                        component={fileInput}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`\n                        }}\n                    />\n                );\n            case 'select':\n                const options = this.createOptions(key, input.option_titles, input.option_values);\n                return (\n                    <Field\n                        key={`field-input-${key}`}\n                        name={input.api_reference_parameter}\n                        component={selectInput}\n                        validate={[ required ]}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`,\n                            options: options}\n\n                        }\n                    />\n                );\n            default:\n                return null\n\n        }\n    };\n    createOptions = (index, titles, values) => {\n        const options = [];\n        titles.forEach(\n            (title, key) =>{\n                options.push({\n                    'key': `optionItem-${index}-${key}`,\n                    'text': titles[key],\n                    'value': values[key]\n                })\n            }\n        );\n        return options\n    };\n    renderInputs(){\n        return this.props.collection['inputs'].map(\n            (input, key) => this.renderInputType(input, key)\n        )\n    }\n\n    render() {\n        if(!this.props.collection['inputs']){\n            return null\n        }\n        let module = 'form:form';\n        let required_attributes = ['title', 'api', 'tool_reference', 'description'];\n        if (!validateAttributes(this.props.collection['form'][0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        module = 'form:inputs';\n        required_attributes = ['api_reference_parameter', 'label', 'input_type'];\n        if (!validateAttributes(this.props.collection['inputs'][0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return(\n                <Grid.Row>\n                    <Grid.Column>\n                        {(this.props.protocolStatus === protocol.PROTOCOL_COMPLETED)?(\n                            <Transition\n                                transitionOnMount={true}\n                                animation={\"slide down\"}\n                                duration={{ show:1000 }}\n                            >\n                                <Segment color={'green'}>\n                                    <b>Algorithm executed!</b> Dataset will be in your mail when ready\n                                </Segment>\n                            </Transition>\n                        ):''\n                        }\n                        {(this.props.protocolStatus === protocol.PROTOCOL_FAILED)?(\n                            <Transition\n                                transitionOnMount={true}\n                                animation={\"slide down\"}\n                                duration={{ show:1000 }}\n                            >\n                                <Segment color={'red'}>\n                                    <b>Algorithm encountered an error!</b> please make sure the configuration is setup correctly\n                                </Segment>\n                            </Transition>\n                        ):''\n                        }\n                        <h3>Configuration</h3>\n                        <Form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                            {this.renderForm()}\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n        )\n    }\n\n}\nexport default reduxForm({\n    form:'mainForm'\n})(FormModule)","import React, {Component} from 'react'\nimport {\n    Button,\n    Card,\n    Container,\n    Dimmer,\n    Form,\n    Grid,\n    Header,\n    Icon,\n    Image,\n    Loader,\n    Search,\n    Segment\n} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport Plot from '../../../../node_modules/react-plotly.js/react-plotly';\n\n\nconst initialState = {isLoading: false, value: '', selected: false, tissues: [], stages: [], graphSetting:'all'}\n\nclass GeneFinder extends Component {\n    state = initialState;\n\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        this.setState({tissues: _.chain(this.props.collection.tissue).keyBy('id').mapValues('name').value()})\n        this.setState({stages: _.chain(this.props.collection.stage).keyBy('id').mapValues('name').value()})\n    }\n\n    mapTissues = (tissues) =>{\n        return tissues.map((item) =>{\n            return this.state.tissues[item]\n        })\n    }\n    generatePlotTraces = (data) => {\n        if(this.state.graphSetting === 'sex')\n            return []\n        const plotTraces = [];\n        const stage_groups = _.groupBy(data, 'stage')\n        const stages = this.state.stages;\n        Object.keys(stage_groups).forEach( (key) => {\n            let items = _.remove(stage_groups[key], function (currentObject) {\n                return currentObject.count !== \"nan\";\n            });\n            const trace = {\n                x: this.mapTissues(_.map(items, 'tissue')),\n                y: _.map(items, 'CPM'),\n                mode: 'markers',\n                type: 'scatter',\n                name: stages[key],\n                opacity: 0.5,\n                marker: {\n                    size: 20\n                }\n            };\n            plotTraces.push(trace)\n        });\n        return plotTraces\n    }\n    generateSexPlotTraces = (data) => {\n        if(this.state.graphSetting === 'stage')\n            return []\n        const plotTraces = [];\n        const sex_groups = _.groupBy(data, 'sex')\n        const stages = {'F': 'Female', 'M': 'Male'};\n        Object.keys(sex_groups).forEach( (key) => {\n            let items = _.remove(sex_groups[key], function (currentObject) {\n                return currentObject.count !== \"nan\";\n            });\n            const trace = {\n                x: this.mapTissues(_.map(items, 'tissue')),\n                y: _.map(items, 'CPM'),\n                mode: 'markers',\n                type: 'scatter',\n                name: stages[key],\n                opacity: (this.state.graphSetting === 'all')?0.1:0.5,\n                marker: {\n                    symbol:1,\n                    size: (this.state.graphSetting === 'all')?40:20\n                }\n            };\n            plotTraces.push(trace)\n        });\n        return plotTraces\n    }\n    setGraph = (name) =>{\n        this.setState({graphSetting: name})\n    }\n    renderGraph() {\n        if (this.props.moduleData.geneCounts.length > 0) {\n            const plotTraces = this.generatePlotTraces(this.props.moduleData.geneCounts)\n            const plotTracesSex = this.generateSexPlotTraces(this.props.moduleData.geneCounts)\n            return (\n                <>\n                    <center>\n                    <Button.Group>\n                        <Button active={(this.state.graphSetting === 'stage')} onClick={() => this.setGraph('stage')}>stages</Button>\n                        <Button active={(this.state.graphSetting === 'sex')} onClick={() => this.setGraph('sex')}>sex</Button>\n                        <Button active={(this.state.graphSetting === 'all')} onClick={() => this.setGraph('all')}>all</Button>\n                    </Button.Group>\n                    </center>\n                <Plot\n                    className={'full-size large'}\n                    data={[...plotTracesSex, ...plotTraces]}\n                    layout={{\n                        showlegend: true,\n                        height: 600, hovermode: 'closest',\n                        title: `Expression in ${this.props.moduleData.activeGene.ensg}\\ \n${this.props.moduleData.activeGene.symbol ? ` (${this.props.moduleData.activeGene.symbol})` : ''}\\\n${this.props.moduleData.activeGene.description ? ` - ${this.props.moduleData.activeGene.description}` : ''}`,\n                        yaxis:{\n                            title: \"Counts per million (CPM)\"\n                        }\n                    }}\n                />\n                </>\n            )\n        } else if (this.state.selected) {\n            return (\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Preparing expression data...'/>\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png'/>\n                    </Segment>\n                </div>\n            )\n        }\n        return null\n    }\n\n    handleResultSelect = (e, {result}) => {\n        this.props.setGene(result)\n        this.setState({value: result.ensg, selected: true})\n        this.props.getGeneCounts(result.id)\n    }\n    handleSearchChange = (event) => {\n        this.props.getGeneSuggestions(event.target.value);\n        this.setState({value: event.target.value, selected: false})\n    }\n    render() {\n        const {isLoading, value, tissues, stages} = this.state;\n        if (tissues.length < 1 || stages.length < 1) {\n            return (\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Loading'/>\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png'/>\n                    </Segment>\n                </div>\n            )\n        }\n        return (\n            <Grid>\n                <Grid.Row centered>\n                    <Grid.Column width={8}>\n                        <Form>\n                            <Form.Field>\n                                <label>Search using the gene symbol,ensembl id or gene description</label>\n                                <Search\n                                    loading={isLoading}\n                                    onResultSelect={this.handleResultSelect}\n                                    onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                                        leading: true,\n                                    })}\n                                    results={this.props.moduleData.suggestions}\n                                    value={value}\n                                    {...this.props}\n                                />\n                            </Form.Field>\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row centered>\n                    <Grid.Column width={16}>\n                        <center>\n                        {this.renderGraph()}\n                        </center>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        )\n    }\n\n}\n\nexport default GeneFinder;","import React, {Component} from 'react'\nimport {\n    Button,\n    Card,\n    Container,\n    Dimmer, Dropdown,\n    Form,\n    Grid,\n    Header,\n    Icon,\n    Image, Input,\n    Loader,\n    Search,\n    Segment, Table\n} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport Plot from '../../../../node_modules/react-plotly.js/react-plotly';\nimport SmartDataTable from \"react-smart-data-table\";\nimport FileSaver from 'file-saver'\nimport CsvDownload from 'react-json-to-csv'\n\nconst stages = [\n    {\n        key: 1,\n        text: 'all',\n        value: -1\n    },\n    {\n        key: 2,\n        text: 'adult',\n        value: 1\n    },\n    {\n        key: 3,\n        text: 'fetal',\n        value: 0\n    },\n]\n\nconst initialState = {stages: [], options: [], searchTerm: '', downloadData: [], stageOptions: stages, stageActive: -1, stageName: 'all'}\n\nclass TissueFinder extends Component {\n\n    state = initialState;\n\n    componentDidMount() {\n        this.setState({stages: _.chain(this.props.collection.stage).\n            keyBy('id').\n            mapValues('name').value()})\n        this.setState({\n            options: _.map(this.props.collection.tissue, (state) => ({\n                key: state.id,\n                text: state.name,\n                value: state.id,\n            }))\n        })\n    }\n\n    setActiveTissue = (e, data) => {\n        this.props.setTissue({id: data.value, text: e.target.innerText}, this.state.stageActive)\n    }\n    generatePlotTraces = (data, genes) => {\n        data = _.map(data, (item) => {\n            if (genes.includes(item.symbol)) return item\n        })\n        data = _.compact(data)\n        const plotTraces = [];\n        const stage_groups = _.groupBy(data, 'stage')\n        const stages = this.state.stages;\n        Object.keys(stage_groups).forEach(function (key) {\n            let items = _.remove(stage_groups[key], function (currentObject) {\n                return currentObject.count !== \"nan\";\n            });\n            const trace = {\n                x: _.map(items, 'symbol'),\n                y: _.map(items, 'CPM'),\n                mode: 'markers',\n                type: 'scatter',\n                name: stages[key],\n                opacity: 0.5,\n                marker: {\n                    size: 20\n                }\n            };\n            plotTraces.push(trace)\n        });\n        return plotTraces\n    }\n\n    renderGraph() {\n        if (this.props.moduleData.tissueCounts.length > 0) {\n            let genes = _.map(this.props.moduleData.tissueGenes, (gene, index) => {\n                if (index < 20) {\n                    return gene.symbol\n                }\n                return null\n            })\n            genes = _.compact(genes)\n            const plotTraces = this.generatePlotTraces(this.props.moduleData.tissueCounts, genes)\n            return (\n                <>\n                    <Header as='h3' dividing>\n                        Top 20 expressed genes in {this.state.stageName} {this.props.moduleData.activeTissue.text} tissue\n                    </Header>\n                    <center>\n                        <Plot\n                            className={'full-size large'}\n                            data={plotTraces}\n                            layout={{\n                                showlegend: true,\n                                height: 600, hovermode: 'closest',\n                                xaxis: {\n                                    categoryorder: \"array\",\n                                    categoryarray: _.values(genes)\n                                },\n                                yaxis:{\n                                    title: \"Counts per million (CPM)\"\n                                }\n                            }}\n                        />\n                    </center>\n                </>\n            )\n        } else if (this.state.selected) {\n            return (\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Preparing transcription data...'/>\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png'/>\n                    </Segment>\n                </div>\n            )\n        }else if (this.props.moduleData.geneCounts.length === 0 && this.props.moduleData.activeTissue != ''){\n            return <div><center><b>No gene expression found!</b></center></div>\n        }\n        return null\n    }\n\n    renderTableContent = () => {\n        const content = this.props.moduleData.tissueGenes.map(\n            (gene, index) => {\n                if (!(gene.ensg.includes(this.state.searchTerm)\n                    || gene.symbol.includes(this.state.searchTerm)\n                    || gene.description.includes(this.state.searchTerm))) return null\n                return (\n                    <Table.Row key={`tissueItem-${index}`}>\n                        <Table.Cell>{index + 1}</Table.Cell>\n                        <Table.Cell>\n                            <a\n                                className={'tableLink'}\n                                href={`https://www.ensembl.org/Homo_sapiens/Gene/Summary?db=core;g=${gene.ensg}`}\n                                target={'_blank'}\n                            >\n                                {gene.ensg}\n                            </a>\n                        </Table.Cell>\n                        <Table.Cell>{gene.symbol}</Table.Cell>\n                        <Table.Cell>{gene.description}</Table.Cell>\n                        <Table.Cell>{gene.CPM_avg}</Table.Cell>\n                    </Table.Row>\n                )\n            }\n        )\n        return _.compact(content)\n    }\n    setActiveStage = (e, data) =>{\n        this.setState({stageActive: data.value})\n        this.setState({stageName: e.target.innerText})\n        if(this.props.moduleData.activeTissue.id != ''){\n            this.props.setTissue(this.props.moduleData.activeTissue, data.value)\n        }\n    }\n    filterGeneResults = (e) => {\n        this.setState({searchTerm: e.target.value})\n    }\n\n    renderTable() {\n        if (!this.props.moduleData.tissueGenes.length > 0) {\n            return null\n        }\n        return (\n            <>\n                <Header as='h3' dividing>\n                    Top 100 expressed genes in {this.state.stageName} {this.props.moduleData.activeTissue.text} tissue\n                </Header>\n                <Form>\n                    <Form.Group>\n                        <Form.Field\n                            width={10}\n                        >\n                            <Input onChange={this.filterGeneResults} action={{icon: 'search'}} placeholder='Search...'/>\n                        </Form.Field>\n                        <Form.Field\n                            width={3}\n                        >\n                            <CsvDownload\n                                filename={`KeyGenes-${this.props.moduleData.activeTissue.text}-tissue.csv`}\n                                data={this.renderDownloadData()}\n                                className=\" primary ui labeled icon button\" >\n                                <i className=\"file icon right\"></i>\n                                Save table (.CSV)\n                            </CsvDownload>\n                        </Form.Field>\n                    </Form.Group>\n                </Form>\n                <Table basic>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>#</Table.HeaderCell>\n                            <Table.HeaderCell>ENSG</Table.HeaderCell>\n                            <Table.HeaderCell>Symbol</Table.HeaderCell>\n                            <Table.HeaderCell>Description</Table.HeaderCell>\n                            <Table.HeaderCell>Average CPM</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {this.renderTableContent()}\n                    </Table.Body>\n                </Table>\n            </>\n        )\n    }\n    renderDownloadData = () =>{\n        return _.compact(_.map(this.props.moduleData.tissueGenes, (\n            (gene) => ({\n                ENSG: gene.ensg,\n                Symbol: gene.symbol,\n                AVG_count: gene.count_avg,\n                Description: gene.description\n\n            })\n        )))\n    }\n    render() {\n        const active = this.props.moduleData.activeTissue.id\n        return (\n            <Grid>\n                <Grid.Row centered>\n                    <Grid.Column width={8}>\n                        <Form>\n                            <Form.Field>\n                                <label>Select a development stage</label>\n                                <Dropdown value={this.state.stageActive} placeholder='Stage' search selection\n                                          options={this.state.stageOptions}\n                                          onChange={this.setActiveStage}\n                                          />\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Select a tissue</label>\n                                <Dropdown value={active} placeholder='Tissue' search selection\n                                          options={this.state.options}\n                                          onChange={this.setActiveTissue}/>\n                            </Form.Field>\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row centered>\n                    <Grid.Column width={16}>\n                        {this.renderGraph()}\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={16}>\n                        {this.renderTable()}\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        )\n    }\n}\n\nexport default TissueFinder;","import React, {Component} from 'react'\nimport {Grid, Tab} from 'semantic-ui-react'\nimport GeneFinder from \"./GeneFinder\";\nimport TissueFinder from \"./TissueFinder\";\nimport ModuleLoader from \"../moduleLoader\";\n\nclass GeneBrowser extends Component {\n    panes = [\n        {\n            menuItem: { key: 'genefinder', icon: 'dna', content: 'Search a gene' },\n            render: () => (\n                <Tab.Pane attached={false}>\n                    <GeneFinder\n                        collection={this.props.collection}\n                        moduleData={this.props.moduleData}\n                        getGeneSuggestions={this.props.getGeneSuggestions}\n                        setGene={this.props.setGene}\n                        setting={this.props.setting}\n                        getGeneCounts={this.props.getGeneCounts}\n                    />\n            </Tab.Pane>)\n        },\n        {\n            menuItem: { key: 'tissueFinder', icon: 'heart', content: 'View tissues' },\n            render: () => <Tab.Pane attached={false}>\n                <TissueFinder\n                    collection={this.props.collection}\n                    setTissue={this.props.setTissue}\n                    moduleData={this.props.moduleData}\n                />\n            </Tab.Pane>,\n        },\n    ];\n\n    render() {\n        return (\n            <Grid.Column width={16}>\n                <Tab\n                    menu={{secondary: true, pointing: true}}\n                    panes={this.panes}\n                />\n            </Grid.Column>\n        )\n    }\n}\n\nexport default GeneBrowser\n","import React from 'react'\n\nimport ButtonModule from './ButtonModule'\nimport ContentModule from './ContentModule'\nimport ToolStepModule from './ToolStepsModule'\nimport ListModule from \"./ListModule\";\nimport FaqModule from \"./FaqModule\";\nimport ContactCardsModule from \"./ContactCardsModule\";\nimport FormModule from \"./FormModule\";\nimport {throwError} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\nimport GeneFinder from \"./GeneBrowserModule/GeneFinder\";\nimport GeneBrowserModule from \"./GeneBrowserModule\";\nimport Page from \"../Page\";\n\nconst ModuleLoader = (props) =>  {\n    switch(props.setting.module) {\n        case 'content':\n            return (\n                <ContentModule\n                    setting={props.setting}\n                    collection={props.collection}\n                />\n            );\n        case 'button':\n            return (\n                <ButtonModule\n                    setting={props.setting}\n                />\n            );\n        case 'tool_steps':\n            return (\n                <ToolStepModule\n                    collection={props.collection}\n                />\n            );\n        case 'list':\n            return(\n                <ListModule\n                    alias_ref={props.setting.alias_ref}\n                    setting={props.setting}\n                    collection={props.collection}\n                />\n            );\n        case 'faqs':\n            return (\n                <FaqModule\n                    collection={props.collection}\n                />\n            );\n        case 'contact-cards':\n            return(\n                <ContactCardsModule\n                    collection={props.collection}\n                />\n            );\n        case 'form':\n            return(\n                <FormModule\n                    onSubmit={props.onSubmit}\n                    collection={props.collection}\n                    protocolStatus={props.protocolStatus}\n                />\n            );\n        case 'transcript-finder':\n            return (\n                <GeneBrowserModule\n                    collection={props.collection}\n                    moduleData={props.modulesData.geneFinder}\n                    getGeneSuggestions={props.getGeneSuggestions}\n                    setTissue={props.setTissue}\n                    setGene={props.setGene}\n                    setting={props.setting}\n                    getGeneCounts={props.getGeneCounts}\n                />\n            )\n        default:\n            throwError.module(moduleError.INVALID_MODULE);\n            return null\n    }\n};\n\nexport default ModuleLoader","\nimport React, {Component} from 'react'\nimport ModuleLoader from './modules/moduleLoader'\nimport {Grid, Header} from \"semantic-ui-react\";\nimport {setTissue} from \"../actions/modules/geneFinderActions\";\n\nclass Page extends Component{\n\n    getCollection (collection){\n        if (!collection){\n            return null\n        }\n        if (collection in this.props.collections){\n            return this.props.collections[collection]\n        }\n        else{\n            return null\n        }\n    }\n    renderModules(){\n        return this.props.config.settings.map(\n            (setting, key) =>{\n                if (setting.module === 'form'){\n                    return(\n                        <ModuleLoader\n                            getGeneSuggestions={this.props.getGeneSuggestions}\n                            getGeneCounts={this.props.getGeneCounts}\n                            onSubmit={this.props.onSubmit}\n                            page={this.props.config.name}\n                            key={`module-${this.props.config.reference}-${key}`}\n                            collection={{\n                                'form': this.getCollection(setting.collection),\n                                'inputs': this.getCollection('inputs')\n                            }}\n                            setting={setting}\n                            protocolStatus={this.props.protocolStatus}\n                        />\n                    )\n                }\n                if(setting.module === 'transcript-finder'){\n                    return (\n                        <ModuleLoader\n                            setTissue={this.props.setTissue}\n                            modulesData={this.props.modulesData}\n                            setGene={this.props.setGene}\n                            getGeneSuggestions={this.props.getGeneSuggestions}\n                            getGeneCounts={this.props.getGeneCounts}\n                            page={this.props.config.name}\n                            key={`module-${this.props.config.reference}-${key}`}\n                            collection={{\n                                'tissue': this.getCollection('tissue'),\n                                'stage': this.getCollection('stage')\n                            }}\n                            setting={setting}\n                        />\n                    )\n                }\n                return (\n                    <ModuleLoader\n                        modulesData={this.props.modulesData}\n                        setGene={this.props.setGene}\n                        getGeneSuggestions={this.props.getGeneSuggestions}\n                        getGeneCounts={this.props.getGeneCounts}\n                        page={this.props.config.name}\n                        key={`module-${this.props.config.reference}-${key}`}\n                        collection={this.getCollection(setting.collection)}\n                        setting={setting}\n                    />\n                )\n            }\n        )\n    }\n    render() {\n        if (!this.props.path){\n            return null\n        }\n        return (\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Header as='h1' dividing>\n                            {this.props.config.name}\n                        </Header>\n                    </Grid.Column>\n                </Grid.Row>\n                {this.renderModules()}\n            </Grid>\n        )\n    }\n\n}\nexport  default  Page;","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\n\nimport App from \"../components/App\";\nimport {Dimmer, Icon, Loader, Segment} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport 'fs'\nimport history from '../history'\n\nimport {getConfig, getApplication} from '../actions/configActions'\nimport {getCollections} from '../actions/collectionActions'\nimport {Route, Router, Switch} from \"react-router-dom\";\nimport Page from \"../components/Page\";\nimport {directProtocol} from '../actions/protocols/directProtocolActions'\n\n\n\nimport {projectName, baseUrl} from \"../config.js\";\nimport {throwError} from \"../utils/generalHelpers\";\nimport {configError} from '../constants/errorTypes'\nimport GeneFinder from \"../components/modules/GeneBrowserModule/GeneFinder\";\nimport {getGeneSuggestions, setGene, getGeneCounts, setTissue} from \"../actions/modules/geneFinderActions\";\n\n\nclass AppContainer extends Component {\n\n    state = {\n        menu: [],\n        sloganText: false,\n        pageView: false,\n        render: false,\n        config: false\n    };\n    onSubmit = (config, values) => {\n        switch (config.api.protocol) {\n            case 'direct':\n                this.props.directProtocol(config, values);\n            break;\n            default:\n                console.log('No valid protocol connected to form')\n        }\n    };\n    getCollections = () =>{\n        const collections = [];\n        this.props.config.forEach(\n            (settingItem) => {\n                settingItem.settings.forEach(\n                    (item) =>{\n                        if(item.collection){\n                            if(item.collection === 'form'){\n                                collections.push(item.collection);\n                                collections.push('inputs');\n                            }\n                            collections.push(item.collection)\n                        }\n                        else{\n                            if(item.module === \"transcript-finder\"){\n                                collections.push(\"tissue\")\n                                collections.push(\"stage\")\n                            }\n                        }\n                    }\n                )\n            }\n        );\n        return _.uniq(collections)\n    };\n\n    loadConfig = async () =>{\n        await this.props.getApplication();\n        await this.props.getConfig();\n        const collections = this.getCollections();\n        await this.props.getCollections(collections);\n        this.setState({menu:this.props.config});\n    };\n\n    UNSAFE_componentWillMount(){\n        if(baseUrl !== null){\n            this.setState({config: true});\n        }\n    }\n    componentDidMount() {\n        this.loadConfig();\n        setTimeout(function() {\n            this.setState({render: true})\n        }.bind(this), 2000);\n        setTimeout(\n            () => {\n                this.setState({sloganText: true})\n            }, 1200);\n    }\n    renderRoutes() {\n        return this.props.config.map(\n            (item) =>{\n                return (\n                    <Route\n                        key={`route-${item.reference}`}\n                        path={'/'+item.reference}\n                        exact\n                        render={(props) => this.wrapTransition(\n                            <Page\n                                {...props}\n                                setTissue={this.props.setTissue}\n                                modulesData={this.props.modules}\n                                getGeneSuggestions={this.props.getGeneSuggestions}\n                                setGene={this.props.setGene}\n                                getGeneCounts={this.props.getGeneCounts}\n                                path={'/'+item.reference}\n                                config={item}\n                                collections={this.props.collections}\n                                onSubmit={this.onSubmit}\n                                protocolStatus={this.props.protocolStatus}\n                            />)\n                        }\n                    />\n                )\n            }\n        )\n    }\n    wrapTransition =  (object) => {\n        return object\n    };\n    renderContent() {\n        if(this.props.config.length === 0){\n            return null\n        }\n        return (\n            <Router history={history}>\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        exact\n                        render={(props) => this.wrapTransition(\n                            <Page {...props}\n                                  modulesData={this.props.modules}\n                                  getGeneSuggestions={this.props.getGeneSuggestions}\n                                  setGene={this.props.setGene}\n                                  setTissue={this.props.setTissue}\n                                  getGeneCounts={this.props.getGeneCounts}\n                                  path={'/'+this.props.config[0].reference}\n                                  config={this.props.config[0]}\n                                  collections={this.props.collections}\n                                  protocolStatus={this.props.protocolStatus}\n                                  onSubmit={this.onSubmit}\n                            />)\n                        }\n                    />\n                    {this.renderRoutes()}\n                </Switch>\n            </Router>\n        );\n    }\n    render() {\n        if(this.state.render && !_.isEmpty(this.props.config)) {\n            document\n                .documentElement.style.setProperty(\"--color-primary\", this.props.application.primary_color);\n            return (<App\n                    applicationDetails={this.props.application}\n                    activePageContent={this.renderContent()}\n                    collections={this.props.collections}\n                    config={this.props.config}\n                    menu={this.props.config}\n                    />\n            )\n        }\n        else if(!this.state.render){\n            return (\n                <Segment className={'loading-segment'}>\n                    <Dimmer active>\n                        <Loader indeterminate inline='centered'>Preparing the {projectName} website</Loader>\n                    </Dimmer>\n                </Segment>\n            )\n        }\n        else{\n            throwError.config(configError.FAILED_CONFIG);\n            return (\n                <Segment className={'loading-segment'}>\n                    <Dimmer active>\n                        <Icon name='close' size='huge' inverted color='grey' />\n                        <br/>\n                        <p>Failed to load website</p>\n                    </Dimmer>\n                </Segment>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        config: _.values(state.config),\n        collections: state.collections,\n        protocolStatus:state.protocolStatus,\n        application: state.application[0],\n        modules: state.modules\n    }\n};\nexport default connect(mapStateToProps,{\n        getConfig,\n        getApplication,\n        getCollections,\n        directProtocol,\n        getGeneSuggestions,\n        setGene,\n        getGeneCounts,\n        setTissue\n}\n    )(AppContainer)","import SascWebApi from \"../apis/SascWeb\";\nimport {getOnlyPublished} from '../utils/generalHelpers'\nimport {application, config} from '../constants/types'\n\n\nexport const getConfig = () => async (dispatch) =>{\n    const result = await SascWebApi.get('items/config');\n    const publishedConfig = getOnlyPublished(result.data.data);\n    dispatch({type: config.SET_CONFIG, payload: publishedConfig})\n};\n\nexport const getApplication = () => async (dispatch) =>{\n    const result = await SascWebApi.get('items/application');\n    const publishedConfig = getOnlyPublished(result.data.data);\n    dispatch({type: application.GET_APPLICATION_DONE, payload: publishedConfig})\n};","import SascWebApi from \"../apis/SascWeb\";\nimport {getOnlyPublished} from '../utils/generalHelpers'\nimport {collections} from '../constants/types'\n\n\nexport const getCollections = (rawCollections) => (dispatch) =>{\n    let count = 0;\n    let collectionData = {};\n    rawCollections.forEach( async (item) => {\n        const result = await SascWebApi.get('items/'+item+'?fields=*.*.*');\n        collectionData[item] = getOnlyPublished(result.data.data);\n        count++;\n        if(count === rawCollections.length){\n            dispatch({type: collections.ADD_COLLECTION, payload:collectionData})\n        }\n    });\n\n};\n\n\n\n","import axios from \"axios\";\n\nimport {protocol} from '../../constants/types'\n\nexport const directProtocol = (config, data) => async (dispatch) => {\n    let bodyFormData = new FormData();\n    bodyFormData.set('email', data.email);\n    bodyFormData.set('training', data.training);\n    bodyFormData.append('file', data.file[0]);\n    const result = await axios({\n        method: 'post',\n        url: config.tool_reference,\n        data: bodyFormData,\n        config: { headers: {'Content-Type': 'multipart/form-data',  'Accept': 'text/html' }}\n    });\n    if(result.data.includes(\"Succesfully submitted. Please check your email in a few minutes\")){\n        dispatch({\n            type:protocol.PROTOCOL_COMPLETED\n        });\n    }else{\n        dispatch({\n            type:protocol.PROTOCOL_FAILED\n        });\n    }\n};","import SascWebApi from \"../../apis/SascWeb\";\nimport {modules} from \"../../constants/types\";\n\n\nexport const getGeneSuggestions = (searchTerm) => async (dispatch) =>{\n    const result = await SascWebApi.get(`/items/gene?limit=5&filter[symbol][logical]=or&\n    filter[symbol][rlike]=${searchTerm}%&filter[description][logical]=or&\n    filter[description][rlike]=${searchTerm}%&filter[ensg][logical]=or&filter[ensg][rlike]=${searchTerm}%\n    &filter[symbol][nnull]`);\n    dispatch({type: modules.geneFinder.GET_SUGGESTIONS, payload: result.data.data})\n};\n\nexport const getGeneCounts = (id) => async (dispatch) =>{\n    const result = await SascWebApi.get(`/items/transcript?filter[gene][eq]=${id}`);\n    dispatch({type: modules.geneFinder.GET_GENE_COUNTS, payload: result.data.data})\n};\nexport const setGene = (item) =>{\n    return {type:modules.geneFinder.SET_ACTIVE_GENE, payload:item}\n}\nexport const setTissue = (activeTissue, stage) =>  async (dispatch) =>{\n    stage = (stage >= 0 )?stage:null;\n    const result = await SascWebApi.post(`/custom/data/tissue-data`,\n        {tissueId: activeTissue.id, amount: 100, adult: stage})\n    dispatch({type: modules.geneFinder.SET_ACTIVE_TISSUE, payload: {activeTissue:activeTissue, data:result.data}})\n}\n","import {combineReducers} from \"redux\";\nimport suggestionsReducer from \"./suggestionsReducer\";\nimport activeGeneReducer from \"./activeGeneReducer\";\nimport transcriptsReducer from \"./transcriptsReducer\";\nimport activeTissueReducer from \"./activeTissueReducer\";\nimport tissueCountsReducer from \"./tissueCountsReducer\";\nimport tissueGenesReducer from \"./tissueGenesReducer\";\n\nexport const geneFinderReducers = combineReducers({\n    suggestions: suggestionsReducer,\n    activeGene: activeGeneReducer,\n    geneCounts: transcriptsReducer,\n    activeTissue: activeTissueReducer,\n    tissueCounts: tissueCountsReducer,\n    tissueGenes: tissueGenesReducer\n});","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state=[], action) => {\n    switch (action.type) {\n        case modules.geneFinder.GET_SUGGESTIONS:\n            const items= [];\n            _.values(action.payload).forEach(\n                (item, value) => {\n                    if(!item.symbol){\n                        items.push({\n                            title: `${item.ensg}`,\n                            description: item.description,\n                            id:item.id,\n                            ensg: item.ensg\n                        })\n                    }else{\n                        items.push({\n                            title: `${item.symbol} | ${item.ensg}`,\n                            description: item.description,\n                            id:item.id,\n                            ensg: item.ensg,\n                            symbol: item.symbol\n                        })\n                    }\n\n                }\n            );\n            return items;\n        default:\n            return state;\n    }\n}","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_GENE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state=[], action) => {\n    switch (action.type) {\n        case modules.geneFinder.GET_GENE_COUNTS:\n            return _.values(action.payload)\n        case modules.geneFinder.SET_ACTIVE_GENE:\n            return []\n        default:\n            return state;\n    }\n}","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state='', action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_TISSUE:\n            return action.payload.activeTissue;\n        default:\n            return state;\n    }\n}","import {modules} from \"../../../constants/types\";\n\nexport default (state= {}, action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_TISSUE:\n            return action.payload.data.counts;\n        default:\n            return state;\n    }\n}","import {modules} from \"../../../constants/types\";\n\nexport default (state= {}, action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_TISSUE:\n            return action.payload.data.genes;\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\nimport {geneFinderReducers} from \"./genefinder\";\n\nexport const modules = combineReducers({\n    geneFinder: geneFinderReducers\n});","import {combineReducers} from \"redux\";\nimport {reducer as formReducer} from 'redux-form'\nimport configReducer from './configReducer'\nimport collectionsReducer from \"./collectionsReducer\";\nimport protocolStatusReducer from './protocols/protocolStatusReducer'\nimport applicationReducer from \"./applicationReducer\";\nimport {modules} from \"./modules\";\n\nexport default combineReducers({\n    form: formReducer,\n    protocolStatus: protocolStatusReducer,\n    application: applicationReducer,\n    config: configReducer,\n    collections: collectionsReducer,\n    modules: modules\n});","import {protocol} from \"../../constants/types\";\n\nexport default (state='', action) => {\n    switch (action.type) {\n        case protocol.PROTOCOL_COMPLETED:\n            return protocol.PROTOCOL_COMPLETED;\n\n        case protocol.PROTOCOL_FAILED:\n            return protocol.PROTOCOL_FAILED;\n        default:\n            return ''\n    }\n}","import {application} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case application.GET_APPLICATION_DONE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {config} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case config.SET_CONFIG:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {collections} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case collections.ADD_COLLECTION:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport App from \"./containers/AppContainer\";\nimport 'semantic-ui-css/semantic.min.css'\nimport './assets/main.css'\nimport reducers from './reducers'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}