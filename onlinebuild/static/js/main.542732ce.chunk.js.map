{"version":3,"sources":["history.js","components/App.js","config.js","apis/SascWeb.js","constants/errorTypes.js","utils/generalHelpers.js","constants/types.js","constants/formValidationRules.js","components/modules/ButtonModule.js","components/modules/ContentModule.js","components/modules/ToolStepsModule.js","components/modules/ListModule.js","components/modules/FaqModule.js","components/modules/ContactCardsModule.js","components/helpers/redux-form-inputs/textInput.js","components/helpers/redux-form-inputs/fileInput.js","components/helpers/redux-form-inputs/selectInput.js","components/helpers/redux-form-inputs/index.js","components/modules/FormModule.js","components/modules/moduleLoader.js","components/Page.js","containers/AppContainer.js","actions/configActions.js","actions/collectionActions.js","actions/protocols/directProtocolActions.js","reducers/index.js","reducers/protocols/protocolStatusReducer.js","reducers/applicationReducer.js","reducers/configReducer.js","reducers/collectionsReducer.js","index.js"],"names":["createBrowserHistory","charPoses","exit","opacity","y","enter","delay","_ref","charIndex","App","this","props","menu","length","react_default","a","createElement","Menu","inverted","widths","className","pointing","secondary","react_router","history","map","item","key","Item","name","reference","concat","as","Link","to","Fragment","Transition","visible","sloganText","animation","duration","show","particles_default","params","particles","number","value","size","interactivity","events","onhover","enable","mode","Container","Grid","columns","Row","verticalAlign","Column","textAlign","react_pose_text_es","initialPose","pose","applicationDetails","title","unmountOnHide","sub_title","renderMenu","activePageContent","Component","baseUrl","axios","create","baseURL","configError","moduleError","getOnlyPublished","data","_","values","filter","status","published","validateAttributes","obj","required_attributes","every","Object","keys","includes","validateReferenceAlias","hasOwnProperty","throwError","classCallCheck","config","message","console","error","module","moduleAttr","attrs","min","collections","protocol","application","ButtonModule","setting","type","href","link","target","rel","Button","labelPosition","color","Icon","Label","basic","label","download","icon","moduleName","ContentModule","collection","pointer_set","keyBy","alias_ref","arguments","undefined","Header","getTitle","Parser","content","ToolStepModule","dir","dist_default","direction","time","step_name","description","tags","lineHeight","renderIconList","List","divided","relaxed","Content","Description","renderDownloadList","items","Image","avatar","circular","ListModule","FaqModule","question","answer","checkImage","cardData","image","full_url","e","ContactCardsModule","Card","Group","itemsPerRow","src","wrapped","ui","Meta","year_joined","year_left","job_description","extra","email","renderCard","required","redux_form_inputs_textInput","input","meta","inputAttr","Form","Field","Input","assign","autoComplete","touched","renderError","redux_form_inputs_fileInput","_ref2","_ref2$input","inputProps","objectWithoutProperties","omitMeta","redux_form_inputs_selectInput","Dropdown","selection","onChange","param","placeholder","textInput","text","fileInput","file","selectInput","select","FormModule","state","fileInputCode","onSubmit","formValues","dispatch","_this","reset","setState","Math","random","toString","substring","renderInputType","input_type","api_reference_parameter","component","validate","toLowerCase","options","createOptions","option_titles","option_values","index","titles","forEach","push","renderInputs","floated","_this2","protocolStatus","transitionOnMount","Segment","handleSubmit","renderForm","reduxForm","form","ModuleLoader","modules_ContentModule","modules_ButtonModule","ToolStepsModule","modules_ListModule","modules_FaqModule","modules_ContactCardsModule","modules_FormModule","Page","settings","moduleLoader","page","getCollection","inputs","path","dividing","renderModules","AppContainer","pageView","render","api","directProtocol","log","getCollections","settingItem","uniq","loadConfig","_callee","regenerator_default","wrap","_context","prev","next","getApplication","getConfig","stop","wrapTransition","object","setTimeout","bind","_this3","exact","components_Page","_this4","renderRoutes","isEmpty","document","documentElement","style","setProperty","primary_color","components_App","renderContent","Dimmer","active","Loader","indeterminate","inline","connect","asyncToGenerator","mark","result","publishedConfig","SascWebApi","get","sent","payload","_x","apply","_callee2","_context2","_x2","rawCollections","count","collectionData","bodyFormData","FormData","set","training","append","method","url","tool_reference","headers","Content-Type","Accept","combineReducers","formReducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","es","containers_AppContainer","getElementById"],"mappings":"kWAEeA,kCCWTC,EAAY,CACdC,KAAM,CAAEC,QAAS,EAAGC,EAAG,IACvBC,MAAO,CACHF,QAAS,EACTC,EAAG,EACHE,MAAO,SAAAC,GAAA,OAA+B,GAA/BA,EAAGC,aAoHHC,uLA/GP,OAAIC,KAAKC,MAAMC,KAAKC,OAAS,EAClB,KAGPC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAQ,EAAEC,OAAQ,EAAGC,UAAW,WAAaC,UAAQ,EAACC,WAAS,GACjER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,QAASA,GAETd,KAAKC,MAAMC,KAAKa,IACZ,SAACC,EAAMC,GAAP,OACIb,EAAAC,EAAAC,cAACC,EAAA,EAAKW,KAAN,CACIC,KAAMH,EAAKI,UACXH,IAAG,YAAAI,OAAcJ,GACjBK,GAAIC,IACJC,GAAI,IAAIR,EAAKI,WACZJ,EAAKG,2CASlC,OACIf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoB,SAAA,KACArB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAW,WACZN,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACIC,QAAS3B,KAAKC,MAAM2B,WACpBC,UAAW,UACXC,SAAU,CAAEC,KAAK,MAEjB3B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CACIK,UAAW,YACXuB,OAAQ,CACJC,UAAa,CACTC,OAAU,CACNC,MAAS,IAEbC,KAAQ,CACJD,MAAS,IAGjBE,cAAiB,CACbC,OAAU,CACNC,QAAW,CACPC,QAAU,EACVC,KAAQ,kBAOxCtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACIvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAMC,QAAS,GACXzC,EAAAC,EAAAC,cAACsC,EAAA,EAAKE,IAAN,CAAUC,cAAc,SAASrC,UAAW,eACxCN,EAAAC,EAAAC,cAACsC,EAAA,EAAKI,OAAN,CAAaC,UAAW,UACpB7C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACfN,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAWC,YAAY,OAAOC,KAAK,QAAQ7D,UAAWA,GACjDS,KAAKC,MAAMoD,mBAAmBC,QAGnClD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACI6B,eAAe,EACf5B,QAAS3B,KAAKC,MAAM2B,WACpBC,UAAW,UACXC,SAAU,CAAEC,KAAK,MAEjB3B,EAAAC,EAAAC,cAAA,WACKN,KAAKC,MAAMoD,mBAAmBG,eAMnDpD,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACI6B,eAAe,EACf5B,QAAS3B,KAAKC,MAAM2B,WACpBC,UAAW,YACXC,SAAU,CAAEC,KAAK,MAErB3B,EAAAC,EAAAC,cAACsC,EAAA,EAAKE,IAAN,KACI1C,EAAAC,EAAAC,cAACsC,EAAA,EAAKI,OAAN,KACKhD,KAAKyD,mBAOtBrD,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACI6B,eAAe,EACf5B,QAAS3B,KAAKC,MAAM2B,WACpBC,UAAW,UACXC,SAAU,CAAEC,KAAK,MAErB3B,EAAAC,EAAAC,cAAA,OAAKI,UAAW,gBACZN,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACK3C,KAAKC,MAAMyD,8BAvGlBC,4FCrBLC,EAAQ,sCCGNC,MAAMC,OAAO,CACzBC,QAAWH,ICJDI,EACM,2DAGNC,EACO,+CADPA,EAEW,oDAFXA,EAGW,2CCJXC,EAAmB,SAACC,GAE7B,OAAOC,IAAEC,OAAOD,IAAEE,OACdH,EAAM,SAASnD,GAAO,MAAuB,cAAhBA,EAAKuD,QAA6C,cAAnBvD,EAAKwD,cAI5DC,EAAqB,SAACC,EAAKC,GACpC,OAAQA,EAAoBC,MAAM,SAAA3D,GAAG,OAAI4D,OAAOC,KAAKJ,GAAKK,SAAS9D,MAG1D+D,EAAyB,SAAC/D,EAAKyD,GACxC,OAAOA,EAAIO,eAAehE,IAGjBiE,EAAb,SAAAA,IAAAL,OAAAM,EAAA,EAAAN,CAAA7E,KAAAkF,IAAaA,EACFE,OAAS,SAACC,GACbC,QAAQC,MAAR,0BAAAlE,OAAyCgE,KAFpCH,EAIFM,OAAS,SAACH,GACbC,QAAQC,MAAR,mBAAAlE,OAAkCgE,KAL7BH,EAOFO,WAAa,SAACD,EAAQE,GACzBJ,QAAQC,MAAR,mBAAAlE,OAAkCmE,EAAlC,KAAAnE,OAA4C4C,EAA5C,MAAA5C,OAAiFqE,KC1BlF,ICCqBC,EDDfP,EAEG,aAGHQ,EACO,iBAGPC,EACU,qBADVA,EAEQ,kBAGRC,GACa,2CE6BXC,GAvCM,SAAC9F,GAClB,OAAOA,EAAM+F,QAAQZ,OAAOa,MACxB,IAAK,SACD,OACI7F,EAAAC,EAAAC,cAACsC,EAAA,EAAKE,IAAN,KACI1C,EAAAC,EAAAC,cAACsC,EAAA,EAAKI,OAAN,CAAaC,UAAW,UACpB7C,EAAAC,EAAAC,cAAA,KAAG4F,KAAMjG,EAAM+F,QAAQZ,OAAOA,OAAOe,KAAMC,OAAO,SAASC,IAAI,uBAC/DjG,EAAAC,EAAAC,cAACgG,GAAA,EAAD,CAAQhF,GAAG,MAAMiF,cAAc,SAC3BnG,EAAAC,EAAAC,cAACgG,GAAA,EAAD,CAAQE,MAAM,QACVpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMtF,KAAK,WADf,UAIAf,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAOC,OAAK,EAAEhG,SAAS,QAClBV,EAAM+F,QAAQZ,OAAOA,OAAOwB,WAOrD,IAAK,WACD,OACIxG,EAAAC,EAAAC,cAACsC,EAAA,EAAKE,IAAN,KACI1C,EAAAC,EAAAC,cAACsC,EAAA,EAAKI,OAAN,CAAaC,UAAW,UACpB7C,EAAAC,EAAAC,cAAA,KAAG4F,KAAMjG,EAAM+F,QAAQZ,OAAOA,OAAOe,KAAMU,UAAQ,EAACT,OAAQ,UAC5DhG,EAAAC,EAAAC,cAACgG,GAAA,EAAD,CAAQQ,MAAI,EAACP,cAAc,QACvBnG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMtF,KAAK,UACVlB,EAAM+F,QAAQZ,OAAOA,OAAOwB,UAMjD,QAEI,OADA1B,EAAWM,OAAX,8BAAAnE,OAAgDpB,EAAM8G,WAAtD,eACO,sCC/BbpC,GAAsB,CAAC,kBAAmB,WAuCjCqC,GAtBO,SAAC/G,GACnB,GAAIA,EAAMgH,WAAW,CACjB,IAAKxC,EAAmBxE,EAAMgH,WAAW,GAAItC,IACU,OAAnDO,EAAWO,WArBR,UAqB2Bd,IAA4B,KAC9D,IAAMuC,EAAc9C,IAAE+C,MAAMlH,EAAMgH,WAAY,mBAC9C,OAAKjC,EAAuB/E,EAAM+F,QAAQoB,UAAWF,GAGjD9G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoB,SAAA,KAvBK,SAAC6B,GAAoB,IAAbjB,EAAagF,UAAAlH,OAAA,QAAAmH,IAAAD,UAAA,GAAAA,UAAA,GAAR,KAC1B,OAAI/D,EAIAlD,EAAAC,EAAAC,cAACsC,EAAA,EAAKE,IAAN,KACI1C,EAAAC,EAAAC,cAACsC,EAAA,EAAKI,OAAN,KACI5C,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CAAQjG,GAAIe,GACPiB,KANN,KAsBFkE,CAASN,EAAYjH,EAAM+F,QAAQoB,WAAW9D,OAC/ClD,EAAAC,EAAAC,cAACsC,EAAA,EAAKE,IAAN,KACI1C,EAAAC,EAAAC,cAACsC,EAAA,EAAKI,OAAN,KACCyE,KAAOP,EAAYjH,EAAM+F,QAAQoB,WAAWM,aANjDxC,EAAWM,OAAOvB,GAAuC,MAYjE,OAAO,2BCtCLU,GAAsB,CAAC,OAAQ,QAAS,YAAa,cAAe,QAqC3DgD,GAlCQ,SAAC1H,GACpB,OAAIA,EAAMgH,WACDxC,EAAmBxE,EAAMgH,WAAW,GAAItC,IAGzCvE,EAAAC,EAAAC,cAACsC,EAAA,EAAKE,IAAN,KACI1C,EAAAC,EAAAC,cAACsC,EAAA,EAAKI,OAAN,CAAatC,UAAW,YACnBT,EAAMgH,WAAWlG,IACd,SAACC,EAAMC,GACH,IAAI2G,GAAQ3G,EAAM,GAAG,IAAM,EAAG,OAAQ,QACtC,OACIb,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CACIY,IAAG,gBAAAI,OAAkBJ,GACrBP,UAAW,YACXoH,UAAWF,EACXd,KAAM9F,EAAK8F,KACXxD,MAAOtC,EAAKsC,MACZyE,KAAI,GAAA1G,OAAKJ,EAAI,EAAT,KAAAI,OAAcL,EAAKgH,WACvBC,YAAajH,EAAKiH,YAClBzB,MAAM,OACN0B,KAAMlH,EAAKkH,KACXC,WAAYlH,SAlBpCiE,EAAWO,WAPR,aAO2Bd,IAA4B,MA2B3D,0BChCL6C,GAAW,SAAClE,GAAoB,IAAbjB,EAAagF,UAAAlH,OAAA,QAAAmH,IAAAD,UAAA,GAAAA,UAAA,GAAR,KAC1B,OAAI/D,EAIAlD,EAAAC,EAAAC,cAACsC,EAAA,EAAKE,IAAN,KACI1C,EAAAC,EAAAC,cAACsC,EAAA,EAAKI,OAAN,KACI5C,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CAAQjG,GAAIe,GACPiB,KANN,MA0BT8E,GAAiB,SAACnI,GACpB,IACM0E,EAAsB,CAAC,OAAQ,QAAS,eAC9C,IAAKF,EAAmBxE,EAAMgH,WAAW,GAAItC,GACU,OAAnDO,EAAWO,WAHA,aAGmBd,GAA4B,KAC9D,IAAMuC,EAAc9C,IAAE+C,MAAMlH,EAAMgH,WAAY,mBAC9C,OAAKjC,EAAuB/E,EAAM+F,QAAQoB,UAAWF,GAIjD9G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoB,SAAA,KACK+F,GAASvH,EAAM+F,QAAQ1C,OACxBlD,EAAAC,EAAAC,cAACsC,EAAA,EAAKE,IAAN,KACI1C,EAAAC,EAAAC,cAACsC,EAAA,EAAKI,OAAN,KACI5C,EAAAC,EAAAC,cAAC+H,GAAA,EAAD,CAAMC,SAAO,EAACC,SAAO,GAChBtI,EAAMgH,WAAWlG,IACd,SAACC,EAAMC,GACH,OACIb,EAAAC,EAAAC,cAAC+H,GAAA,EAAKnH,KAAN,CAAWD,IAAG,aAAAI,OAAeJ,EAAf,KAAAI,OAAsBpB,EAAM+F,QAAQiB,aAC9C7G,EAAAC,EAAAC,cAAC+H,GAAA,EAAK5B,KAAN,CAAWtF,KAAMH,EAAK8F,KAAMzE,KAAK,QAAQU,cAAc,QACvD3C,EAAAC,EAAAC,cAAC+H,GAAA,EAAKG,QAAN,KACIpI,EAAAC,EAAAC,cAAC+H,GAAA,EAAKd,OAAN,CAAajG,GAAG,KAAKN,EAAKsC,OAC1BlD,EAAAC,EAAAC,cAAC+H,GAAA,EAAKI,YAAN,CAAkBnH,GAAG,KAAKN,EAAKiH,sBAfnE/C,EAAWM,OAAOvB,GAAuC,OA2B3DyE,GAAqB,SAACzI,GACxB,IACM0E,EAAsB,CAAC,OAAQ,QAAS,eAC9C,IAAKF,EAAmBxE,EAAMgH,WAAW,GAAG0B,MAAM,GAAIhE,GACC,OAAnDO,EAAWO,WAHA,aAGmBd,GAA4B,KAC9D,IAAMuC,EAAc9C,IAAE+C,MAAMlH,EAAMgH,WAAY,mBAC9C,OAAKjC,EAAuB/E,EAAM+F,QAAQoB,UAAWF,GAGjD9G,EAAAC,EAAAC,cAACsC,EAAA,EAAKE,IAAN,KACI1C,EAAAC,EAAAC,cAACsC,EAAA,EAAKI,OAAN,KACKwE,GAASvH,EAAM+F,QAAQ1C,MAAO,MAC/BlD,EAAAC,EAAAC,cAAC+H,GAAA,EAAD,KACKnB,EAAYjH,EAAMmH,WAAWuB,MAAM5H,IAChC,SAACC,EAAMC,GACH,OACIb,EAAAC,EAAAC,cAAC+H,GAAA,EAAKnH,KAAN,CAAWD,IAAG,iBAAAI,OAAmBJ,IAC7Bb,EAAAC,EAAAC,cAACsI,GAAA,EAAD,CAAOC,QAAM,GACTzI,EAAAC,EAAAC,cAAA,KAAG4F,KAAMlF,EAAKmF,KAAMU,UAAQ,GACxBzG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMoC,OAAQ,OAAQC,UAAQ,EAACtI,UAAQ,EAACW,KAAK,eAGrDf,EAAAC,EAAAC,cAAC+H,GAAA,EAAKG,QAAN,KACIpI,EAAAC,EAAAC,cAAC+H,GAAA,EAAKd,OAAN,KAAcvG,EAAKsC,OAClBtC,EAAKiH,oBAjBtC/C,EAAWM,OAAOvB,GAAuC,OA6BlD8E,GApFI,SAAC9I,GAChB,GAAIA,EAAMgH,WACN,OAAQhH,EAAM+F,QAAQZ,OAAOa,MACzB,IAAK,YACD,OAAOmC,GAAenI,GAC1B,IAAK,gBACD,OAAOyI,GAAmBzI,GAC9B,QACI,OAAO,KAGnB,OAAO,MCEI+I,GA7BG,SAAC/I,GACf,GAAIA,EAAMgH,WAAW,CACjB,IACItC,EAAsB,CAAC,WAAY,UACvC,OAAKF,EAAmBxE,EAAMgH,WAAW,GAAItC,GAGzCvE,EAAAC,EAAAC,cAACsC,EAAA,EAAKE,IAAN,KACI1C,EAAAC,EAAAC,cAACsC,EAAA,EAAKI,OAAN,KACK/C,EAAMgH,WAAWlG,IACd,SAACC,EAAMC,GAEH,OACIb,EAAAC,EAAAC,cAAA,OAAKW,IAAG,mBAAAI,OAAqBJ,IACzBb,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,eAAOU,EAAKiI,WACdxB,KAAOzG,EAAKkI,QACb9I,EAAAC,EAAAC,cAAA,iBAXxB4E,EAAWO,WAHF,OAGqBd,GAA4B,MAoBlE,OAAO,gBCzBLwE,GAAa,SAACC,GAChB,IACI,OAAOA,EAASC,MAAMlF,KAAKmF,SAE/B,MAAOC,GACH,MAAO,oCAkDAC,GAxBY,SAACvJ,GACxB,GAAIA,EAAMgH,WAAW,CACjB,IACItC,EAAsB,CAAC,OAAQ,kBAAmB,eACtD,OAAKF,EAAmBxE,EAAMgH,WAAW,GAAItC,GAGzCvE,EAAAC,EAAAC,cAACsC,EAAA,EAAKE,IAAN,KACI1C,EAAAC,EAAAC,cAACsC,EAAA,EAAKI,OAAN,KACI5C,EAAAC,EAAAC,cAACmJ,GAAA,EAAKC,MAAN,CAAYzG,UAAW,SAAU0G,YAAa,GACzC1J,EAAMgH,WAAWlG,IACd,SAACC,EAAMC,GACH,OAnCZ,SAACmI,EAAUnI,GAC3B,OACIb,EAAAC,EAAAC,cAACmJ,GAAA,EAAD,CAAMxI,IAAG,gBAAAI,OAAkBJ,IACvBb,EAAAC,EAAAC,cAACsI,GAAA,EAAD,CAAOgB,IAAKT,GAAWC,GAAWS,SAAO,EAACC,IAAI,IAC9C1J,EAAAC,EAAAC,cAACmJ,GAAA,EAAKjB,QAAN,KACIpI,EAAAC,EAAAC,cAACmJ,GAAA,EAAKlC,OAAN,KAAc6B,EAASjI,MACvBf,EAAAC,EAAAC,cAACmJ,GAAA,EAAKM,KAAN,KACI3J,EAAAC,EAAAC,cAAA,QAAMI,UAAU,QAAhB,aACe0I,EAASY,YAAaZ,EAASa,UAAW,aAAab,EAASa,UAAU,KAG7F7J,EAAAC,EAAAC,cAACmJ,GAAA,EAAKhB,YAAN,KACKW,EAASc,kBAGlB9J,EAAAC,EAAAC,cAACmJ,GAAA,EAAKjB,QAAN,CAAc2B,OAAK,GACX/J,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMtF,KAAK,SACViI,EAASgB,QAkBSC,CAAWrJ,EAAMC,SAP5CiE,EAAWO,WAHF,gBAGqBd,GAA4B,MAelE,OAAO,8CNxDE2F,GAAW,SAAAlI,GAAK,OAAIA,OAAQkF,EAAY,gBACzB3B,EACU,iBOQvB4E,GAAA,SAACC,EAAO5D,EAAO6D,EAAMC,GAChC,OACItK,EAAAC,EAAAC,cAACqK,GAAA,EAAKC,MAAN,KACIxK,EAAAC,EAAAC,cAAA,aAAQsG,GACRxG,EAAAC,EAAAC,cAACuK,GAAA,EAADhG,OAAAiG,OAAA,GAAWN,EAAYE,EAAvB,CAAkCK,aAAa,SAXvC,SAAAlL,GAAqB,IAAnBmL,EAAmBnL,EAAnBmL,QAASzF,EAAU1F,EAAV0F,MAC3B,GAAGyF,GAAWzF,EACV,OACInF,EAAAC,EAAAC,cAAA,OAAKI,UAAW,gBAAiB6E,GAShC0F,CAAYR,eCJTS,GAAA,SAAAC,GAA4E,IAAAC,EAAAD,EAAzEX,MAA6Ba,GAA4CD,EAAjEhJ,MAAiEyC,OAAAyG,GAAA,EAAAzG,CAAAuG,EAAA,YAAxBG,EAAwBJ,EAA9BV,KAAmBxK,EAAW4E,OAAAyG,GAAA,EAAAzG,CAAAsG,EAAA,kBACxF,OACI/K,EAAAC,EAAAC,cAACqK,GAAA,EAAKC,MAAN,KACIxK,EAAAC,EAAAC,cAAA,aAAQL,EAAM2G,OACdxG,EAAAC,EAAAC,cAACuK,GAAA,EAADhG,OAAAiG,OAAA,CACI7E,KAAM,QACFoF,EACApL,EAAMuK,MAHd,CAIIO,aAAa,SAhBT,SAAAlL,GAAqB,IAAnBmL,EAAmBnL,EAAnBmL,QAASzF,EAAU1F,EAAV0F,MAC3B,GAAGyF,GAAWzF,EACV,OACInF,EAAAC,EAAAC,cAAA,OAAKI,UAAW,gBAAiB6E,GAchC0F,CAAYM,eCVVC,GAAA,SAAChB,EAAO5D,EAAO6D,EAAMC,GAChC,OACItK,EAAAC,EAAAC,cAACqK,GAAA,EAAKC,MAAN,KACIxK,EAAAC,EAAAC,cAAA,aAAQsG,GACRxG,EAAAC,EAAAC,cAACmL,GAAA,EAAD5G,OAAAiG,OAAA,CAAUY,WAAS,GAAKlB,EACVE,EADd,CAEUtI,MAAOoI,EAAMpI,MACbuJ,SAAU,SAACC,EAAOzH,GAAR,OAAiBqG,EAAMmB,SAASxH,EAAK/B,QAC/CyJ,YAAajF,KAff,SAAA/G,GAAsB,IAApBmL,EAAoBnL,EAApBmL,QAASzF,EAAW1F,EAAX0F,MAC3B,GAAIyF,GAAWzF,EACX,OACInF,EAAAC,EAAAC,cAAA,OAAKI,UAAW,gBAAiB6E,GAchC0F,CAAYR,KCdZqB,GAAY,SAAAjM,GAAA,IAAE2K,EAAF3K,EAAE2K,MAAM5D,EAAR/G,EAAQ+G,MAAM6D,EAAd5K,EAAc4K,KAAKC,EAAnB7K,EAAmB6K,UAAnB,OAAkCqB,GAAKvB,EAAM5D,EAAM6D,EAAKC,IACpEsB,GAAY,SAAC/L,GAAD,OAAWgM,GAAKhM,IAC5BiM,GAAc,SAAAf,GAAA,IAAEX,EAAFW,EAAEX,MAAM5D,EAARuE,EAAQvE,MAAM6D,EAAdU,EAAcV,KAAKC,EAAnBS,EAAmBT,UAAnB,OAAkCyB,GAAO3B,EAAM5D,EAAM6D,EAAKC,ICA/E0B,8MAEFC,MAAQ,CAACC,cAAe,cACxBC,SAAW,SAACC,EAAYC,GACpBC,EAAKzM,MAAMsM,SACPG,EAAKzM,MAAMgH,WAAX,KAA8B,GAC9BuF,GAEJC,EAASE,aAAM,aACfD,EAAKE,SAAS,CAACN,cAAeO,KAAKC,SAASC,SAAS,IAAIC,UAAU,QAiBvEC,gBAAkB,SAACzC,EAAOvJ,GACtB,OAAQuJ,EAAM0C,WAAWjH,MACrB,IAAK,OACD,OACI7F,EAAAC,EAAAC,cAACsK,GAAA,EAAD,CACI3J,IAAG,eAAAI,OAAiBJ,GACpBE,KAAMqJ,EAAM2C,wBACZC,UAAWtB,GACXuB,SAAU,CAAE/C,IACZ1D,MAAO4D,EAAM5D,MACb8D,UAAW,CACPmB,YAAW,aAAAxK,OAAemJ,EAAM5D,MAAM0G,eACtCrH,KAAK,UAIrB,IAAK,OACD,OACI7F,EAAAC,EAAAC,cAACsK,GAAA,EAAD,CACI3J,IAAG,eAAAI,OAAiBJ,EAAjB,KAAAI,OAAwBqL,EAAKL,MAAMC,eACtCnL,KAAMqJ,EAAM2C,wBACZC,UAAWpB,GACXpF,MAAO4D,EAAM5D,MACb8D,UAAW,CACPmB,YAAW,aAAAxK,OAAemJ,EAAM5D,MAAM0G,kBAItD,IAAK,SACD,IAAMC,EAAUb,EAAKc,cAAcvM,EAAKuJ,EAAMiD,cAAejD,EAAMkD,eACnE,OACItN,EAAAC,EAAAC,cAACsK,GAAA,EAAD,CACI3J,IAAG,eAAAI,OAAiBJ,GACpBE,KAAMqJ,EAAM2C,wBACZC,UAAWlB,GACXmB,SAAU,CAAE/C,IACZ1D,MAAO4D,EAAM5D,MACb8D,UAAW,CACPmB,YAAW,aAAAxK,OAAemJ,EAAM5D,MAAM0G,eACtCC,QAASA,KAKzB,QACI,OAAO,SAInBC,cAAgB,SAACG,EAAOC,EAAQvJ,GAC5B,IAAMkJ,EAAU,GAUhB,OATAK,EAAOC,QACH,SAACvK,EAAOrC,GACJsM,EAAQO,KAAK,CACT7M,IAAA,cAAAI,OAAqBsM,EAArB,KAAAtM,OAA8BJ,GAC9B8K,KAAQ6B,EAAO3M,GACfmB,MAASiC,EAAOpD,OAIrBsM,+EA1EP,OAAGvN,KAAKC,MAAMgH,WAAX,OAAgC9G,OAAS,EACjCC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,sCAGNF,EAAAC,EAAAC,cAAA,WACKN,KAAK+N,eACN3N,EAAAC,EAAAC,cAACgG,GAAA,EAAD,CAAQL,KAAM,SAAUa,MAAI,EAACP,cAAc,OAAOlE,KAAK,QAAS2L,QAAQ,SACpE5N,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMtF,KAAK,gBADf,gDAsEF,IAAA8M,EAAAjO,KACV,OAAOA,KAAKC,MAAMgH,WAAX,OAAgClG,IACnC,SAACyJ,EAAOvJ,GAAR,OAAgBgN,EAAKhB,gBAAgBzC,EAAOvJ,sCAKhD,IAAIjB,KAAKC,MAAMgH,WAAX,OACA,OAAO,KAEX,IAAIzB,EAAS,YACTb,EAAsB,CAAC,QAAS,MAAO,iBAAkB,eAC7D,OAAKF,EAAmBzE,KAAKC,MAAMgH,WAAX,KAA8B,GAAItC,IAE1Da,EAAS,cACTb,EAAsB,CAAC,0BAA2B,QAAS,cACtDF,EAAmBzE,KAAKC,MAAMgH,WAAX,OAAgC,GAAItC,GAGpDvE,EAAAC,EAAAC,cAACsC,EAAA,EAAKE,IAAN,KACI1C,EAAAC,EAAAC,cAACsC,EAAA,EAAKI,OAAN,KACMhD,KAAKC,MAAMiO,iBAAmBrI,EAC5BzF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACIyM,mBAAmB,EACnBtM,UAAW,aACXC,SAAU,CAAEC,KAAK,MAEjB3B,EAAAC,EAAAC,cAAC8N,EAAA,EAAD,CAAS5H,MAAO,SACZpG,EAAAC,EAAAC,cAAA,gCADJ,6CAIN,GAEAN,KAAKC,MAAMiO,iBAAmBrI,EAC5BzF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACIyM,mBAAmB,EACnBtM,UAAW,aACXC,SAAU,CAAEC,KAAK,MAEjB3B,EAAAC,EAAAC,cAAC8N,EAAA,EAAD,CAAS5H,MAAO,OACZpG,EAAAC,EAAAC,cAAA,4CADJ,2DAIN,GAEFF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACqK,GAAA,EAAD,CAAM4B,SAAUvM,KAAKC,MAAMoO,aAAarO,KAAKuM,WACxCvM,KAAKsO,iBA9BtBpJ,EAAWO,WAAWD,EAAQb,GAA4B,QAJ1DO,EAAWO,WAAWD,EAAQb,GAA4B,aArG7ChB,aA+IV4K,gBAAU,CACrBC,KAAK,YADMD,CAEZnC,ICtFYqC,GAvDM,SAACxO,GAClB,OAAOA,EAAM+F,QAAQR,QACjB,IAAK,UACD,OACIpF,EAAAC,EAAAC,cAACoO,GAAD,CACI1I,QAAS/F,EAAM+F,QACfiB,WAAYhH,EAAMgH,aAG9B,IAAK,SACD,OACI7G,EAAAC,EAAAC,cAACqO,GAAD,CACI3I,QAAS/F,EAAM+F,UAG3B,IAAK,aACD,OACI5F,EAAAC,EAAAC,cAACsO,GAAD,CACI3H,WAAYhH,EAAMgH,aAG9B,IAAK,OACD,OACI7G,EAAAC,EAAAC,cAACuO,GAAD,CACIzH,UAAWnH,EAAM+F,QAAQoB,UACzBpB,QAAS/F,EAAM+F,QACfiB,WAAYhH,EAAMgH,aAG9B,IAAK,OACD,OACI7G,EAAAC,EAAAC,cAACwO,GAAD,CACI7H,WAAYhH,EAAMgH,aAG9B,IAAK,gBACD,OACI7G,EAAAC,EAAAC,cAACyO,GAAD,CACI9H,WAAYhH,EAAMgH,aAG9B,IAAK,OACD,OACI7G,EAAAC,EAAAC,cAAC0O,GAAD,CACIzC,SAAUtM,EAAMsM,SAChBtF,WAAYhH,EAAMgH,WAClBiH,eAAgBjO,EAAMiO,iBAGlC,QAEI,OADAhJ,EAAWM,OAAOvB,GACX,OCGFgL,yLA3DEhI,GACX,OAAKA,GAGDA,KAAcjH,KAAKC,MAAM2F,YAClB5F,KAAKC,MAAM2F,YAAYqB,GAHvB,6CASA,IAAAyF,EAAA1M,KACX,OAAOA,KAAKC,MAAMmF,OAAO8J,SAASnO,IAC9B,SAACiF,EAAS/E,GACN,MAAuB,SAAnB+E,EAAQR,OAEJpF,EAAAC,EAAAC,cAAC6O,GAAD,CACI5C,SAAUG,EAAKzM,MAAMsM,SACrB6C,KAAM1C,EAAKzM,MAAMmF,OAAOjE,KACxBF,IAAG,UAAAI,OAAYqL,EAAKzM,MAAMmF,OAAOhE,UAA9B,KAAAC,OAA2CJ,GAC9CgG,WAAY,CACRuH,KAAQ9B,EAAK2C,cAAcrJ,EAAQiB,YACnCqI,OAAU5C,EAAK2C,cAAc,WAEjCrJ,QAASA,EACTkI,eAAgBxB,EAAKzM,MAAMiO,iBAKnC9N,EAAAC,EAAAC,cAAC6O,GAAD,CACIC,KAAM1C,EAAKzM,MAAMmF,OAAOjE,KACxBF,IAAG,UAAAI,OAAYqL,EAAKzM,MAAMmF,OAAOhE,UAA9B,KAAAC,OAA2CJ,GAC9CgG,WAAYyF,EAAK2C,cAAcrJ,EAAQiB,YACvCjB,QAASA,uCAOzB,OAAKhG,KAAKC,MAAMsP,KAIZnP,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACIxC,EAAAC,EAAAC,cAACsC,EAAA,EAAKE,IAAN,KACI1C,EAAAC,EAAAC,cAACsC,EAAA,EAAKI,OAAN,KACI5C,EAAAC,EAAAC,cAACiH,GAAA,EAAD,CAAQjG,GAAG,KAAKkO,UAAQ,GACnBxP,KAAKC,MAAMmF,OAAOjE,QAI9BnB,KAAKyP,iBAXH,YA5CA9L,aCeb+L,8MAEFrD,MAAQ,CACJnM,KAAM,GACN0B,YAAY,EACZ+N,UAAU,EACVC,QAAQ,EACRxK,QAAQ,KAEZmH,SAAW,SAACnH,EAAQf,GAChB,OAAQe,EAAOyK,IAAIhK,UACf,IAAK,SACD6G,EAAKzM,MAAM6P,eAAe1K,EAAQf,GACtC,MACA,QACIiB,QAAQyK,IAAI,2CAGxBC,eAAiB,WACb,IAAMpK,EAAc,GAgBpB,OAfA8G,EAAKzM,MAAMmF,OAAOyI,QACd,SAACoC,GACGA,EAAYf,SAASrB,QACjB,SAAC7M,GACMA,EAAKiG,aACmB,SAApBjG,EAAKiG,aACJrB,EAAYkI,KAAK9M,EAAKiG,YACtBrB,EAAYkI,KAAK,WAErBlI,EAAYkI,KAAK9M,EAAKiG,iBAMnC7C,IAAE8L,KAAKtK,MAGlBuK,gCAAa,SAAAC,IAAA,IAAAxK,EAAA,OAAAyK,EAAAhQ,EAAAiQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACH/D,EAAKzM,MAAMyQ,iBADR,cAAAH,EAAAE,KAAA,EAEH/D,EAAKzM,MAAM0Q,YAFR,cAGH/K,EAAc8G,EAAKsD,iBAHhBO,EAAAE,KAAA,EAIH/D,EAAKzM,MAAM+P,eAAepK,GAJvB,OAKT8G,EAAKE,SAAS,CAAC1M,KAAKwM,EAAKzM,MAAMmF,SALtB,wBAAAmL,EAAAK,SAAAR,QA8CbS,eAAkB,SAACC,GACf,OAAOA,8FArCH9Q,KAAK4M,SAAS,CAACxH,QAAQ,gDAGX,IAAA6I,EAAAjO,KAChBA,KAAKmQ,aACLY,WAAW,WACP/Q,KAAK4M,SAAS,CAACgD,QAAQ,KACzBoB,KAAKhR,MAAO,KACd+Q,WACI,WACI9C,EAAKrB,SAAS,CAAChL,YAAY,KAC5B,6CAEI,IAAAqP,EAAAjR,KACX,OAAOA,KAAKC,MAAMmF,OAAOrE,IACrB,SAACC,GACG,OACIZ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACII,IAAG,SAAAI,OAAWL,EAAKI,WACnBmO,KAAM,IAAIvO,EAAKI,UACf8P,OAAK,EACLtB,OAAQ,SAAC3P,GAAD,OAAWgR,EAAKJ,eACpBzQ,EAAAC,EAAAC,cAAC6Q,GAADtM,OAAAiG,OAAA,GACQ7K,EADR,CAEIsP,KAAM,IAAIvO,EAAKI,UACfgE,OAAQpE,EACR4E,YAAaqL,EAAKhR,MAAM2F,YACxB2G,SAAU0E,EAAK1E,SACf2B,eAAgB+C,EAAKhR,MAAMiO,gEAWvC,IAAAkD,EAAApR,KACZ,OAAgC,IAA7BA,KAAKC,MAAMmF,OAAOjF,OACV,KAGPC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,QAASA,GACbV,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACIT,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACI0O,KAAK,IACL2B,OAAK,EACLtB,OAAQ,SAAC3P,GAAD,OAAWmR,EAAKP,eACpBzQ,EAAAC,EAAAC,cAAC6Q,GAADtM,OAAAiG,OAAA,GAAU7K,EAAV,CACMsP,KAAM,IAAI6B,EAAKnR,MAAMmF,OAAO,GAAGhE,UAC/BgE,OAAQgM,EAAKnR,MAAMmF,OAAO,GAC1BQ,YAAawL,EAAKnR,MAAM2F,YACxBsI,eAAgBkD,EAAKnR,MAAMiO,eAC3B3B,SAAU6E,EAAK7E,gBAI5BvM,KAAKqR,kDAMlB,OAAGrR,KAAKqM,MAAMuD,SAAWxL,IAAEkN,QAAQtR,KAAKC,MAAMmF,SAC1CmM,SACKC,gBAAgBC,MAAMC,YAAY,kBAAmB1R,KAAKC,MAAM6F,YAAY6L,eACzEvR,EAAAC,EAAAC,cAACsR,EAAD,CACAvO,mBAAoBrD,KAAKC,MAAM6F,YAC/BpC,kBAAmB1D,KAAK6R,gBACxBjM,YAAa5F,KAAKC,MAAM2F,YACxBR,OAAQpF,KAAKC,MAAMmF,OACnBlF,KAAMF,KAAKC,MAAMmF,UAIpBpF,KAAKqM,MAAMuD,QAUhB1K,EAAWE,OAAOpB,GAEd5D,EAAAC,EAAAC,cAAC8N,EAAA,EAAD,CAAS1N,UAAW,mBAChBN,EAAAC,EAAAC,cAACwR,EAAA,EAAD,CAAQC,QAAM,GACV3R,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAMtF,KAAK,QAAQkB,KAAK,OAAO7B,UAAQ,EAACgG,MAAM,SAC9CpG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sCAdRF,EAAAC,EAAAC,cAAC8N,EAAA,EAAD,CAAS1N,UAAW,mBAChBN,EAAAC,EAAAC,cAACwR,EAAA,EAAD,CAAQC,QAAM,GACV3R,EAAAC,EAAAC,cAAC0R,EAAA,EAAD,CAAQC,eAAa,EAACC,OAAO,YAA7B,iBnBpJC,WmBoJD,qBAjIGvO,aA6JZwO,eARS,SAAC9F,GACrB,MAAO,CACHjH,OAAQhB,IAAEC,OAAOgI,EAAMjH,QACvBQ,YAAayG,EAAMzG,YACnBsI,eAAe7B,EAAM6B,eACrBpI,YAAauG,EAAMvG,YAAY,KAGC,CAAC6K,UC5KhB,iCAAA9Q,EAAAgF,OAAAuN,EAAA,EAAAvN,CAAAwL,EAAAhQ,EAAAgS,KAAM,SAAAjC,EAAO3D,GAAP,IAAA6F,EAAAC,EAAA,OAAAlC,EAAAhQ,EAAAiQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACN+B,EAAWC,IAAI,gBADT,OACrBH,EADqB/B,EAAAmC,KAErBH,EAAkBrO,EAAiBoO,EAAOnO,KAAKA,MACrDsI,EAAS,CAACxG,KAAMb,EAAmBuN,QAASJ,IAHjB,wBAAAhC,EAAAK,SAAAR,MAAN,gBAAAwC,GAAA,OAAA/S,EAAAgT,MAAA7S,KAAAqH,YAAA,ID4K2BqJ,eCtKtB,iCAAAvF,EAAAtG,OAAAuN,EAAA,EAAAvN,CAAAwL,EAAAhQ,EAAAgS,KAAM,SAAAS,EAAOrG,GAAP,IAAA6F,EAAAC,EAAA,OAAAlC,EAAAhQ,EAAAiQ,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACX+B,EAAWC,IAAI,qBADJ,OAC1BH,EAD0BS,EAAAL,KAE1BH,EAAkBrO,EAAiBoO,EAAOnO,KAAKA,MACrDsI,EAAS,CAACxG,KAAMH,GAAkC6M,QAASJ,IAH3B,wBAAAQ,EAAAnC,SAAAkC,MAAN,gBAAAE,GAAA,OAAA7H,EAAA0H,MAAA7S,KAAAqH,YAAA,IDsKsC2I,eE5KtC,SAACiD,GAAD,OAAoB,SAACxG,GAC/C,IAAIyG,EAAQ,EACRC,EAAiB,GACrBF,EAAepF,QAAf,eAAAhO,EAAAgF,OAAAuN,EAAA,EAAAvN,CAAAwL,EAAAhQ,EAAAgS,KAAwB,SAAAjC,EAAOpP,GAAP,IAAAsR,EAAA,OAAAjC,EAAAhQ,EAAAiQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACC+B,EAAWC,IAAI,SAASzR,EAAK,iBAD9B,OACdsR,EADc/B,EAAAmC,KAEpBS,EAAenS,GAAQkD,EAAiBoO,EAAOnO,KAAKA,QACpD+O,IACaD,EAAe9S,QACxBsM,EAAS,CAACxG,KAAML,EAA4B+M,QAAQQ,IALpC,wBAAA5C,EAAAK,SAAAR,MAAxB,gBAAAwC,GAAA,OAAA/S,EAAAgT,MAAA7S,KAAAqH,YAAA,MFyKgFyI,eG7KtD,SAAC1K,EAAQjB,GAAT,sBAAAtE,EAAAgF,OAAAuN,EAAA,EAAAvN,CAAAwL,EAAAhQ,EAAAgS,KAAkB,SAAAjC,EAAO3D,GAAP,IAAA2G,EAAA,OAAA/C,EAAAhQ,EAAAiQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACxC2C,EAAe,IAAIC,UACVC,IAAI,QAASnP,EAAKiG,OAC/BgJ,EAAaE,IAAI,WAAYnP,EAAKoP,UAClCH,EAAaI,OAAO,OAAQrP,EAAK8H,KAAK,IAJMsE,EAAAE,KAAA,EAKvB5M,IAAM,CACvB4P,OAAQ,OACRC,IAAKtO,EAAOuO,eACZxP,KAAMiP,EACNhO,OAAQ,CAAEwO,QAAS,CAACC,eAAgB,sBAAwBC,OAAU,gBAT9B,OAAAvD,EAAAmC,KAWlCvO,KAAKY,SAAS,mEACpB0H,EAAS,CACLxG,KAAKJ,IAGT4G,EAAS,CACLxG,KAAKJ,IAjB+B,wBAAA0K,EAAAK,SAAAR,MAAlB,gBAAAwC,GAAA,OAAA/S,EAAAgT,MAAA7S,KAAAqH,YAAA,KH6Kf8K,CAAsFzC,8BI1KtFqE,eAAgB,CAC3BvF,KAAMwF,KACN9F,eCPW,WAAsB7G,UAAAlH,OAAA,QAAAmH,IAAAD,UAAA,IAAAA,UAAA,GACjC,QADiCA,UAAAlH,OAAA,EAAAkH,UAAA,QAAAC,GAClBrB,MACX,KAAKJ,EACD,OAAOA,EAEX,KAAKA,EACD,OAAOA,EACX,QACI,MAAO,KDAfC,YERW,WAAsB,IAArBuG,EAAqBhF,UAAAlH,OAAA,QAAAmH,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAI4M,EAAW5M,UAAAlH,OAAA,EAAAkH,UAAA,QAAAC,EACjC,OAAQ2M,EAAOhO,MACX,KAAKH,GACD,OAAOmO,EAAOtB,QAClB,QACI,OAAOtG,IFIfjH,OGTW,WAAsB,IAArBiH,EAAqBhF,UAAAlH,OAAA,QAAAmH,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAI4M,EAAW5M,UAAAlH,OAAA,EAAAkH,UAAA,QAAAC,EACjC,OAAQ2M,EAAOhO,MACX,KAAKb,EACD,OAAO6O,EAAOtB,QAClB,QACI,OAAOtG,IHKfzG,YIVW,WAAsB,IAArByG,EAAqBhF,UAAAlH,OAAA,QAAAmH,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAI4M,EAAW5M,UAAAlH,OAAA,EAAAkH,UAAA,QAAAC,EACjC,OAAQ2M,EAAOhO,MACX,KAAKL,EACD,OAAOqO,EAAOtB,QAClB,QACI,OAAOtG,MCIb6H,GAAmBC,OAAOC,sCAAwCC,IAClEC,GAAQC,YAAYC,GACtBN,GAAiBO,YAAgBC,OAGrCC,IAAS/E,OACLxP,EAAAC,EAAAC,cAACsU,EAAA,EAAD,CAAUN,MAAOA,IACblU,EAAAC,EAAAC,cAACuU,GAAD,OAEJtD,SAASuD,eAAe","file":"static/js/main.542732ce.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory();","import React, {Component} from 'react'\n\nimport {\n    Container,\n    Grid,\n    Menu,\n    Transition\n} from \"semantic-ui-react\";\nimport SplitText from 'react-pose-text';\nimport {Link, Router} from \"react-router-dom\";\nimport history from \"../history\";\nimport Particles from \"react-particles-js\";\n\nconst charPoses = {\n    exit: { opacity: 0, y: 20 },\n    enter: {\n        opacity: 1,\n        y: 0,\n        delay: ({ charIndex }) => charIndex * 60\n    }\n};\nclass App extends Component{\n    renderMenu(){\n        if (this.props.menu.length < 1){\n            return null\n        }\n        return (\n            <Menu inverted  widths={6} className={'mainMenu'}  pointing secondary  >\n                <Router history={history}>\n                    {\n                        this.props.menu.map(\n                            (item, key) => (\n                                <Menu.Item\n                                    name={item.reference}\n                                    key={`menuItem-${key}`}\n                                    as={Link}\n                                    to={'/'+item.reference}>\n                                    {item.name}\n                                </Menu.Item>\n                            ))\n                    }\n                </Router>\n            </Menu>\n        )\n    }\n    render() {\n        return(\n            <>\n            <div className='appContent' >\n                <div className={'welcome'}>\n                    <Transition\n                        visible={this.props.sloganText}\n                        animation={\"fade up\"}\n                        duration={{ show:2000 }}\n                    >\n                        <div>\n                            <Particles\n                                className={'particles'}\n                                params={{\n                                    \"particles\": {\n                                        \"number\": {\n                                            \"value\": 40\n                                        },\n                                        \"size\": {\n                                            \"value\": 3\n                                        }\n                                    },\n                                    \"interactivity\": {\n                                        \"events\": {\n                                            \"onhover\": {\n                                                \"enable\": true,\n                                                \"mode\": \"repulse\"\n                                            }\n                                        }\n                                    }\n                                }} />\n                        </div>\n                    </Transition>\n                <Container>\n                    <Grid columns={1} >\n                        <Grid.Row verticalAlign='middle' className={'welcome-box'} >\n                            <Grid.Column textAlign={'center'} >\n                                <div className=\"introName\">\n                                <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n                                    {this.props.applicationDetails.title}\n                                </SplitText>\n                                </div>\n                                <div className=\"sloganText\">\n                                    <Transition\n                                        unmountOnHide={false}\n                                        visible={this.props.sloganText}\n                                        animation={\"fade up\"}\n                                        duration={{ show:1000 }}\n                                    >\n                                        <div>\n                                            {this.props.applicationDetails.sub_title}\n                                        </div>\n                                    </Transition>\n                                </div>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Transition\n                            unmountOnHide={false}\n                            visible={this.props.sloganText}\n                            animation={\"fade down\"}\n                            duration={{ show:800 }}\n                        >\n                        <Grid.Row>\n                            <Grid.Column>\n                                {this.renderMenu()}\n                            </Grid.Column>\n                        </Grid.Row>\n                        </Transition>\n                    </Grid>\n                </Container>\n                </div>\n                <Transition\n                    unmountOnHide={false}\n                    visible={this.props.sloganText}\n                    animation={\"fade up\"}\n                    duration={{ show:1000 }}\n                >\n                <div className={'page-section'}>\n                    <Container>\n                        {this.props.activePageContent}\n                    </Container>\n                </div>\n                </Transition>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default App","export const baseUrl='http://165.22.196.58/data/keygenes/';\nexport const projectName='KeyGenes';\n","import axios from 'axios'\nimport {baseUrl} from \"../config\";\n\nexport default axios.create({\n   'baseURL': baseUrl\n});\n\n","export const configError = {\n    FAILED_CONFIG: \"application configuration could not be received from API\"\n};\n\nexport const moduleError = {\n    INVALID_MODULE: \"config item is assigned to an unknown module\",\n    INVALID_MODULE_ATTRS: `module config does not contain the required attrs`,\n    INVALID_MODULE_REF: \"reference alias doesn't refer to an item\",\n};\n","import _ from \"lodash\";\nimport {moduleError} from '../constants/errorTypes'\n\nexport const getOnlyPublished = (data) =>{\n\n    return _.values(_.filter(\n        data, function(item){ return item.status === 'published' || item.published === 'published' })\n    );\n};\n\nexport const validateAttributes = (obj, required_attributes) =>{\n    return (required_attributes.every(key => Object.keys(obj).includes(key)))\n};\n\nexport const validateReferenceAlias = (key, obj)=>{\n    return obj.hasOwnProperty(key)\n};\n\nexport class throwError{\n    static config = (message) =>{\n        console.error( `Configuration error -  ${message}`);\n    };\n    static module = (message) =>{\n        console.error( `Module error -  ${message}`);\n    };\n    static moduleAttr = (module, attrs) =>{\n        console.error( `Module error -  ${module} ${moduleError.INVALID_MODULE_ATTRS}: ${attrs}`);\n    };\n}","export const config = {\n    GET_CONFIG: \"GET_CONFIG\",\n    SET_CONFIG: \"SET_CONFIG\"\n};\n\nexport const collections = {\n    ADD_COLLECTION: \"ADD_COLLECTION\"\n};\n\nexport const protocol ={\n    PROTOCOL_COMPLETED:'PROTOCOL_COMPLETED',\n    PROTOCOL_FAILED :'PROTOCOL_FAILED',\n};\n\nexport const application ={\n    GET_APPLICATION_DONE: \"GET_APPLICATION_DONE\",\n    GET_APPLICATION_FAILED: \"GET_APPLICATION_FAILED\"\n};","export const required = value => value ? undefined : 'Required';\nexport const minValueChar = min => value => value.length && value.length < min ? `Must be at least ${min} characters` : undefined;\nexport const minValue5 = minValueChar(5);\nexport const email = value =>value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;","import React from 'react'\nimport {Button, Grid, Icon, Label} from \"semantic-ui-react\";\nimport {throwError} from \"../../utils/generalHelpers\";\n\n\nconst ButtonModule = (props) =>{\n    switch(props.setting.config.type) {\n        case 'github':\n            return(\n                <Grid.Row>\n                    <Grid.Column textAlign={'center'}>\n                        <a href={props.setting.config.config.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Button as='div' labelPosition='right'>\n                            <Button color='blue'>\n                                <Icon name='github' />\n                                GitHub\n                            </Button>\n                            <Label basic  pointing='left'>\n                                {props.setting.config.config.label}\n                            </Label>\n                        </Button>\n                        </a>\n                    </Grid.Column>\n                </Grid.Row>\n            );\n        case 'download':\n            return(\n                <Grid.Row>\n                    <Grid.Column textAlign={'center'}>\n                        <a href={props.setting.config.config.link} download target={'_blank'}>\n                        <Button icon labelPosition='left'>\n                            <Icon name='cloud' />\n                            {props.setting.config.config.label}\n                        </Button>\n                        </a>\n                    </Grid.Column>\n                </Grid.Row>\n            );\n        default:\n            throwError.module(`Button not rendered, type: ${props.moduleName} not found`);\n            return null;\n    }\n};\n\nexport default ButtonModule","import React from 'react'\nimport Parser from \"html-react-parser\";\nimport _ from 'lodash'\nimport {Grid, Header} from \"semantic-ui-react\";\nimport {throwError} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\nimport {validateAttributes, validateReferenceAlias} from \"../../utils/generalHelpers\"\n\nconst module = 'content';\nconst required_attributes = ['reference_alias', 'content'];\n\nconst getTitle = (title, size='h2') =>{\n    if(!title){\n        return null\n    }\n    return(\n        <Grid.Row>\n            <Grid.Column >\n                <Header as={size}>\n                    {title}\n                </Header>\n            </Grid.Column>\n        </Grid.Row>\n    )\n};\n\nconst ContentModule = (props) =>{\n    if (props.collection){\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        const pointer_set = _.keyBy(props.collection, 'reference_alias');\n        if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n            throwError.module(moduleError.INVALID_MODULE_REF);return null}\n        return (\n            <>\n            {getTitle(pointer_set[props.setting.alias_ref].title)}\n            <Grid.Row>\n                <Grid.Column>\n                {Parser(pointer_set[props.setting.alias_ref].content)}\n                </Grid.Column>\n            </Grid.Row>\n            </>\n        )\n    }\n    return null\n\n};\n\nexport default ContentModule","import React from 'react'\nimport {Grid} from \"semantic-ui-react\";\nimport Timeline from \"react-timeline-semantic-ui\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst module = 'tool_steps';\nconst required_attributes = ['icon', 'title', 'step_name', 'description', 'tags'];\n\n\nconst ToolStepModule = (props) =>{\n    if (props.collection){\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column className={'timeLine'}>\n                    {props.collection.map(\n                        (item, key) =>{\n                            let dir = ((key + 1)%2 === 1)?'left': 'right';\n                            return(\n                                <Timeline\n                                    key={`timelineItem-${key}`}\n                                    className={'time-item'}\n                                    direction={dir}\n                                    icon={item.icon}\n                                    title={item.title}\n                                    time={`${key+1} ${item.step_name}`}\n                                    description={item.description}\n                                    color=\"blue\"\n                                    tags={item.tags}\n                                    lineHeight={key}\n                                />\n                            )\n                        }\n                    )}\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default ToolStepModule","import React from 'react'\nimport _ from 'lodash'\nimport {Grid, Header, Icon, Image} from \"semantic-ui-react\";\nimport {List} from \"semantic-ui-react\";\nimport {throwError, validateAttributes, validateReferenceAlias} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\n\nconst getTitle = (title, size='h2') =>{\n    if(!title){\n        return null\n    }\n    return(\n        <Grid.Row>\n            <Grid.Column >\n                <Header as={size}>\n                    {title}\n                </Header>\n            </Grid.Column>\n        </Grid.Row>\n    )\n};\nconst ListModule = (props) =>{\n    if (props.collection){\n        switch (props.setting.config.type) {\n            case 'icon-list':\n                return renderIconList(props);\n            case 'download-list':\n                return renderDownloadList(props);\n            default:\n                return null\n        }\n    }\n    return null\n\n};\nconst renderIconList = (props) => {\n    const module = 'tool_steps';\n    const required_attributes = ['icon', 'title', 'description'];\n    if (!validateAttributes(props.collection[0], required_attributes)){\n        throwError.moduleAttr(module, required_attributes);return null}\n    const pointer_set = _.keyBy(props.collection, 'reference_alias');\n    if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n        throwError.module(moduleError.INVALID_MODULE_REF);return null}\n\n    return (\n        <>\n            {getTitle(props.setting.title)}\n            <Grid.Row>\n                <Grid.Column >\n                    <List divided relaxed>\n                        {props.collection.map(\n                            (item, key) => {\n                                return (\n                                    <List.Item key={`list-icon-${key}-${props.setting.collection}`}>\n                                        <List.Icon name={item.icon} size='large' verticalAlign='top' />\n                                        <List.Content>\n                                            <List.Header as='a'>{item.title}</List.Header>\n                                            <List.Description as='a'>{item.description}</List.Description>\n                                        </List.Content>\n                                    </List.Item>\n                                )\n                            }\n                        )}\n                    </List>\n                </Grid.Column>\n            </Grid.Row>\n        </>\n    );\n};\nconst renderDownloadList = (props) =>{\n    const module = 'tool_steps';\n    const required_attributes = ['link', 'title', 'description'];\n    if (!validateAttributes(props.collection[0].items[0], required_attributes)){\n        throwError.moduleAttr(module, required_attributes);return null}\n    const pointer_set = _.keyBy(props.collection, 'reference_alias');\n    if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n        throwError.module(moduleError.INVALID_MODULE_REF);return null}\n    return (\n        <Grid.Row>\n            <Grid.Column>\n                {getTitle(props.setting.title, 'h3')}\n                <List >\n                    {pointer_set[props.alias_ref].items.map(\n                        (item, key) => {\n                            return (\n                                <List.Item key={`download-list-${key}`}>\n                                    <Image avatar>\n                                        <a href={item.link} download>\n                                            <Icon avatar={'true'} circular inverted name='download' />\n                                        </a>\n                                    </Image>\n                                    <List.Content>\n                                        <List.Header>{item.title}</List.Header>\n                                        {item.description}\n                                    </List.Content>\n                                </List.Item>\n                            )\n                        }\n                    )}\n                </List>\n            </Grid.Column>\n        </Grid.Row>\n    );\n}\n\nexport default ListModule","import React from 'react'\nimport {Grid} from \"semantic-ui-react\";\nimport Parser from \"html-react-parser\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst FaqModule = (props) =>{\n    if (props.collection){\n        let module = 'faqs';\n        let required_attributes = ['question', 'answer'];\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column>\n                    {props.collection.map(\n                        (item, key) =>{\n\n                            return (\n                                <div key={`question-answer-${key}`}>\n                                    <p><b>Q: {item.question}</b></p>\n                                    {Parser(item.answer)}\n                                    <br/>\n                                </div>\n                            )\n                        }\n                    )}\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default FaqModule","import React from 'react'\nimport {Grid, Icon, Image} from \"semantic-ui-react\";\nimport {Card} from \"semantic-ui-react\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst checkImage = (cardData) =>{\n    try{\n        return cardData.image.data.full_url\n    }\n    catch (e) {\n        return 'https://via.placeholder.com/150'\n    }\n};\nconst renderCard =  (cardData ,key) =>{\n    return (\n        <Card key={`contact-card-${key}`}>\n            <Image src={checkImage(cardData)} wrapped ui={false} />\n            <Card.Content>\n                <Card.Header>{cardData.name}</Card.Header>\n                <Card.Meta>\n                    <span className='date'>\n                        Joined in {cardData.year_joined}{cardData.year_left? \", left in \"+cardData.year_left:\"\"}\n                    </span>\n                </Card.Meta>\n                <Card.Description>\n                    {cardData.job_description}\n                </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                    <Icon name='mail' />\n                    {cardData.email}\n            </Card.Content>\n        </Card>\n    )\n};\n\nconst ContactCardsModule = (props) =>{\n    if (props.collection){\n        let module = 'contact-cards';\n        let required_attributes = ['name', 'job_description', 'year_joined'];\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column>\n                    <Card.Group textAlign={'center'} itemsPerRow={3}>\n                        {props.collection.map(\n                            (item, key) =>{\n                                return renderCard(item, key)\n                            }\n                        )}\n                    </Card.Group>\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default ContactCardsModule","import React from 'react'\nimport {Form, Input} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) =>{\n    if(touched && error){\n        return(\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\nexport default (input, label, meta, inputAttr) =>{\n    return(\n        <Form.Field>\n            <label>{label}</label>\n            <Input {...input}  {...inputAttr} autoComplete='off' />\n            {renderError(meta)}\n        </Form.Field>\n    )\n};\n\n","import React from 'react'\nimport {Form, Input} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) =>{\n    if(touched && error){\n        return(\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\n\nexport default  ({ input: {value: omitValue, ...inputProps }, meta: omitMeta, ...props }) =>{\n    return(\n        <Form.Field>\n            <label>{props.label}</label>\n            <Input\n                type={'file'}\n                {...inputProps}\n                {...props.input}\n                autoComplete='off' />\n            {renderError(omitMeta)}\n        </Form.Field>\n    )\n};\n","import React from 'react'\nimport {Dropdown, Form} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) => {\n    if (touched && error) {\n        return (\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\nexport default (input, label, meta, inputAttr) => {\n    return (\n        <Form.Field>\n            <label>{label}</label>\n            <Dropdown selection {...input}\n                      {...inputAttr}\n                      value={input.value}\n                      onChange={(param, data) => input.onChange(data.value)}\n                      placeholder={label}\n            />\n            {renderError(meta)}\n        </Form.Field>\n    )\n};\n\n","import checkBox from './checkBoxInput'\nimport text from './textInput'\nimport file from './fileInput'\nimport slider from \"./sliderInput\";\nimport select from \"./selectInput\";\n\nexport const textInput = ({input,label,meta,inputAttr}) => text(input,label,meta,inputAttr);\nexport const fileInput = (props) => file(props);\nexport const selectInput = ({input,label,meta,inputAttr}) => select(input,label,meta,inputAttr);\nexport const checkBoxInput = ({input,label,meta,inputAttr={}}) => checkBox(input,label,meta,inputAttr);\nexport const sliderInput = ({input,label,meta,inputAttr={}}) => slider(input,label,meta,inputAttr);\n","import React, {Component} from 'react'\nimport {Button, Form, Grid, Icon, Segment, Transition} from \"semantic-ui-react\";\nimport {Field, reduxForm, reset} from \"redux-form\";\nimport {required} from \"../../constants/formValidationRules\";\nimport {fileInput, selectInput, textInput} from \"../helpers/redux-form-inputs\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\nimport {protocol} from \"../../constants/types\";\n\nclass FormModule extends Component{\n\n    state = {fileInputCode: 'fileCode'};\n    onSubmit = (formValues, dispatch) =>{\n        this.props.onSubmit(\n            this.props.collection['form'][0],\n            formValues\n        );\n        dispatch(reset('mainForm'));\n        this.setState({fileInputCode: Math.random().toString(36).substring(7)})\n    };\n    renderForm(){\n        if(this.props.collection['inputs'].length < 1){\n            return <b><i>Form under construction!</i></b>\n        }else{\n            return (\n                <div>\n                    {this.renderInputs()}\n                    <Button type={'submit'} icon labelPosition='left' size='large'  floated='right'>\n                        <Icon name='paper plane' />\n                        Run!\n                    </Button>\n                </div>\n            )\n        }\n    }\n    renderInputType = (input, key) => {\n        switch (input.input_type.type) {\n            case 'text':\n                return (\n                    <Field\n                        key={`field-input-${key}`}\n                        name={input.api_reference_parameter}\n                        component={textInput}\n                        validate={[ required ]}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`,\n                            type:'text',\n                        }}\n                    />\n                );\n            case 'file':\n                return (\n                    <Field\n                        key={`field-input-${key}-${this.state.fileInputCode}`}\n                        name={input.api_reference_parameter}\n                        component={fileInput}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`\n                        }}\n                    />\n                );\n            case 'select':\n                const options = this.createOptions(key, input.option_titles, input.option_values);\n                return (\n                    <Field\n                        key={`field-input-${key}`}\n                        name={input.api_reference_parameter}\n                        component={selectInput}\n                        validate={[ required ]}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`,\n                            options: options}\n\n                        }\n                    />\n                );\n            default:\n                return null\n\n        }\n    };\n    createOptions = (index, titles, values) => {\n        const options = [];\n        titles.forEach(\n            (title, key) =>{\n                options.push({\n                    'key': `optionItem-${index}-${key}`,\n                    'text': titles[key],\n                    'value': values[key]\n                })\n            }\n        );\n        return options\n    };\n    renderInputs(){\n        return this.props.collection['inputs'].map(\n            (input, key) => this.renderInputType(input, key)\n        )\n    }\n\n    render() {\n        if(!this.props.collection['inputs']){\n            return null\n        }\n        let module = 'form:form';\n        let required_attributes = ['title', 'api', 'tool_reference', 'description'];\n        if (!validateAttributes(this.props.collection['form'][0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        module = 'form:inputs';\n        required_attributes = ['api_reference_parameter', 'label', 'input_type'];\n        if (!validateAttributes(this.props.collection['inputs'][0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return(\n                <Grid.Row>\n                    <Grid.Column>\n                        {(this.props.protocolStatus === protocol.PROTOCOL_COMPLETED)?(\n                            <Transition\n                                transitionOnMount={true}\n                                animation={\"slide down\"}\n                                duration={{ show:1000 }}\n                            >\n                                <Segment color={'green'}>\n                                    <b>Algorithm executed!</b> Dataset will be in your mail when ready\n                                </Segment>\n                            </Transition>\n                        ):''\n                        }\n                        {(this.props.protocolStatus === protocol.PROTOCOL_FAILED)?(\n                            <Transition\n                                transitionOnMount={true}\n                                animation={\"slide down\"}\n                                duration={{ show:1000 }}\n                            >\n                                <Segment color={'red'}>\n                                    <b>Algorithm encountered an error!</b> please make sure the configuration is setup correctly\n                                </Segment>\n                            </Transition>\n                        ):''\n                        }\n                        <h3>Configuration</h3>\n                        <Form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                            {this.renderForm()}\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n        )\n    }\n\n}\nexport default reduxForm({\n    form:'mainForm'\n})(FormModule)","import React from 'react'\n\nimport ButtonModule from './ButtonModule'\nimport ContentModule from './ContentModule'\nimport ToolStepModule from './ToolStepsModule'\nimport ListModule from \"./ListModule\";\nimport FaqModule from \"./FaqModule\";\nimport ContactCardsModule from \"./ContactCardsModule\";\nimport FormModule from \"./FormModule\";\nimport {throwError} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\n\nconst ModuleLoader = (props) =>  {\n    switch(props.setting.module) {\n        case 'content':\n            return (\n                <ContentModule\n                    setting={props.setting}\n                    collection={props.collection}\n                />\n            );\n        case 'button':\n            return (\n                <ButtonModule\n                    setting={props.setting}\n                />\n            );\n        case 'tool_steps':\n            return (\n                <ToolStepModule\n                    collection={props.collection}\n                />\n            );\n        case 'list':\n            return(\n                <ListModule\n                    alias_ref={props.setting.alias_ref}\n                    setting={props.setting}\n                    collection={props.collection}\n                />\n            );\n        case 'faqs':\n            return (\n                <FaqModule\n                    collection={props.collection}\n                />\n            );\n        case 'contact-cards':\n            return(\n                <ContactCardsModule\n                    collection={props.collection}\n                />\n            );\n        case 'form':\n            return(\n                <FormModule\n                    onSubmit={props.onSubmit}\n                    collection={props.collection}\n                    protocolStatus={props.protocolStatus}\n                />\n            );\n        default:\n            throwError.module(moduleError.INVALID_MODULE);\n            return null\n    }\n};\n\nexport default ModuleLoader","\nimport React, {Component} from 'react'\nimport ModuleLoader from './modules/moduleLoader'\nimport {Grid, Header} from \"semantic-ui-react\";\n\nclass Page extends Component{\n\n    getCollection (collection){\n        if (!collection){\n            return null\n        }\n        if (collection in this.props.collections){\n            return this.props.collections[collection]\n        }\n        else{\n            return null\n        }\n    }\n    renderModules(){\n        return this.props.config.settings.map(\n            (setting, key) =>{\n                if (setting.module === 'form'){\n                    return(\n                        <ModuleLoader\n                            onSubmit={this.props.onSubmit}\n                            page={this.props.config.name}\n                            key={`module-${this.props.config.reference}-${key}`}\n                            collection={{\n                                'form': this.getCollection(setting.collection),\n                                'inputs': this.getCollection('inputs')\n                            }}\n                            setting={setting}\n                            protocolStatus={this.props.protocolStatus}\n                        />\n                    )\n                }\n                return (\n                    <ModuleLoader\n                        page={this.props.config.name}\n                        key={`module-${this.props.config.reference}-${key}`}\n                        collection={this.getCollection(setting.collection)}\n                        setting={setting}\n                    />\n                )\n            }\n        )\n    }\n    render() {\n        if (!this.props.path){\n            return null\n        }\n        return (\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Header as='h1' dividing>\n                            {this.props.config.name}\n                        </Header>\n                    </Grid.Column>\n                </Grid.Row>\n                {this.renderModules()}\n            </Grid>\n        )\n    }\n\n}\nexport  default  Page;","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\n\nimport App from \"../components/App\";\nimport {Dimmer, Icon, Loader, Segment} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport 'fs'\nimport history from '../history'\n\nimport {getConfig, getApplication} from '../actions/configActions'\nimport {getCollections} from '../actions/collectionActions'\nimport {Route, Router, Switch} from \"react-router-dom\";\nimport Page from \"../components/Page\";\nimport {directProtocol} from '../actions/protocols/directProtocolActions'\n\nimport {projectName, baseUrl} from \"../config.js\";\nimport {throwError} from \"../utils/generalHelpers\";\nimport {configError} from '../constants/errorTypes'\n\n\nclass AppContainer extends Component {\n\n    state = {\n        menu: [],\n        sloganText: false,\n        pageView: false,\n        render: false,\n        config: false\n    };\n    onSubmit = (config, values) => {\n        switch (config.api.protocol) {\n            case 'direct':\n                this.props.directProtocol(config, values);\n            break;\n            default:\n                console.log('No valid protocol connected to form')\n        }\n    };\n    getCollections = () =>{\n        const collections = [];\n        this.props.config.forEach(\n            (settingItem) => {\n                settingItem.settings.forEach(\n                    (item) =>{\n                        if(item.collection){\n                            if(item.collection === 'form'){\n                                collections.push(item.collection);\n                                collections.push('inputs');\n                            }\n                            collections.push(item.collection)\n                        }\n                    }\n                )\n            }\n        );\n        return _.uniq(collections)\n    };\n\n    loadConfig = async () =>{\n        await this.props.getApplication();\n        await this.props.getConfig();\n        const collections = this.getCollections();\n        await this.props.getCollections(collections);\n        this.setState({menu:this.props.config});\n    };\n\n    UNSAFE_componentWillMount(){\n        if(baseUrl !== null){\n            this.setState({config: true});\n        }\n    }\n    componentDidMount() {\n        this.loadConfig();\n        setTimeout(function() {\n            this.setState({render: true})\n        }.bind(this), 2000);\n        setTimeout(\n            () => {\n                this.setState({sloganText: true})\n            }, 1200);\n    }\n    renderRoutes() {\n        return this.props.config.map(\n            (item) =>{\n                return (\n                    <Route\n                        key={`route-${item.reference}`}\n                        path={'/'+item.reference}\n                        exact\n                        render={(props) => this.wrapTransition(\n                            <Page\n                                {...props}\n                                path={'/'+item.reference}\n                                config={item}\n                                collections={this.props.collections}\n                                onSubmit={this.onSubmit}\n                                protocolStatus={this.props.protocolStatus}\n                            />)\n                        }\n                    />\n                )\n            }\n        )\n    }\n    wrapTransition =  (object) => {\n        return object\n    };\n    renderContent() {\n        if(this.props.config.length === 0){\n            return null\n        }\n        return (\n            <Router history={history}>\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        exact\n                        render={(props) => this.wrapTransition(\n                            <Page {...props}\n                                  path={'/'+this.props.config[0].reference}\n                                  config={this.props.config[0]}\n                                  collections={this.props.collections}\n                                  protocolStatus={this.props.protocolStatus}\n                                  onSubmit={this.onSubmit}\n                            />)\n                        }\n                    />\n                    {this.renderRoutes()}\n                </Switch>\n            </Router>\n        );\n    }\n    render() {\n        if(this.state.render && !_.isEmpty(this.props.config)) {\n            document\n                .documentElement.style.setProperty(\"--color-primary\", this.props.application.primary_color);\n            return (<App\n                    applicationDetails={this.props.application}\n                    activePageContent={this.renderContent()}\n                    collections={this.props.collections}\n                    config={this.props.config}\n                    menu={this.props.config}\n                    />\n            )\n        }\n        else if(!this.state.render){\n            return (\n                <Segment className={'loading-segment'}>\n                    <Dimmer active>\n                        <Loader indeterminate inline='centered'>Preparing the {projectName} website</Loader>\n                    </Dimmer>\n                </Segment>\n            )\n        }\n        else{\n            throwError.config(configError.FAILED_CONFIG);\n            return (\n                <Segment className={'loading-segment'}>\n                    <Dimmer active>\n                        <Icon name='close' size='huge' inverted color='grey' />\n                        <br/>\n                        <p>Failed to load website</p>\n                    </Dimmer>\n                </Segment>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        config: _.values(state.config),\n        collections: state.collections,\n        protocolStatus:state.protocolStatus,\n        application: state.application[0]\n    }\n};\nexport default connect(mapStateToProps, {getConfig, getApplication, getCollections, directProtocol})(AppContainer)","import SascWebApi from \"../apis/SascWeb\";\nimport {getOnlyPublished} from '../utils/generalHelpers'\nimport {application, config} from '../constants/types'\n\n\nexport const getConfig = () => async (dispatch) =>{\n    const result = await SascWebApi.get('items/config');\n    const publishedConfig = getOnlyPublished(result.data.data);\n    dispatch({type: config.SET_CONFIG, payload: publishedConfig})\n};\n\nexport const getApplication = () => async (dispatch) =>{\n    const result = await SascWebApi.get('items/application');\n    const publishedConfig = getOnlyPublished(result.data.data);\n    dispatch({type: application.GET_APPLICATION_DONE, payload: publishedConfig})\n};","import SascWebApi from \"../apis/SascWeb\";\nimport {getOnlyPublished} from '../utils/generalHelpers'\nimport {collections} from '../constants/types'\n\n\nexport const getCollections = (rawCollections) => (dispatch) =>{\n    let count = 0;\n    let collectionData = {};\n    rawCollections.forEach( async (item) => {\n        const result = await SascWebApi.get('items/'+item+'?fields=*.*.*');\n        collectionData[item] = getOnlyPublished(result.data.data);\n        count++;\n        if(count === rawCollections.length){\n            dispatch({type: collections.ADD_COLLECTION, payload:collectionData})\n        }\n    });\n\n};\n\n\n\n","import axios from \"axios\";\n\nimport {protocol} from '../../constants/types'\n\nexport const directProtocol = (config, data) => async (dispatch) => {\n    let bodyFormData = new FormData();\n    bodyFormData.set('email', data.email);\n    bodyFormData.set('training', data.training);\n    bodyFormData.append('file', data.file[0]);\n    const result = await axios({\n        method: 'post',\n        url: config.tool_reference,\n        data: bodyFormData,\n        config: { headers: {'Content-Type': 'multipart/form-data',  'Accept': 'text/html' }}\n    });\n    if(result.data.includes(\"Succesfully submitted. Please check your email in a few minutes\")){\n        dispatch({\n            type:protocol.PROTOCOL_COMPLETED\n        });\n    }else{\n        dispatch({\n            type:protocol.PROTOCOL_FAILED\n        });\n    }\n};","import {combineReducers} from \"redux\";\nimport {reducer as formReducer} from 'redux-form'\nimport configReducer from './configReducer'\nimport collectionsReducer from \"./collectionsReducer\";\nimport protocolStatusReducer from './protocols/protocolStatusReducer'\nimport applicationReducer from \"./applicationReducer\";\n\nexport default combineReducers({\n    form: formReducer,\n    protocolStatus: protocolStatusReducer,\n    application: applicationReducer,\n    config: configReducer,\n    collections: collectionsReducer\n});","import {protocol} from \"../../constants/types\";\n\nexport default (state='', action) => {\n    switch (action.type) {\n        case protocol.PROTOCOL_COMPLETED:\n            return protocol.PROTOCOL_COMPLETED;\n\n        case protocol.PROTOCOL_FAILED:\n            return protocol.PROTOCOL_FAILED;\n        default:\n            return ''\n    }\n}","import {application} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case application.GET_APPLICATION_DONE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {config} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case config.SET_CONFIG:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {collections} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case collections.ADD_COLLECTION:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport App from \"./containers/AppContainer\";\nimport 'semantic-ui-css/semantic.min.css'\nimport './assets/main.css'\nimport reducers from './reducers'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}