{"version":3,"sources":["history.js","components/App.js","config.js","apis/SascWeb.js","constants/errorTypes.js","utils/generalHelpers.js","constants/types.js","constants/formValidationRules.js","components/modules/ButtonModule.js","components/modules/ContentModule.js","components/modules/ToolStepsModule.js","components/modules/ListModule.js","components/modules/FaqModule.js","components/modules/ContactCardsModule.js","components/helpers/redux-form-inputs/textInput.js","components/helpers/redux-form-inputs/fileInput.js","components/helpers/redux-form-inputs/selectInput.js","components/helpers/redux-form-inputs/index.js","components/modules/FormModule.js","components/modules/GeneFinderModule.js","components/modules/moduleLoader.js","components/Page.js","containers/AppContainer.js","actions/configActions.js","actions/collectionActions.js","actions/protocols/directProtocolActions.js","actions/modules/geneFinderActions.js","reducers/modules/genefinder/index.js","reducers/modules/genefinder/suggestionsReducer.js","reducers/modules/genefinder/activeGeneReducer.js","reducers/modules/genefinder/transcriptsReducer.js","reducers/modules/index.js","reducers/index.js","reducers/protocols/protocolStatusReducer.js","reducers/applicationReducer.js","reducers/configReducer.js","reducers/collectionsReducer.js","index.js"],"names":["createBrowserHistory","charPoses","exit","opacity","y","enter","delay","_ref","charIndex","App","this","props","menu","length","react_default","a","createElement","Menu","inverted","widths","className","pointing","secondary","react_router","history","map","item","key","Item","name","reference","concat","as","Link","to","Fragment","Transition","visible","sloganText","animation","duration","show","particles_default","params","particles","number","value","size","interactivity","events","onhover","enable","mode","Container","Grid","columns","Row","verticalAlign","Column","textAlign","react_pose_text_es","initialPose","pose","applicationDetails","title","unmountOnHide","sub_title","renderMenu","activePageContent","Component","baseUrl","axios","create","baseURL","configError","moduleError","getOnlyPublished","data","_","values","filter","status","published","validateAttributes","obj","required_attributes","every","Object","keys","includes","validateReferenceAlias","hasOwnProperty","throwError","classCallCheck","config","message","console","error","module","moduleAttr","attrs","min","collections","protocol","application","modules","GET_SUGGESTIONS","SET_ACTIVE_GENE","GET_GENE_COUNTS","ButtonModule","setting","type","href","link","target","rel","Button","labelPosition","color","Icon","Label","basic","label","download","icon","moduleName","ContentModule","collection","pointer_set","keyBy","alias_ref","arguments","undefined","Header","getTitle","Parser","content","ToolStepModule","dir","dist_default","direction","time","step_name","description","tags","lineHeight","renderIconList","List","divided","relaxed","Content","Description","renderDownloadList","items","Image","avatar","circular","ListModule","FaqModule","question","answer","checkImage","cardData","image","full_url","e","ContactCardsModule","Card","Group","itemsPerRow","src","wrapped","ui","Meta","year_joined","year_left","job_description","extra","email","renderCard","required","redux_form_inputs_textInput","input","meta","inputAttr","Form","Field","Input","assign","autoComplete","touched","renderError","redux_form_inputs_fileInput","_ref2","_ref2$input","inputProps","objectWithoutProperties","omitMeta","redux_form_inputs_selectInput","Dropdown","selection","onChange","param","placeholder","textInput","text","fileInput","file","selectInput","select","FormModule","state","fileInputCode","onSubmit","formValues","dispatch","_this","reset","setState","Math","random","toString","substring","renderInputType","input_type","api_reference_parameter","component","validate","toLowerCase","options","createOptions","option_titles","option_values","index","titles","forEach","push","renderInputs","floated","_this2","protocolStatus","transitionOnMount","Segment","handleSubmit","renderForm","reduxForm","form","initialState","isLoading","selected","tissues","stages","GeneFinderModule","generatePlotTraces","plotTraces","stage_groups","groupBy","remove","currentObject","count","trace","x","marker","handleResultSelect","result","setGene","ensg","getGeneCounts","id","handleSearchChange","event","getGeneSuggestions","moduleData","geneCounts","react_plotly_default","layout","width","height","hovermode","activeGene","symbol","xaxis","tickvals","range","tissue","ticktext","Dimmer","active","Loader","chain","mapValues","stage","_this$state","centered","Search","loading","onResultSelect","onSearchChange","debounce","leading","results","suggestions","renderGraph","ModuleLoader","modules_ContentModule","modules_ButtonModule","ToolStepsModule","modules_ListModule","modules_FaqModule","modules_ContactCardsModule","modules_FormModule","modules_GeneFinderModule","modulesData","geneFinder","Page","settings","moduleLoader","page","getCollection","inputs","path","dividing","renderModules","AppContainer","pageView","render","api","directProtocol","log","getCollections","settingItem","uniq","loadConfig","_callee","regenerator_default","wrap","_context","prev","next","getApplication","getConfig","stop","wrapTransition","object","setTimeout","bind","_this3","exact","components_Page","_this4","renderRoutes","isEmpty","document","documentElement","style","setProperty","primary_color","components_App","renderContent","indeterminate","inline","connect","asyncToGenerator","mark","publishedConfig","SascWebApi","get","sent","payload","_x","apply","_callee2","_context2","_x2","rawCollections","collectionData","bodyFormData","FormData","set","training","append","method","url","tool_reference","headers","Content-Type","Accept","searchTerm","geneFinderReducers","combineReducers","action","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","es","containers_AppContainer","getElementById"],"mappings":"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","file":"static/js/main.5fa692c6.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory();","import React, {Component} from 'react'\n\nimport {\n    Container,\n    Grid,\n    Menu,\n    Transition\n} from \"semantic-ui-react\";\nimport SplitText from 'react-pose-text';\nimport {Link, Router} from \"react-router-dom\";\nimport history from \"../history\";\nimport Particles from \"react-particles-js\";\n\nconst charPoses = {\n    exit: { opacity: 0, y: 20 },\n    enter: {\n        opacity: 1,\n        y: 0,\n        delay: ({ charIndex }) => charIndex * 60\n    }\n};\nclass App extends Component{\n    renderMenu(){\n        if (this.props.menu.length < 1){\n            return null\n        }\n        return (\n            <Menu inverted  widths={6} className={'mainMenu'}  pointing secondary  >\n                <Router history={history}>\n                    {\n                        this.props.menu.map(\n                            (item, key) => (\n                                <Menu.Item\n                                    name={item.reference}\n                                    key={`menuItem-${key}`}\n                                    as={Link}\n                                    to={'/'+item.reference}>\n                                    {item.name}\n                                </Menu.Item>\n                            ))\n                    }\n                </Router>\n            </Menu>\n        )\n    }\n    render() {\n        return(\n            <>\n            <div className='appContent' >\n                <div className={'welcome'}>\n                    <Transition\n                        visible={this.props.sloganText}\n                        animation={\"fade up\"}\n                        duration={{ show:2000 }}\n                    >\n                        <div>\n                            <Particles\n                                className={'particles'}\n                                params={{\n                                    \"particles\": {\n                                        \"number\": {\n                                            \"value\": 40\n                                        },\n                                        \"size\": {\n                                            \"value\": 3\n                                        }\n                                    },\n                                    \"interactivity\": {\n                                        \"events\": {\n                                            \"onhover\": {\n                                                \"enable\": true,\n                                                \"mode\": \"repulse\"\n                                            }\n                                        }\n                                    }\n                                }} />\n                        </div>\n                    </Transition>\n                <Container>\n                    <Grid columns={1} >\n                        <Grid.Row verticalAlign='middle' className={'welcome-box'} >\n                            <Grid.Column textAlign={'center'} >\n                                <div className=\"introName\">\n                                <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n                                    {this.props.applicationDetails.title}\n                                </SplitText>\n                                </div>\n                                <div className=\"sloganText\">\n                                    <Transition\n                                        unmountOnHide={false}\n                                        visible={this.props.sloganText}\n                                        animation={\"fade up\"}\n                                        duration={{ show:1000 }}\n                                    >\n                                        <div>\n                                            {this.props.applicationDetails.sub_title}\n                                        </div>\n                                    </Transition>\n                                </div>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Transition\n                            unmountOnHide={false}\n                            visible={this.props.sloganText}\n                            animation={\"fade down\"}\n                            duration={{ show:800 }}\n                        >\n                        <Grid.Row>\n                            <Grid.Column>\n                                {this.renderMenu()}\n                            </Grid.Column>\n                        </Grid.Row>\n                        </Transition>\n                    </Grid>\n                </Container>\n                </div>\n                <Transition\n                    unmountOnHide={false}\n                    visible={this.props.sloganText}\n                    animation={\"fade up\"}\n                    duration={{ show:1000 }}\n                >\n                <div className={'page-section'}>\n                    <Container>\n                        {this.props.activePageContent}\n                    </Container>\n                </div>\n                </Transition>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default App","export const baseUrl='http://165.22.196.58:8080/keygenesnew/';\nexport const projectName='KeyGenes';\n","import axios from 'axios'\nimport {baseUrl} from \"../config\";\n\nexport default axios.create({\n   'baseURL': baseUrl\n});\n\n","export const configError = {\n    FAILED_CONFIG: \"application configuration could not be received from API\"\n};\n\nexport const moduleError = {\n    INVALID_MODULE: \"config item is assigned to an unknown module\",\n    INVALID_MODULE_ATTRS: `module config does not contain the required attrs`,\n    INVALID_MODULE_REF: \"reference alias doesn't refer to an item\",\n};\n","import _ from \"lodash\";\nimport {moduleError} from '../constants/errorTypes'\n\nexport const getOnlyPublished = (data) =>{\n\n    return _.values(_.filter(\n        data, function(item){ return item.status === 'published' || item.published === 'published' })\n    );\n};\n\nexport const validateAttributes = (obj, required_attributes) =>{\n    return (required_attributes.every(key => Object.keys(obj).includes(key)))\n};\n\nexport const validateReferenceAlias = (key, obj)=>{\n    return obj.hasOwnProperty(key)\n};\n\nexport class throwError{\n    static config = (message) =>{\n        console.error( `Configuration error -  ${message}`);\n    };\n    static module = (message) =>{\n        console.error( `Module error -  ${message}`);\n    };\n    static moduleAttr = (module, attrs) =>{\n        console.error( `Module error -  ${module} ${moduleError.INVALID_MODULE_ATTRS}: ${attrs}`);\n    };\n}","export const config = {\n    GET_CONFIG: \"GET_CONFIG\",\n    SET_CONFIG: \"SET_CONFIG\"\n};\n\nexport const collections = {\n    ADD_COLLECTION: \"ADD_COLLECTION\"\n};\n\nexport const protocol ={\n    PROTOCOL_COMPLETED:'PROTOCOL_COMPLETED',\n    PROTOCOL_FAILED :'PROTOCOL_FAILED',\n};\n\nexport const application ={\n    GET_APPLICATION_DONE: \"GET_APPLICATION_DONE\",\n    GET_APPLICATION_FAILED: \"GET_APPLICATION_FAILED\"\n};\n\nexport const modules ={\n    geneFinder: {\n        GET_SUGGESTIONS: \"GET_SUGGESTIONS\",\n        SET_ACTIVE_GENE: \"SET_ACTIVE_GENE\",\n        GET_GENE_COUNTS: \"GET_GENE_COUNTS\"\n    }\n\n};","export const required = value => value ? undefined : 'Required';\nexport const minValueChar = min => value => value.length && value.length < min ? `Must be at least ${min} characters` : undefined;\nexport const minValue5 = minValueChar(5);\nexport const email = value =>value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;","import React from 'react'\nimport {Button, Grid, Icon, Label} from \"semantic-ui-react\";\nimport {throwError} from \"../../utils/generalHelpers\";\n\n\nconst ButtonModule = (props) =>{\n    switch(props.setting.config.type) {\n        case 'github':\n            return(\n                <Grid.Row>\n                    <Grid.Column textAlign={'center'}>\n                        <a href={props.setting.config.config.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Button as='div' labelPosition='right'>\n                            <Button color='blue'>\n                                <Icon name='github' />\n                                GitHub\n                            </Button>\n                            <Label basic  pointing='left'>\n                                {props.setting.config.config.label}\n                            </Label>\n                        </Button>\n                        </a>\n                    </Grid.Column>\n                </Grid.Row>\n            );\n        case 'download':\n            return(\n                <Grid.Row>\n                    <Grid.Column textAlign={'center'}>\n                        <a href={props.setting.config.config.link} download target={'_blank'}>\n                        <Button icon labelPosition='left'>\n                            <Icon name='cloud' />\n                            {props.setting.config.config.label}\n                        </Button>\n                        </a>\n                    </Grid.Column>\n                </Grid.Row>\n            );\n        default:\n            throwError.module(`Button not rendered, type: ${props.moduleName} not found`);\n            return null;\n    }\n};\n\nexport default ButtonModule","import React from 'react'\nimport Parser from \"html-react-parser\";\nimport _ from 'lodash'\nimport {Grid, Header} from \"semantic-ui-react\";\nimport {throwError} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\nimport {validateAttributes, validateReferenceAlias} from \"../../utils/generalHelpers\"\n\nconst module = 'content';\nconst required_attributes = ['reference_alias', 'content'];\n\nconst getTitle = (title, size='h2') =>{\n    if(!title){\n        return null\n    }\n    return(\n        <Grid.Row>\n            <Grid.Column >\n                <Header as={size}>\n                    {title}\n                </Header>\n            </Grid.Column>\n        </Grid.Row>\n    )\n};\n\nconst ContentModule = (props) =>{\n    if (props.collection){\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        const pointer_set = _.keyBy(props.collection, 'reference_alias');\n        if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n            throwError.module(moduleError.INVALID_MODULE_REF);return null}\n        return (\n            <>\n            {getTitle(pointer_set[props.setting.alias_ref].title)}\n            <Grid.Row>\n                <Grid.Column>\n                {Parser(pointer_set[props.setting.alias_ref].content)}\n                </Grid.Column>\n            </Grid.Row>\n            </>\n        )\n    }\n    return null\n\n};\n\nexport default ContentModule","import React from 'react'\nimport {Grid} from \"semantic-ui-react\";\nimport Timeline from \"react-timeline-semantic-ui\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst module = 'tool_steps';\nconst required_attributes = ['icon', 'title', 'step_name', 'description', 'tags'];\n\n\nconst ToolStepModule = (props) =>{\n    if (props.collection){\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column className={'timeLine'}>\n                    {props.collection.map(\n                        (item, key) =>{\n                            let dir = ((key + 1)%2 === 1)?'left': 'right';\n                            return(\n                                <Timeline\n                                    key={`timelineItem-${key}`}\n                                    className={'time-item'}\n                                    direction={dir}\n                                    icon={item.icon}\n                                    title={item.title}\n                                    time={`${key+1} ${item.step_name}`}\n                                    description={item.description}\n                                    color=\"blue\"\n                                    tags={item.tags}\n                                    lineHeight={key}\n                                />\n                            )\n                        }\n                    )}\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default ToolStepModule","import React from 'react'\nimport _ from 'lodash'\nimport {Grid, Header, Icon, Image} from \"semantic-ui-react\";\nimport {List} from \"semantic-ui-react\";\nimport {throwError, validateAttributes, validateReferenceAlias} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\n\nconst getTitle = (title, size='h2') =>{\n    if(!title){\n        return null\n    }\n    return(\n        <Grid.Row>\n            <Grid.Column >\n                <Header as={size}>\n                    {title}\n                </Header>\n            </Grid.Column>\n        </Grid.Row>\n    )\n};\nconst ListModule = (props) =>{\n    if (props.collection){\n        switch (props.setting.config.type) {\n            case 'icon-list':\n                return renderIconList(props);\n            case 'download-list':\n                return renderDownloadList(props);\n            default:\n                return null\n        }\n    }\n    return null\n\n};\nconst renderIconList = (props) => {\n    const module = 'tool_steps';\n    const required_attributes = ['icon', 'title', 'description'];\n    if (!validateAttributes(props.collection[0], required_attributes)){\n        throwError.moduleAttr(module, required_attributes);return null}\n    const pointer_set = _.keyBy(props.collection, 'reference_alias');\n    if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n        throwError.module(moduleError.INVALID_MODULE_REF);return null}\n\n    return (\n        <>\n            {getTitle(props.setting.title)}\n            <Grid.Row>\n                <Grid.Column >\n                    <List divided relaxed>\n                        {props.collection.map(\n                            (item, key) => {\n                                return (\n                                    <List.Item key={`list-icon-${key}-${props.setting.collection}`}>\n                                        <List.Icon name={item.icon} size='large' verticalAlign='top' />\n                                        <List.Content>\n                                            <List.Header as='a'>{item.title}</List.Header>\n                                            <List.Description as='a'>{item.description}</List.Description>\n                                        </List.Content>\n                                    </List.Item>\n                                )\n                            }\n                        )}\n                    </List>\n                </Grid.Column>\n            </Grid.Row>\n        </>\n    );\n};\nconst renderDownloadList = (props) =>{\n    const module = 'tool_steps';\n    const required_attributes = ['link', 'title', 'description'];\n    if (!validateAttributes(props.collection[0].items[0], required_attributes)){\n        throwError.moduleAttr(module, required_attributes);return null}\n    const pointer_set = _.keyBy(props.collection, 'reference_alias');\n    if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n        throwError.module(moduleError.INVALID_MODULE_REF);return null}\n    return (\n        <Grid.Row>\n            <Grid.Column>\n                {getTitle(props.setting.title, 'h3')}\n                <List >\n                    {pointer_set[props.alias_ref].items.map(\n                        (item, key) => {\n                            return (\n                                <List.Item key={`download-list-${key}`}>\n                                    <Image avatar>\n                                        <a href={item.link} download>\n                                            <Icon avatar={'true'} circular inverted name='download' />\n                                        </a>\n                                    </Image>\n                                    <List.Content>\n                                        <List.Header>{item.title}</List.Header>\n                                        {item.description}\n                                    </List.Content>\n                                </List.Item>\n                            )\n                        }\n                    )}\n                </List>\n            </Grid.Column>\n        </Grid.Row>\n    );\n}\n\nexport default ListModule","import React from 'react'\nimport {Grid} from \"semantic-ui-react\";\nimport Parser from \"html-react-parser\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst FaqModule = (props) =>{\n    if (props.collection){\n        let module = 'faqs';\n        let required_attributes = ['question', 'answer'];\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column>\n                    {props.collection.map(\n                        (item, key) =>{\n\n                            return (\n                                <div key={`question-answer-${key}`}>\n                                    <p><b>Q: {item.question}</b></p>\n                                    {Parser(item.answer)}\n                                    <br/>\n                                </div>\n                            )\n                        }\n                    )}\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default FaqModule","import React from 'react'\nimport {Grid, Icon, Image} from \"semantic-ui-react\";\nimport {Card} from \"semantic-ui-react\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst checkImage = (cardData) =>{\n    try{\n        return cardData.image.data.full_url\n    }\n    catch (e) {\n        return 'https://via.placeholder.com/150'\n    }\n};\nconst renderCard =  (cardData ,key) =>{\n    return (\n        <Card key={`contact-card-${key}`}>\n            <Image src={checkImage(cardData)} wrapped ui={false} />\n            <Card.Content>\n                <Card.Header>{cardData.name}</Card.Header>\n                <Card.Meta>\n                    <span className='date'>\n                        Joined in {cardData.year_joined}{cardData.year_left? \", left in \"+cardData.year_left:\"\"}\n                    </span>\n                </Card.Meta>\n                <Card.Description>\n                    {cardData.job_description}\n                </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                    <Icon name='mail' />\n                    {cardData.email}\n            </Card.Content>\n        </Card>\n    )\n};\n\nconst ContactCardsModule = (props) =>{\n    if (props.collection){\n        let module = 'contact-cards';\n        let required_attributes = ['name', 'job_description', 'year_joined'];\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column>\n                    <Card.Group textAlign={'center'} itemsPerRow={3}>\n                        {props.collection.map(\n                            (item, key) =>{\n                                return renderCard(item, key)\n                            }\n                        )}\n                    </Card.Group>\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default ContactCardsModule","import React from 'react'\nimport {Form, Input} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) =>{\n    if(touched && error){\n        return(\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\nexport default (input, label, meta, inputAttr) =>{\n    return(\n        <Form.Field>\n            <label>{label}</label>\n            <Input {...input}  {...inputAttr} autoComplete='off' />\n            {renderError(meta)}\n        </Form.Field>\n    )\n};\n\n","import React from 'react'\nimport {Form, Input} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) =>{\n    if(touched && error){\n        return(\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\n\nexport default  ({ input: {value: omitValue, ...inputProps }, meta: omitMeta, ...props }) =>{\n    return(\n        <Form.Field>\n            <label>{props.label}</label>\n            <Input\n                type={'file'}\n                {...inputProps}\n                {...props.input}\n                autoComplete='off' />\n            {renderError(omitMeta)}\n        </Form.Field>\n    )\n};\n","import React from 'react'\nimport {Dropdown, Form} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) => {\n    if (touched && error) {\n        return (\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\nexport default (input, label, meta, inputAttr) => {\n    return (\n        <Form.Field>\n            <label>{label}</label>\n            <Dropdown selection {...input}\n                      {...inputAttr}\n                      value={input.value}\n                      onChange={(param, data) => input.onChange(data.value)}\n                      placeholder={label}\n            />\n            {renderError(meta)}\n        </Form.Field>\n    )\n};\n\n","import checkBox from './checkBoxInput'\nimport text from './textInput'\nimport file from './fileInput'\nimport slider from \"./sliderInput\";\nimport select from \"./selectInput\";\n\nexport const textInput = ({input,label,meta,inputAttr}) => text(input,label,meta,inputAttr);\nexport const fileInput = (props) => file(props);\nexport const selectInput = ({input,label,meta,inputAttr}) => select(input,label,meta,inputAttr);\nexport const checkBoxInput = ({input,label,meta,inputAttr={}}) => checkBox(input,label,meta,inputAttr);\nexport const sliderInput = ({input,label,meta,inputAttr={}}) => slider(input,label,meta,inputAttr);\n","import React, {Component} from 'react'\nimport {Button, Form, Grid, Icon, Segment, Transition} from \"semantic-ui-react\";\nimport {Field, reduxForm, reset} from \"redux-form\";\nimport {required} from \"../../constants/formValidationRules\";\nimport {fileInput, selectInput, textInput} from \"../helpers/redux-form-inputs\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\nimport {protocol} from \"../../constants/types\";\n\nclass FormModule extends Component{\n\n    state = {fileInputCode: 'fileCode'};\n    onSubmit = (formValues, dispatch) =>{\n        this.props.onSubmit(\n            this.props.collection['form'][0],\n            formValues\n        );\n        dispatch(reset('mainForm'));\n        this.setState({fileInputCode: Math.random().toString(36).substring(7)})\n    };\n    renderForm(){\n        if(this.props.collection['inputs'].length < 1){\n            return <b><i>Form under construction!</i></b>\n        }else{\n            return (\n                <div>\n                    {this.renderInputs()}\n                    <Button type={'submit'} icon labelPosition='left' size='large'  floated='right'>\n                        <Icon name='paper plane' />\n                        Run!\n                    </Button>\n                </div>\n            )\n        }\n    }\n    renderInputType = (input, key) => {\n        switch (input.input_type.type) {\n            case 'text':\n                return (\n                    <Field\n                        key={`field-input-${key}`}\n                        name={input.api_reference_parameter}\n                        component={textInput}\n                        validate={[ required ]}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`,\n                            type:'text',\n                        }}\n                    />\n                );\n            case 'file':\n                return (\n                    <Field\n                        key={`field-input-${key}-${this.state.fileInputCode}`}\n                        name={input.api_reference_parameter}\n                        component={fileInput}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`\n                        }}\n                    />\n                );\n            case 'select':\n                const options = this.createOptions(key, input.option_titles, input.option_values);\n                return (\n                    <Field\n                        key={`field-input-${key}`}\n                        name={input.api_reference_parameter}\n                        component={selectInput}\n                        validate={[ required ]}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`,\n                            options: options}\n\n                        }\n                    />\n                );\n            default:\n                return null\n\n        }\n    };\n    createOptions = (index, titles, values) => {\n        const options = [];\n        titles.forEach(\n            (title, key) =>{\n                options.push({\n                    'key': `optionItem-${index}-${key}`,\n                    'text': titles[key],\n                    'value': values[key]\n                })\n            }\n        );\n        return options\n    };\n    renderInputs(){\n        return this.props.collection['inputs'].map(\n            (input, key) => this.renderInputType(input, key)\n        )\n    }\n\n    render() {\n        if(!this.props.collection['inputs']){\n            return null\n        }\n        let module = 'form:form';\n        let required_attributes = ['title', 'api', 'tool_reference', 'description'];\n        if (!validateAttributes(this.props.collection['form'][0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        module = 'form:inputs';\n        required_attributes = ['api_reference_parameter', 'label', 'input_type'];\n        if (!validateAttributes(this.props.collection['inputs'][0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return(\n                <Grid.Row>\n                    <Grid.Column>\n                        {(this.props.protocolStatus === protocol.PROTOCOL_COMPLETED)?(\n                            <Transition\n                                transitionOnMount={true}\n                                animation={\"slide down\"}\n                                duration={{ show:1000 }}\n                            >\n                                <Segment color={'green'}>\n                                    <b>Algorithm executed!</b> Dataset will be in your mail when ready\n                                </Segment>\n                            </Transition>\n                        ):''\n                        }\n                        {(this.props.protocolStatus === protocol.PROTOCOL_FAILED)?(\n                            <Transition\n                                transitionOnMount={true}\n                                animation={\"slide down\"}\n                                duration={{ show:1000 }}\n                            >\n                                <Segment color={'red'}>\n                                    <b>Algorithm encountered an error!</b> please make sure the configuration is setup correctly\n                                </Segment>\n                            </Transition>\n                        ):''\n                        }\n                        <h3>Configuration</h3>\n                        <Form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                            {this.renderForm()}\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n        )\n    }\n\n}\nexport default reduxForm({\n    form:'mainForm'\n})(FormModule)","import React, {Component} from 'react'\nimport {\n    Button,\n    Card,\n    Container,\n    Dimmer,\n    Form,\n    Grid,\n    Header,\n    Icon,\n    Image,\n    Loader,\n    Search,\n    Segment\n} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport Plot from 'react-plotly.js';\n\n\nconst initialState = {isLoading: false, value: '', selected: false, tissues: [], stages:[]}\n\nclass GeneFinderModule extends Component {\n    state = initialState;\n\n\n    generatePlotTraces = (data) =>{\n        const plotTraces = [];\n        const stage_groups = _.groupBy(data, 'stage')\n        const stages  = this.state.stages;\n        Object.keys(stage_groups).forEach(function(key) {\n            let items = _.remove(stage_groups[key], function(currentObject) {\n                return currentObject.count !== \"nan\";\n            });\n            const trace = {\n                x: _.map(items, 'tissue'),\n                y: _.map(items, 'count'),\n                mode: 'markers',\n                type: 'scatter',\n                name: stages[key],\n                opacity: 0.5,\n                marker: {\n                    size: 20\n                }\n            };\n            plotTraces.push(trace)\n        });\n        return plotTraces\n    }\n    renderGraph(){\n        if(this.props.moduleData.geneCounts.length > 0) {\n            const plotTraces = this.generatePlotTraces(this.props.moduleData.geneCounts)\n            return (\n                    <Plot\n                    data={plotTraces}\n                    layout={{width: 1200, height: 600, hovermode:'closest',\n                        title: `Transcription in ${this.props.moduleData.activeGene.ensg}\\ \n${this.props.moduleData.activeGene.symbol?` (${this.props.moduleData.activeGene.symbol})`:''}\\\n${this.props.moduleData.activeGene.description?` - ${this.props.moduleData.activeGene.description}`:''}`,\n                        xaxis: {\n                            tickvals: _.range(1, this.props.collection.tissue.length+1),\n                            ticktext: _.values(this.state.tissues)\n                        }}}\n                    />\n            )\n        }else if(this.state.selected){\n            return(\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Preparing transcription data...' />\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n                    </Segment>\n                </div>\n            )\n        }\n        return null\n    }\n\n    handleResultSelect = (e, { result }) => {\n        this.props.setGene(result)\n        this.setState({value: result.ensg, selected:true})\n        this.props.getGeneCounts(result.id)\n    }\n    handleSearchChange = (event) =>{\n        this.props.getGeneSuggestions(event.target.value);\n        this.setState({value: event.target.value, selected:false})\n    }\n    componentDidMount() {\n        this.setState({tissues:_.chain(this.props.collection.tissue).keyBy('id').mapValues('name').value()})\n        this.setState({stages:_.chain(this.props.collection.stage).keyBy('id').mapValues('name').value()})\n    }\n\n    render() {\n        const {isLoading, value, tissues, stages} = this.state;\n        if(tissues.length < 1 || stages.length < 1){\n            return (\n                <div>\n                    <Segment>\n                        <Dimmer active inverted>\n                            <Loader content='Loading' />\n                        </Dimmer>\n                        <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n                    </Segment>\n                </div>\n            )\n        }\n        return (\n            <>\n                <Grid.Row centered>\n                    <Grid.Column width={8}>\n                        <Form >\n                            <Form.Field>\n                                <label>Search using the Gene symbol or ENSG-code</label>\n                                <Search\n                                    loading={isLoading}\n                                    onResultSelect={this.handleResultSelect}\n                                    onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                                        leading: true,\n                                    })}\n                                    results={this.props.moduleData.suggestions}\n                                    value={value}\n                                    {...this.props}\n                                />\n                            </Form.Field>\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={16}>\n                        {this.renderGraph()}\n                    </Grid.Column>\n                </Grid.Row>\n            </>\n        )\n    }\n\n}\n\nexport default GeneFinderModule;","import React from 'react'\n\nimport ButtonModule from './ButtonModule'\nimport ContentModule from './ContentModule'\nimport ToolStepModule from './ToolStepsModule'\nimport ListModule from \"./ListModule\";\nimport FaqModule from \"./FaqModule\";\nimport ContactCardsModule from \"./ContactCardsModule\";\nimport FormModule from \"./FormModule\";\nimport {throwError} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\nimport GeneFinderModule from \"./GeneFinderModule\";\nimport Page from \"../Page\";\n\nconst ModuleLoader = (props) =>  {\n    switch(props.setting.module) {\n        case 'content':\n            return (\n                <ContentModule\n                    setting={props.setting}\n                    collection={props.collection}\n                />\n            );\n        case 'button':\n            return (\n                <ButtonModule\n                    setting={props.setting}\n                />\n            );\n        case 'tool_steps':\n            return (\n                <ToolStepModule\n                    collection={props.collection}\n                />\n            );\n        case 'list':\n            return(\n                <ListModule\n                    alias_ref={props.setting.alias_ref}\n                    setting={props.setting}\n                    collection={props.collection}\n                />\n            );\n        case 'faqs':\n            return (\n                <FaqModule\n                    collection={props.collection}\n                />\n            );\n        case 'contact-cards':\n            return(\n                <ContactCardsModule\n                    collection={props.collection}\n                />\n            );\n        case 'form':\n            return(\n                <FormModule\n                    onSubmit={props.onSubmit}\n                    collection={props.collection}\n                    protocolStatus={props.protocolStatus}\n                />\n            );\n        case 'transcript-finder':\n            return (\n                <GeneFinderModule\n                    collection={props.collection}\n                    moduleData={props.modulesData.geneFinder}\n                    getGeneSuggestions={props.getGeneSuggestions}\n                    setGene={props.setGene}\n                    setting={props.setting}\n                    getGeneCounts={props.getGeneCounts}\n                />\n            )\n        default:\n            throwError.module(moduleError.INVALID_MODULE);\n            return null\n    }\n};\n\nexport default ModuleLoader","\nimport React, {Component} from 'react'\nimport ModuleLoader from './modules/moduleLoader'\nimport {Grid, Header} from \"semantic-ui-react\";\n\nclass Page extends Component{\n\n    getCollection (collection){\n        if (!collection){\n            return null\n        }\n        if (collection in this.props.collections){\n            return this.props.collections[collection]\n        }\n        else{\n            return null\n        }\n    }\n    renderModules(){\n        return this.props.config.settings.map(\n            (setting, key) =>{\n                if (setting.module === 'form'){\n                    return(\n                        <ModuleLoader\n                            setGene={this.props.setGene}\n                            getGeneSuggestions={this.props.getGeneSuggestions}\n                            getGeneCounts={this.props.getGeneCounts}\n                            onSubmit={this.props.onSubmit}\n                            page={this.props.config.name}\n                            key={`module-${this.props.config.reference}-${key}`}\n                            collection={{\n                                'form': this.getCollection(setting.collection),\n                                'inputs': this.getCollection('inputs')\n                            }}\n                            setting={setting}\n                            protocolStatus={this.props.protocolStatus}\n                        />\n                    )\n                }\n                if(setting.module === 'transcript-finder'){\n                    return (\n                        <ModuleLoader\n                            modulesData={this.props.modulesData}\n                            setGene={this.props.setGene}\n                            getGeneSuggestions={this.props.getGeneSuggestions}\n                            getGeneCounts={this.props.getGeneCounts}\n                            page={this.props.config.name}\n                            key={`module-${this.props.config.reference}-${key}`}\n                            collection={{\n                                'tissue': this.getCollection('tissue'),\n                                'stage': this.getCollection('stage')\n                            }}\n                            setting={setting}\n                        />\n                    )\n                }\n                return (\n                    <ModuleLoader\n                        modulesData={this.props.modulesData}\n                        setGene={this.props.setGene}\n                        getGeneSuggestions={this.props.getGeneSuggestions}\n                        getGeneCounts={this.props.getGeneCounts}\n                        page={this.props.config.name}\n                        key={`module-${this.props.config.reference}-${key}`}\n                        collection={this.getCollection(setting.collection)}\n                        setting={setting}\n                    />\n                )\n            }\n        )\n    }\n    render() {\n        if (!this.props.path){\n            return null\n        }\n        return (\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Header as='h1' dividing>\n                            {this.props.config.name}\n                        </Header>\n                    </Grid.Column>\n                </Grid.Row>\n                {this.renderModules()}\n            </Grid>\n        )\n    }\n\n}\nexport  default  Page;","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\n\nimport App from \"../components/App\";\nimport {Dimmer, Icon, Loader, Segment} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport 'fs'\nimport history from '../history'\n\nimport {getConfig, getApplication} from '../actions/configActions'\nimport {getCollections} from '../actions/collectionActions'\nimport {Route, Router, Switch} from \"react-router-dom\";\nimport Page from \"../components/Page\";\nimport {directProtocol} from '../actions/protocols/directProtocolActions'\n\n\n\nimport {projectName, baseUrl} from \"../config.js\";\nimport {throwError} from \"../utils/generalHelpers\";\nimport {configError} from '../constants/errorTypes'\nimport GeneFinderModule from \"../components/modules/GeneFinderModule\";\nimport {getGeneSuggestions, setGene, getGeneCounts} from \"../actions/modules/geneFinderActions\";\n\n\nclass AppContainer extends Component {\n\n    state = {\n        menu: [],\n        sloganText: false,\n        pageView: false,\n        render: false,\n        config: false\n    };\n    onSubmit = (config, values) => {\n        switch (config.api.protocol) {\n            case 'direct':\n                this.props.directProtocol(config, values);\n            break;\n            default:\n                console.log('No valid protocol connected to form')\n        }\n    };\n    getCollections = () =>{\n        const collections = [];\n        this.props.config.forEach(\n            (settingItem) => {\n                settingItem.settings.forEach(\n                    (item) =>{\n                        if(item.collection){\n                            if(item.collection === 'form'){\n                                collections.push(item.collection);\n                                collections.push('inputs');\n                            }\n                            collections.push(item.collection)\n                        }\n                        else{\n                            if(item.module === \"transcript-finder\"){\n                                collections.push(\"tissue\")\n                                collections.push(\"stage\")\n                            }\n                        }\n                    }\n                )\n            }\n        );\n        return _.uniq(collections)\n    };\n\n    loadConfig = async () =>{\n        await this.props.getApplication();\n        await this.props.getConfig();\n        const collections = this.getCollections();\n        await this.props.getCollections(collections);\n        this.setState({menu:this.props.config});\n    };\n\n    UNSAFE_componentWillMount(){\n        if(baseUrl !== null){\n            this.setState({config: true});\n        }\n    }\n    componentDidMount() {\n        this.loadConfig();\n        setTimeout(function() {\n            this.setState({render: true})\n        }.bind(this), 2000);\n        setTimeout(\n            () => {\n                this.setState({sloganText: true})\n            }, 1200);\n    }\n    renderRoutes() {\n        return this.props.config.map(\n            (item) =>{\n                return (\n                    <Route\n                        key={`route-${item.reference}`}\n                        path={'/'+item.reference}\n                        exact\n                        render={(props) => this.wrapTransition(\n                            <Page\n                                {...props}\n                                modulesData={this.props.modules}\n                                getGeneSuggestions={this.props.getGeneSuggestions}\n                                setGene={this.props.setGene}\n                                getGeneCounts={this.props.getGeneCounts}\n                                path={'/'+item.reference}\n                                config={item}\n                                collections={this.props.collections}\n                                onSubmit={this.onSubmit}\n                                protocolStatus={this.props.protocolStatus}\n                            />)\n                        }\n                    />\n                )\n            }\n        )\n    }\n    wrapTransition =  (object) => {\n        return object\n    };\n    renderContent() {\n        if(this.props.config.length === 0){\n            return null\n        }\n        return (\n            <Router history={history}>\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        exact\n                        render={(props) => this.wrapTransition(\n                            <Page {...props}\n                                  modulesData={this.props.modules}\n                                  getGeneSuggestions={this.props.getGeneSuggestions}\n                                  setGene={this.props.setGene}\n                                  getGeneCounts={this.props.getGeneCounts}\n                                  path={'/'+this.props.config[0].reference}\n                                  config={this.props.config[0]}\n                                  collections={this.props.collections}\n                                  protocolStatus={this.props.protocolStatus}\n                                  onSubmit={this.onSubmit}\n                            />)\n                        }\n                    />\n                    {this.renderRoutes()}\n                </Switch>\n            </Router>\n        );\n    }\n    render() {\n        if(this.state.render && !_.isEmpty(this.props.config)) {\n            document\n                .documentElement.style.setProperty(\"--color-primary\", this.props.application.primary_color);\n            return (<App\n                    applicationDetails={this.props.application}\n                    activePageContent={this.renderContent()}\n                    collections={this.props.collections}\n                    config={this.props.config}\n                    menu={this.props.config}\n                    />\n            )\n        }\n        else if(!this.state.render){\n            return (\n                <Segment className={'loading-segment'}>\n                    <Dimmer active>\n                        <Loader indeterminate inline='centered'>Preparing the {projectName} website</Loader>\n                    </Dimmer>\n                </Segment>\n            )\n        }\n        else{\n            throwError.config(configError.FAILED_CONFIG);\n            return (\n                <Segment className={'loading-segment'}>\n                    <Dimmer active>\n                        <Icon name='close' size='huge' inverted color='grey' />\n                        <br/>\n                        <p>Failed to load website</p>\n                    </Dimmer>\n                </Segment>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        config: _.values(state.config),\n        collections: state.collections,\n        protocolStatus:state.protocolStatus,\n        application: state.application[0],\n        modules: state.modules\n    }\n};\nexport default connect(mapStateToProps,{\n        getConfig,\n        getApplication,\n        getCollections,\n        directProtocol,\n        getGeneSuggestions,\n        setGene,\n        getGeneCounts\n}\n    )(AppContainer)","import SascWebApi from \"../apis/SascWeb\";\nimport {getOnlyPublished} from '../utils/generalHelpers'\nimport {application, config} from '../constants/types'\n\n\nexport const getConfig = () => async (dispatch) =>{\n    const result = await SascWebApi.get('items/config');\n    const publishedConfig = getOnlyPublished(result.data.data);\n    dispatch({type: config.SET_CONFIG, payload: publishedConfig})\n};\n\nexport const getApplication = () => async (dispatch) =>{\n    const result = await SascWebApi.get('items/application');\n    const publishedConfig = getOnlyPublished(result.data.data);\n    dispatch({type: application.GET_APPLICATION_DONE, payload: publishedConfig})\n};","import SascWebApi from \"../apis/SascWeb\";\nimport {getOnlyPublished} from '../utils/generalHelpers'\nimport {collections} from '../constants/types'\n\n\nexport const getCollections = (rawCollections) => (dispatch) =>{\n    let count = 0;\n    let collectionData = {};\n    rawCollections.forEach( async (item) => {\n        const result = await SascWebApi.get('items/'+item+'?fields=*.*.*');\n        collectionData[item] = getOnlyPublished(result.data.data);\n        count++;\n        if(count === rawCollections.length){\n            dispatch({type: collections.ADD_COLLECTION, payload:collectionData})\n        }\n    });\n\n};\n\n\n\n","import axios from \"axios\";\n\nimport {protocol} from '../../constants/types'\n\nexport const directProtocol = (config, data) => async (dispatch) => {\n    let bodyFormData = new FormData();\n    bodyFormData.set('email', data.email);\n    bodyFormData.set('training', data.training);\n    bodyFormData.append('file', data.file[0]);\n    const result = await axios({\n        method: 'post',\n        url: config.tool_reference,\n        data: bodyFormData,\n        config: { headers: {'Content-Type': 'multipart/form-data',  'Accept': 'text/html' }}\n    });\n    if(result.data.includes(\"Succesfully submitted. Please check your email in a few minutes\")){\n        dispatch({\n            type:protocol.PROTOCOL_COMPLETED\n        });\n    }else{\n        dispatch({\n            type:protocol.PROTOCOL_FAILED\n        });\n    }\n};","import SascWebApi from \"../../apis/SascWeb\";\nimport {modules} from \"../../constants/types\";\n\n\nexport const getGeneSuggestions = (searchTerm) => async (dispatch) =>{\n    const result = await SascWebApi.get(`/items/gene?limit=5&filter[symbol][logical]=or&filter[symbol][rlike]=${searchTerm}%&filter[description][logical]=or&filter[description][rlike]=${searchTerm}%&filter[ensg][logical]=or&filter[ensg][rlike]=${searchTerm}%`);\n    dispatch({type: modules.geneFinder.GET_SUGGESTIONS, payload: result.data.data})\n};\n\nexport const getGeneCounts = (id) => async (dispatch) =>{\n    const result = await SascWebApi.get(`/items/transcript?filter[gene][eq]=${id}`);\n    dispatch({type: modules.geneFinder.GET_GENE_COUNTS, payload: result.data.data})\n};\nexport const setGene = (item) =>{\n    return {type:modules.geneFinder.SET_ACTIVE_GENE, payload:item}\n}","import {combineReducers} from \"redux\";\nimport suggestionsReducer from \"./suggestionsReducer\";\nimport activeGeneReducer from \"./activeGeneReducer\";\nimport transcriptsReducer from \"./transcriptsReducer\";\n\n export const geneFinderReducers = combineReducers({\n    suggestions: suggestionsReducer,\n    activeGene: activeGeneReducer,\n     geneCounts: transcriptsReducer\n});","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state=[], action) => {\n    switch (action.type) {\n        case modules.geneFinder.GET_SUGGESTIONS:\n            const items= [];\n            _.values(action.payload).forEach(\n                (item, value) => {\n                    if(!item.symbol){\n                        items.push({\n                            title: `${item.ensg}`,\n                            description: item.description,\n                            id:item.id,\n                            ensg: item.ensg\n                        })\n                    }else{\n                        items.push({\n                            title: `${item.symbol} | ${item.ensg}`,\n                            description: item.description,\n                            id:item.id,\n                            ensg: item.ensg,\n                            symbol: item.symbol\n                        })\n                    }\n\n                }\n            );\n            return items;\n        default:\n            return state;\n    }\n}","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case modules.geneFinder.SET_ACTIVE_GENE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {modules} from '../../../constants/types'\nimport _ from \"lodash\"\n\nexport default (state=[], action) => {\n    switch (action.type) {\n        case modules.geneFinder.GET_GENE_COUNTS:\n            return _.values(action.payload)\n        case modules.geneFinder.SET_ACTIVE_GENE:\n            return []\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\nimport {geneFinderReducers} from \"./genefinder\";\n\nexport const modules = combineReducers({\n    geneFinder: geneFinderReducers\n});","import {combineReducers} from \"redux\";\nimport {reducer as formReducer} from 'redux-form'\nimport configReducer from './configReducer'\nimport collectionsReducer from \"./collectionsReducer\";\nimport protocolStatusReducer from './protocols/protocolStatusReducer'\nimport applicationReducer from \"./applicationReducer\";\nimport {modules} from \"./modules\";\n\nexport default combineReducers({\n    form: formReducer,\n    protocolStatus: protocolStatusReducer,\n    application: applicationReducer,\n    config: configReducer,\n    collections: collectionsReducer,\n    modules: modules\n});","import {protocol} from \"../../constants/types\";\n\nexport default (state='', action) => {\n    switch (action.type) {\n        case protocol.PROTOCOL_COMPLETED:\n            return protocol.PROTOCOL_COMPLETED;\n\n        case protocol.PROTOCOL_FAILED:\n            return protocol.PROTOCOL_FAILED;\n        default:\n            return ''\n    }\n}","import {application} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case application.GET_APPLICATION_DONE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {config} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case config.SET_CONFIG:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {collections} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case collections.ADD_COLLECTION:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport App from \"./containers/AppContainer\";\nimport 'semantic-ui-css/semantic.min.css'\nimport './assets/main.css'\nimport reducers from './reducers'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}